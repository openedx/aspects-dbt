{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.0", "generated_at": "2024-03-07T15:19:01.795543Z", "invocation_id": "66c00f24-4f39-4d35-aca6-dc0b12bef38a", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.322894Z", "completed_at": "2024-03-07T15:19:01.334609Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.336166Z", "completed_at": "2024-03-07T15:19:01.336184Z"}], "thread_id": "Thread-1", "execution_time": 0.016017436981201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_course_blocks", "compiled": true, "compiled_code": "select\n    courses.org as org,\n    courses.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    blocks.location as block_id,\n    blocks.block_name as block_name,\n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', blocks.display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', blocks.display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    as subsection_number,\n    splitByString(' - ', blocks.display_name_with_location)[1] as hierarchy_location,\n    blocks.display_name_with_location as display_name_with_location,\n    graded,\n    case\n        when block_id like '%@chapter+block@%'\n        then 'section'\n        when block_id like '%@sequential+block@%'\n        then 'subsection'\n        when block_id like '%@vertical+block@%'\n        then 'unit'\n        else regexpExtract(block_id, '@([^+]+)\\+block@', 1)\n    end as block_type\nfrom `event_sink`.`course_block_names` blocks\njoin\n    `event_sink`.`course_names` courses\n    on blocks.course_key = courses.course_key\n    settings join_algorithm = 'direct'", "relation_name": "`xapi`.`dim_course_blocks`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.340755Z", "completed_at": "2024-03-07T15:19:01.347276Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.348764Z", "completed_at": "2024-03-07T15:19:01.348771Z"}], "thread_id": "Thread-1", "execution_time": 0.01078939437866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.xapi_events_all_parsed", "compiled": true, "compiled_code": "\n\nselect\n    event_id as event_id,\n    JSON_VALUE(event::String, '$.verb.id') as verb_id,\n    COALESCE(\n        NULLIF(JSON_VALUE(event::String, '$.actor.account.name'), ''),\n        NULLIF(JSON_VALUE(event::String, '$.actor.mbox'), ''),\n        JSON_VALUE(event::String, '$.actor.mbox_sha1sum')\n    ) as actor_id,\n    JSON_VALUE(event::String, '$.object.id') as object_id,\n    -- If the contextActivities parent is a course, use that. It can be a \"course\"\n    -- type, or a \"cmi.interaction\" type for multiple question problem submissions.\n    -- Otherwise use the object id for the course id.\n    multiIf(\n        -- If the contextActivities parent is a course, use that\n        JSON_VALUE(\n            event::String, '$.context.contextActivities.parent[0].definition.type'\n        )\n        = 'http://adlnet.gov/expapi/activities/course',\n        JSON_VALUE(event::String, '$.context.contextActivities.parent[0].id'),\n        -- Else if the contextActivities parent is a GroupActivity, it's a multi\n        -- question problem and we use the grouping id\n        JSON_VALUE(event::String, '$.context.contextActivities.parent[0].objectType')\n        in ('Activity', 'GroupActivity'),\n        JSON_VALUE(event::String, '$.context.contextActivities.grouping[0].id'),\n        -- Otherwise use the object id\n        JSON_VALUE(event::String, '$.object.id')\n    ) as course_id,\n    coalesce(\n        get_org_from_course_url(course_id), get_org_from_ccx_course_url(course_id), ''\n    ) as org,\n    emission_time as emission_time,\n    event::String as event\nfrom `xapi`.`xapi_events_all`", "relation_name": "`xapi`.`xapi_events_all_parsed`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.353385Z", "completed_at": "2024-03-07T15:19:01.357690Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.359282Z", "completed_at": "2024-03-07T15:19:01.359289Z"}], "thread_id": "Thread-1", "execution_time": 0.008813619613647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_problem_id", "compiled": true, "compiled_code": "select\n    'http://local.edly.io:8000/xblock/block-v1:edunext+demo+demo+ccx+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:edunext+demo+demo+ccx+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.363598Z", "completed_at": "2024-03-07T15:19:01.367159Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.368637Z", "completed_at": "2024-03-07T15:19:01.368644Z"}], "thread_id": "Thread-1", "execution_time": 0.0076749324798583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_problem_id_with_ccx", "compiled": true, "compiled_code": "select\n    'http://local.edly.io:8000/xblock/ccx-block-v1:edunext+demo+demo+ccx@1+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_]*)(_\\d_\\d)?', 1\n    )\n\n    != 'ccx-block-v1:edunext+demo+demo+ccx@1+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.372952Z", "completed_at": "2024-03-07T15:19:01.377769Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.379310Z", "completed_at": "2024-03-07T15:19:01.379317Z"}], "thread_id": "Thread-1", "execution_time": 0.008980274200439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.int_pages_per_subsection", "compiled": true, "compiled_code": "with\n    pages_per_subsection as (\n        select\n            org, course_key, section_number, subsection_number, count(*) as page_count\n        from `xapi`.`dim_course_blocks`\n        where block_id like '%@vertical+block@%'\n        group by org, course_key, section_number, subsection_number\n    )\n\nselect\n    pps.org as org,\n    pps.course_key as course_key,\n    pps.section_number as section_number,\n    section_blocks.display_name_with_location as section_with_name,\n    pps.subsection_number as subsection_number,\n    subsection_blocks.display_name_with_location as subsection_with_name,\n    pps.page_count as page_count\nfrom pages_per_subsection pps\nleft join\n    `xapi`.`dim_course_blocks` section_blocks\n    on (\n        pps.section_number = section_blocks.hierarchy_location\n        and pps.org = section_blocks.org\n        and pps.course_key = section_blocks.course_key\n        and section_blocks.block_id like '%@chapter+block@%'\n    )\nleft join\n    `xapi`.`dim_course_blocks` subsection_blocks\n    on (\n        pps.subsection_number = subsection_blocks.hierarchy_location\n        and pps.org = subsection_blocks.org\n        and pps.course_key = subsection_blocks.course_key\n        and subsection_blocks.block_id like '%@sequential+block@%'\n    )", "relation_name": "`xapi`.`int_pages_per_subsection`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.383639Z", "completed_at": "2024-03-07T15:19:01.388202Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.389693Z", "completed_at": "2024-03-07T15:19:01.389700Z"}], "thread_id": "Thread-1", "execution_time": 0.008717060089111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.completion_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSON_VALUE(\n        event,\n        '$.result.extensions.\"https://w3id.org/xapi/cmi5/result/extensions/progress\"'\n    ) as progress_percent\nfrom `xapi`.`xapi_events_all_parsed`\nwhere verb_id = 'http://adlnet.gov/expapi/verbs/progressed'", "relation_name": "`xapi`.`completion_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.394127Z", "completed_at": "2024-03-07T15:19:01.398849Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.400372Z", "completed_at": "2024-03-07T15:19:01.400379Z"}], "thread_id": "Thread-1", "execution_time": 0.008957624435424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.enrollment_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSON_VALUE(\n        event,\n        '$.object.definition.extensions.\"https://w3id.org/xapi/acrossx/extensions/type\"'\n    ) as enrollment_mode\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'http://adlnet.gov/expapi/verbs/registered',\n        'http://id.tincanapi.com/verb/unregistered'\n    )", "relation_name": "`xapi`.`enrollment_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.404892Z", "completed_at": "2024-03-07T15:19:01.409505Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.411031Z", "completed_at": "2024-03-07T15:19:01.411038Z"}], "thread_id": "Thread-1", "execution_time": 0.008877277374267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.forum_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    org,\n    splitByString('/', course_id)[-1] as course_key,\n    object_id,\n    actor_id,\n    verb_id\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    JSON_VALUE(event, '$.object.definition.type')\n    = 'http://id.tincanapi.com/activitytype/discussion'", "relation_name": "`xapi`.`forum_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.415571Z", "completed_at": "2024-03-07T15:19:01.420294Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.421796Z", "completed_at": "2024-03-07T15:19:01.421803Z"}], "thread_id": "Thread-1", "execution_time": 0.009062528610229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.grading_events", "compiled": true, "compiled_code": "\n\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSONExtractFloat(event, 'result', 'score', 'scaled') as scaled_score\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'http://id.tincanapi.com/verb/earned',\n        'https://w3id.org/xapi/acrossx/verbs/evaluated'\n    )\n    or (\n        verb_id in (\n            'http://adlnet.gov/expapi/verbs/passed',\n            'http://adlnet.gov/expapi/verbs/failed'\n        )\n        and JSON_VALUE(event::String, '$.object.definition.type')\n        = 'http://adlnet.gov/expapi/activities/course'\n    )", "relation_name": "`xapi`.`grading_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.426357Z", "completed_at": "2024-03-07T15:19:01.431207Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.432730Z", "completed_at": "2024-03-07T15:19:01.432737Z"}], "thread_id": "Thread-1", "execution_time": 0.009145021438598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.navigation_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    splitByString('/xblock/', object_id)[-1] as block_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSONExtractString(event, 'object', 'definition', 'type') as object_type,\n    -- clicking a link and selecting a module outline have no starting-position field\n    if(\n        object_type in (\n            'http://adlnet.gov/expapi/activities/link',\n            'http://adlnet.gov/expapi/activities/module'\n        ),\n        0,\n        JSONExtractInt(\n            event,\n            'context',\n            'extensions',\n            'http://id.tincanapi.com/extension/starting-position'\n        )\n    ) as starting_position,\n    JSONExtractString(\n        event, 'context', 'extensions', 'http://id.tincanapi.com/extension/ending-point'\n    ) as ending_point\nfrom `xapi`.`xapi_events_all_parsed`\nwhere verb_id in ('https://w3id.org/xapi/dod-isd/verbs/navigated')", "relation_name": "`xapi`.`navigation_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.437168Z", "completed_at": "2024-03-07T15:19:01.484954Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.486508Z", "completed_at": "2024-03-07T15:19:01.486517Z"}], "thread_id": "Thread-1", "execution_time": 0.05205821990966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.problem_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSON_VALUE(event, '$.result.response') as responses,\n    JSON_VALUE(event, '$.result.score.scaled') as scaled_score,\n    if(\n        verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated',\n        cast(JSON_VALUE(event, '$.result.success') as Bool),\n        false\n    ) as success,\n    JSON_VALUE(event, '$.object.definition.interactionType') as interaction_type,\n    if(\n        verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated',\n        cast(\n            JSON_VALUE(\n                event,\n                '$.object.definition.extensions.\"http://id.tincanapi.com/extension/attempt-id\"'\n            ) as Int16\n        ),\n        0\n    ) as attempts\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'https://w3id.org/xapi/acrossx/verbs/evaluated',\n        'http://adlnet.gov/expapi/verbs/passed',\n        'http://adlnet.gov/expapi/verbs/asked'\n    )", "relation_name": "`xapi`.`problem_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.491136Z", "completed_at": "2024-03-07T15:19:01.495903Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.497417Z", "completed_at": "2024-03-07T15:19:01.497423Z"}], "thread_id": "Thread-1", "execution_time": 0.009119272232055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.video_playback_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    ceil(\n        CAST(\n            coalesce(\n                nullIf(\n                    JSON_VALUE(\n                        event,\n                        '$.result.extensions.\"https://w3id.org/xapi/video/extensions/time\"'\n                    ),\n                    ''\n                ),\n                nullIf(\n                    JSON_VALUE(\n                        event,\n                        '$.result.extensions.\"https://w3id.org/xapi/video/extensions/time-from\"'\n                    ),\n                    ''\n                ),\n                '0.0'\n            ),\n            'Decimal32(2)'\n        )\n    ) as video_position,\n    JSONExtractInt(\n        event, 'context', 'extensions', 'https://w3id.org/xapi/video/extensions/length'\n    ) as video_duration\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    (\n        verb_id in (\n            'http://adlnet.gov/expapi/verbs/completed',\n            'http://adlnet.gov/expapi/verbs/initialized',\n            'http://adlnet.gov/expapi/verbs/terminated',\n            'https://w3id.org/xapi/video/verbs/paused',\n            'https://w3id.org/xapi/video/verbs/played',\n            'https://w3id.org/xapi/video/verbs/seeked'\n        )\n    )\n    and (object_id like '%video+block%')", "relation_name": "`xapi`.`video_playback_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.501868Z", "completed_at": "2024-03-07T15:19:01.506449Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.507953Z", "completed_at": "2024-03-07T15:19:01.507960Z"}], "thread_id": "Thread-1", "execution_time": 0.00884556770324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.video_transcript_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    org,\n    splitByString('/', course_id)[-1] as course_key,\n    splitByString('/xblock/', object_id)[2] as video_id,\n    actor_id,\n    JSONExtractBool(\n        event,\n        'result',\n        'extensions',\n        'https://w3id.org/xapi/video/extensions/cc-enabled'\n    ) as cc_enabled\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in ('http://adlnet.gov/expapi/verbs/interacted')\n    and JSONHas(\n        event,\n        'result',\n        'extensions',\n        'https://w3id.org/xapi/video/extensions/cc-enabled'\n    )", "relation_name": "`xapi`.`video_transcript_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.512439Z", "completed_at": "2024-03-07T15:19:01.516743Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.518230Z", "completed_at": "2024-03-07T15:19:01.518237Z"}], "thread_id": "Thread-1", "execution_time": 0.008544206619262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_completions", "compiled": true, "compiled_code": "with\n    completions as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            progress_percent,\n            if(\n                object_id like '%/course/%',\n                splitByString('/course/', object_id)[-1],\n                splitByString('/xblock/', object_id)[-1]\n            ) as entity_id,\n            cast(progress_percent as Float) / 100 as scaled_progress\n        from `xapi`.`completion_events`\n    )\n\nselect\n    completions.emission_time as emission_time,\n    completions.org as org,\n    completions.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    completions.entity_id as entity_id,\n    if(blocks.block_name != '', blocks.block_name, courses.course_name) as entity_name,\n    if(\n        blocks.block_name != '', blocks.display_name_with_location, null\n    ) as entity_name_with_location,\n    completions.actor_id as actor_id,\n    cast(completions.scaled_progress as Float) as scaled_progress,\n    case\n        when scaled_progress >= 0.9\n        then '90-100%'\n        when scaled_progress >= 0.8 and scaled_progress < 0.9\n        then '80-89%'\n        when scaled_progress >= 0.7 and scaled_progress < 0.8\n        then '70-79%'\n        when scaled_progress >= 0.6 and scaled_progress < 0.7\n        then '60-69%'\n        when scaled_progress >= 0.5 and scaled_progress < 0.6\n        then '50-59%'\n        when scaled_progress >= 0.4 and scaled_progress < 0.5\n        then '40-49%'\n        when scaled_progress >= 0.3 and scaled_progress < 0.4\n        then '30-39%'\n        when scaled_progress >= 0.2 and scaled_progress < 0.3\n        then '20-29%'\n        when scaled_progress >= 0.1 and scaled_progress < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as completion_bucket\nfrom completions\njoin\n    `event_sink`.`course_names` courses\n    on completions.course_key = courses.course_key\nleft join\n    `event_sink`.`course_block_names` blocks\n    on completions.entity_id = blocks.location", "relation_name": "`xapi`.`fact_completions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.522598Z", "completed_at": "2024-03-07T15:19:01.526417Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.527956Z", "completed_at": "2024-03-07T15:19:01.527962Z"}], "thread_id": "Thread-1", "execution_time": 0.008053779602050781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_enrollments", "compiled": true, "compiled_code": "with\n    enrollments as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            enrollment_mode,\n            splitByString('/', verb_id)[-1] as enrollment_status\n        from `xapi`.`enrollment_events`\n    )\n\nselect\n    enrollments.emission_time as emission_time,\n    enrollments.org as org,\n    enrollments.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    enrollments.actor_id as actor_id,\n    enrollments.enrollment_mode as enrollment_mode,\n    enrollments.enrollment_status as enrollment_status\nfrom enrollments\njoin\n    `event_sink`.`course_names` courses\n    on enrollments.course_key = courses.course_key", "relation_name": "`xapi`.`fact_enrollments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.532365Z", "completed_at": "2024-03-07T15:19:01.536205Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.537682Z", "completed_at": "2024-03-07T15:19:01.537689Z"}], "thread_id": "Thread-1", "execution_time": 0.007960796356201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_forum_interactions", "compiled": true, "compiled_code": "select\n    forum.event_id as event_id,\n    forum.emission_time as emission_time,\n    forum.org as org,\n    forum.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    forum.object_id as object_id,\n    forum.actor_id as actor_id,\n    forum.verb_id as verb_id\nfrom `xapi`.`forum_events` forum\njoin\n    `event_sink`.`course_names` courses\n    on (forum.course_key = courses.course_key)", "relation_name": "`xapi`.`fact_forum_interactions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.541992Z", "completed_at": "2024-03-07T15:19:01.549326Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.550859Z", "completed_at": "2024-03-07T15:19:01.550866Z"}], "thread_id": "Thread-1", "execution_time": 0.011536121368408203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_grades", "compiled": true, "compiled_code": "with\n    grades as (\n        select\n            emission_time,\n            org,\n            course_key,\n            case\n                when object_id like '%/course/%'\n                then 'course'\n                when object_id like '%@sequential+block@%'\n                then 'subsection'\n                when object_id like '%@problem+block@%'\n                then 'problem'\n            end as grade_type,\n            if(\n                grade_type = 'course',\n                splitByString('/course/', object_id)[-1],\n                splitByString('/xblock/', object_id)[-1]\n            ) as entity_id,\n            actor_id,\n            scaled_score\n        from `xapi`.`grading_events`\n        where\n            verb_id in (\n                'http://id.tincanapi.com/verb/earned',\n                'https://w3id.org/xapi/acrossx/verbs/evaluated'\n            )\n    )\n\nselect\n    grades.emission_time as emission_time,\n    grades.org as org,\n    grades.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    grades.entity_id as entity_id,\n    if(blocks.block_name != '', blocks.block_name, courses.course_name) as entity_name,\n    if(\n        blocks.block_name != '', blocks.display_name_with_location, null\n    ) as entity_name_with_location,\n    grades.grade_type as grade_type,\n    grades.actor_id as actor_id,\n    grades.scaled_score as scaled_score,\n    case\n        when scaled_score >= 0.9\n        then '90-100%'\n        when scaled_score >= 0.8 and scaled_score < 0.9\n        then '80-89%'\n        when scaled_score >= 0.7 and scaled_score < 0.8\n        then '70-79%'\n        when scaled_score >= 0.6 and scaled_score < 0.7\n        then '60-69%'\n        when scaled_score >= 0.5 and scaled_score < 0.6\n        then '50-59%'\n        when scaled_score >= 0.4 and scaled_score < 0.5\n        then '40-49%'\n        when scaled_score >= 0.3 and scaled_score < 0.4\n        then '30-39%'\n        when scaled_score >= 0.2 and scaled_score < 0.3\n        then '20-29%'\n        when scaled_score >= 0.1 and scaled_score < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as grade_bucket\nfrom grades\njoin\n    `event_sink`.`course_names` courses\n    on grades.course_key = courses.course_key\nleft join\n    `event_sink`.`course_block_names` blocks\n    on grades.entity_id = blocks.location", "relation_name": "`xapi`.`fact_grades`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.555355Z", "completed_at": "2024-03-07T15:19:01.559633Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.561166Z", "completed_at": "2024-03-07T15:19:01.561173Z"}], "thread_id": "Thread-1", "execution_time": 0.008681774139404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_learner_course_grade", "compiled": true, "compiled_code": "\n\nwith\n    ranked_grades as (\n        select\n            org,\n            course_key,\n            actor_id,\n            scaled_score as course_grade,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`grading_events`\n        where object_id like '%/course/%'\n    )\n\nselect org, course_key, actor_id, course_grade\nfrom ranked_grades\nwhere rn = 1", "relation_name": "`xapi`.`fact_learner_course_grade`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.565592Z", "completed_at": "2024-03-07T15:19:01.569840Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.571461Z", "completed_at": "2024-03-07T15:19:01.571468Z"}], "thread_id": "Thread-1", "execution_time": 0.008533954620361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_learner_course_status", "compiled": true, "compiled_code": "\n\nwith\n    ranked_status as (\n        select\n            org,\n            course_key,\n            actor_id,\n            splitByString('/', verb_id)[-1] as state,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`grading_events`\n        where\n            verb_id in (\n                'http://adlnet.gov/expapi/verbs/passed',\n                'http://adlnet.gov/expapi/verbs/failed'\n            )\n    )\n\nselect org, course_key, actor_id, state\nfrom ranked_status\nwhere rn = 1", "relation_name": "`xapi`.`fact_learner_course_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.576001Z", "completed_at": "2024-03-07T15:19:01.579867Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.581482Z", "completed_at": "2024-03-07T15:19:01.581489Z"}], "thread_id": "Thread-1", "execution_time": 0.008276224136352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_navigation", "compiled": true, "compiled_code": "select\n    navigation.emission_time as emission_time,\n    navigation.org as org,\n    navigation.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    navigation.actor_id as actor_id,\n    navigation.block_id as block_id,\n    blocks.block_name as block_name,\n    blocks.display_name_with_location as block_name_with_location,\n    navigation.object_type as object_type,\n    navigation.starting_position as starting_position,\n    navigation.ending_point as ending_point\nfrom `xapi`.`navigation_events` navigation\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (\n        navigation.course_key = blocks.course_key\n        and navigation.block_id = blocks.block_id\n    )", "relation_name": "`xapi`.`fact_navigation`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.585945Z", "completed_at": "2024-03-07T15:19:01.590234Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.591944Z", "completed_at": "2024-03-07T15:19:01.591951Z"}], "thread_id": "Thread-1", "execution_time": 0.008756399154663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_problem_responses", "compiled": true, "compiled_code": "with\n    responses as (\n        select\n            emission_time,\n            org,\n            course_key,\n            \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_]*)(_\\d_\\d)?', 1\n    )\n as problem_id,\n            actor_id,\n            responses,\n            success,\n            attempts\n        from `xapi`.`problem_events`\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\n    )\n\nselect\n    responses.emission_time as emission_time,\n    responses.org as org,\n    responses.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    responses.problem_id as problem_id,\n    blocks.block_name as problem_name,\n    blocks.display_name_with_location as problem_name_with_location,\n    responses.actor_id as actor_id,\n    responses.responses as responses,\n    responses.success as success,\n    responses.attempts as attempts\nfrom responses\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (\n        responses.course_key = blocks.course_key\n        and responses.problem_id = blocks.block_id\n    )\ngroup by\n    -- multi-part questions include an extra record for the response to the first\n    -- part of the question. this group by clause eliminates the duplicate record\n    emission_time,\n    org,\n    course_key,\n    course_name,\n    course_run,\n    problem_id,\n    problem_name,\n    problem_name_with_location,\n    actor_id,\n    responses,\n    success,\n    attempts", "relation_name": "`xapi`.`fact_problem_responses`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.596479Z", "completed_at": "2024-03-07T15:19:01.600628Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.602143Z", "completed_at": "2024-03-07T15:19:01.602150Z"}], "thread_id": "Thread-1", "execution_time": 0.008974790573120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.int_problem_hints", "compiled": true, "compiled_code": "with\n    hints as (\n        select\n            emission_time,\n            org,\n            course_key,\n            \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_]*)(_\\d_\\d)?', 1\n    )\n as problem_id,\n            actor_id,\n            case\n                when object_id like '%/hint%'\n                then 'hint'\n                when object_id like '%/answer%'\n                then 'answer'\n                else 'N/A'\n            end as help_type\n        from `xapi`.`problem_events`\n        where verb_id = 'http://adlnet.gov/expapi/verbs/asked'\n    )\n\nselect\n    hints.emission_time as emission_time,\n    hints.org as org,\n    hints.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    hints.problem_id as problem_id,\n    blocks.block_name as problem_name,\n    blocks.display_name_with_location as problem_name_with_location,\n    hints.actor_id as actor_id,\n    hints.help_type as help_type\nfrom hints\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (hints.course_key = blocks.course_key and hints.problem_id = blocks.block_id)", "relation_name": "`xapi`.`int_problem_hints`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.607831Z", "completed_at": "2024-03-07T15:19:01.613319Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.615229Z", "completed_at": "2024-03-07T15:19:01.615238Z"}], "thread_id": "Thread-1", "execution_time": 0.010379791259765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_video_plays", "compiled": true, "compiled_code": "-- model to support number of watches per video\n-- ref:\n-- https://edx.readthedocs.io/projects/edx-insights/en/latest/Reference.html#engagement-computations\nwith\n    plays as (\n        select\n            emission_time,\n            org,\n            course_key,\n            splitByString('/xblock/', object_id)[-1] as video_id,\n            actor_id\n        from `xapi`.`video_playback_events`\n        where verb_id = 'https://w3id.org/xapi/video/verbs/played'\n    )\n\nselect\n    plays.emission_time as emission_time,\n    plays.org as org,\n    plays.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    plays.video_id as video_id,\n    blocks.block_name as video_name,\n    blocks.display_name_with_location as video_name_with_location,\n    plays.actor_id as actor_id\nfrom plays\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (plays.course_key = blocks.course_key and plays.video_id = blocks.block_id)", "relation_name": "`xapi`.`fact_video_plays`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.620163Z", "completed_at": "2024-03-07T15:19:01.624034Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.625658Z", "completed_at": "2024-03-07T15:19:01.625666Z"}], "thread_id": "Thread-1", "execution_time": 0.00849008560180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_transcript_usage", "compiled": true, "compiled_code": "select\n    transcripts.emission_time as emission_time,\n    transcripts.org as org,\n    transcripts.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    transcripts.video_id as video_id,\n    blocks.block_name as video_name,\n    blocks.display_name_with_location as video_name_with_location,\n    transcripts.actor_id as actor_id\nfrom `xapi`.`video_transcript_events` transcripts\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (\n        transcripts.course_key = blocks.course_key\n        and transcripts.video_id = blocks.block_id\n    )\nwhere transcripts.cc_enabled", "relation_name": "`xapi`.`fact_transcript_usage`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.630334Z", "completed_at": "2024-03-07T15:19:01.643493Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.645016Z", "completed_at": "2024-03-07T15:19:01.645023Z"}], "thread_id": "Thread-1", "execution_time": 0.017609596252441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_enrollments_enrollment_status__registered__unregistered.f8d10203f4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_enrollments`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.649509Z", "completed_at": "2024-03-07T15:19:01.655851Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.657392Z", "completed_at": "2024-03-07T15:19:01.657399Z"}], "thread_id": "Thread-1", "execution_time": 0.010620594024658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_grades_grade_type__course__subsection__problem.712bd50c2f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        grade_type as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_grades`\n    group by grade_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'course','subsection','problem'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.661909Z", "completed_at": "2024-03-07T15:19:01.666268Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.667843Z", "completed_at": "2024-03-07T15:19:01.667850Z"}], "thread_id": "Thread-1", "execution_time": 0.008572816848754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_grade_status", "compiled": true, "compiled_code": "select\n    ls.org as org,\n    ls.course_key as course_key,\n    ls.actor_id as actor_id,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    coalesce(state, 'failed') as state,\n    course_grade as course_grade,\n    case\n        when course_grade >= 0.9\n        then '90-100%'\n        when course_grade >= 0.8 and course_grade < 0.9\n        then '80-89%'\n        when course_grade >= 0.7 and course_grade < 0.8\n        then '70-79%'\n        when course_grade >= 0.6 and course_grade < 0.7\n        then '60-69%'\n        when course_grade >= 0.5 and course_grade < 0.6\n        then '50-59%'\n        when course_grade >= 0.4 and course_grade < 0.5\n        then '40-49%'\n        when course_grade >= 0.3 and course_grade < 0.4\n        then '30-39%'\n        when course_grade >= 0.2 and course_grade < 0.3\n        then '20-29%'\n        when course_grade >= 0.1 and course_grade < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as grade_bucket\nfrom `xapi`.`fact_learner_course_grade` ls\nleft join\n    `xapi`.`fact_learner_course_status` lg\n    on ls.org = lg.org\n    and ls.course_key = lg.course_key\n    and ls.actor_id = lg.actor_id\njoin\n    `event_sink`.`course_names` courses\n    on ls.course_key = courses.course_key", "relation_name": "`xapi`.`fact_grade_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.672377Z", "completed_at": "2024-03-07T15:19:01.678384Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.679936Z", "completed_at": "2024-03-07T15:19:01.679942Z"}], "thread_id": "Thread-1", "execution_time": 0.010250329971313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_learner_course_status_state__passed__failed.2f0b04ea90", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        state as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_learner_course_status`\n    group by state\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'passed','failed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.684424Z", "completed_at": "2024-03-07T15:19:01.689762Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.691302Z", "completed_at": "2024-03-07T15:19:01.691309Z"}], "thread_id": "Thread-1", "execution_time": 0.009609222412109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_navigation_completion", "compiled": true, "compiled_code": "-- number of learners who've viewed all pages in a section/subsection\nwith\n    visited_subsection_pages as (\n        select distinct\n            date(emission_time) as visited_on,\n            org,\n            course_key,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', block_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', block_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            actor_id,\n            block_id\n        from `xapi`.`fact_navigation`\n    )\n\nselect\n    visits.visited_on,\n    visits.org,\n    visits.course_key,\n    pages.section_with_name,\n    pages.subsection_with_name,\n    pages.page_count,\n    visits.actor_id,\n    visits.block_id\nfrom visited_subsection_pages visits\njoin\n    `xapi`.`int_pages_per_subsection` pages\n    on (\n        visits.org = pages.org\n        and visits.course_key = pages.course_key\n        and visits.section_number = pages.section_number\n        and visits.subsection_number = pages.subsection_number\n    )", "relation_name": "`xapi`.`fact_navigation_completion`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.695681Z", "completed_at": "2024-03-07T15:19:01.700375Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.701903Z", "completed_at": "2024-03-07T15:19:01.701910Z"}], "thread_id": "Thread-1", "execution_time": 0.00892949104309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_navigation_dropoff", "compiled": true, "compiled_code": "with\n    blocks as (\n        select org, course_key, display_name_with_location, hierarchy_location\n        from `xapi`.`dim_course_blocks`\n        where block_id like '%@chapter+block@%' or block_id like '%@sequential+block@%'\n    ),\n    page_views_by_section as (\n        -- section: x:0:0\n        -- take just the first number from the hierarchy location\n        select\n            date(emission_time) as emission_date,\n            org,\n            course_key,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', block_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            actor_id,\n            count(*) as total_views\n        from `xapi`.`fact_navigation`\n        group by emission_date, org, course_key, section_number, actor_id\n    ),\n    page_views_by_subsection as (\n        -- subsection: x:y:0\n        -- take the first two numbers from the hierarchy location\n        select\n            date(emission_time) as emission_date,\n            org,\n            course_key,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', block_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            actor_id,\n            count(*) as total_views\n        from `xapi`.`fact_navigation`\n        group by emission_date, org, course_key, subsection_number, actor_id\n    ),\n    page_views as (\n        select\n            emission_date,\n            org,\n            course_key,\n            'section' as rollup_name,\n            section_number as hierarchy_location,\n            actor_id,\n            sum(total_views) as total_views\n        from page_views_by_section\n        group by\n            emission_date, org, course_key, rollup_name, hierarchy_location, actor_id\n        union all\n        select\n            emission_date,\n            org,\n            course_key,\n            'subsection' as rollup_name,\n            subsection_number as hierarchy_location,\n            actor_id,\n            sum(total_views) as total_views\n        from page_views_by_subsection\n        group by\n            emission_date, org, course_key, rollup_name, hierarchy_location, actor_id\n    )\n\nselect\n    page_views.emission_date as emission_date,\n    page_views.org as org,\n    page_views.course_key as course_key,\n    page_views.rollup_name as rollup_name,\n    blocks.display_name_with_location as block_name,\n    page_views.actor_id as actor_id,\n    page_views.total_views as total_views\nfrom page_views\njoin\n    blocks\n    on (\n        page_views.org = blocks.org\n        and page_views.course_key = blocks.course_key\n        and page_views.hierarchy_location = blocks.hierarchy_location\n    )", "relation_name": "`xapi`.`fact_navigation_dropoff`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.706422Z", "completed_at": "2024-03-07T15:19:01.710637Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.712192Z", "completed_at": "2024-03-07T15:19:01.712199Z"}], "thread_id": "Thread-1", "execution_time": 0.008527278900146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.int_problem_results", "compiled": true, "compiled_code": "-- select one record per (learner, problem, course, org) tuple\n-- contains either the first successful attempt\n-- or the most recent unsuccessful attempt\n-- find the timestamp of the earliest successful response\n-- this will be used to pick the xAPI event corresponding to that submission\nwith\n    successful_responses as (\n        select\n            org,\n            course_key,\n            problem_id,\n            actor_id,\n            min(emission_time) as first_success_at\n        from `xapi`.`fact_problem_responses`\n        where\n            -- clickhouse throws an error when shortening this to `where success`\n            success = true\n        group by org, course_key, problem_id, actor_id\n    ),\n    -- for all learners who did not submit a successful response,\n    -- find the timestamp of the most recent unsuccessful response\n    unsuccessful_responses as (\n        select\n            org,\n            course_key,\n            problem_id,\n            actor_id,\n            max(emission_time) as last_response_at\n        from `xapi`.`fact_problem_responses`\n        where actor_id not in (select distinct actor_id from successful_responses)\n        group by org, course_key, problem_id, actor_id\n    ),\n    -- combine result sets for successful and unsuccessful problem submissions\n    responses as (\n        select org, course_key, problem_id, actor_id, first_success_at as emission_time\n        from successful_responses\n        union all\n        select org, course_key, problem_id, actor_id, last_response_at as emission_time\n        from unsuccessful_responses\n    )\n\nselect\n    emission_time,\n    org,\n    course_key,\n    course_name,\n    course_run,\n    problem_id,\n    problem_name,\n    problem_name_with_location,\n    actor_id,\n    responses,\n    success,\n    attempts\nfrom `xapi`.`fact_problem_responses` problem_responses\njoin responses using (org, course_key, problem_id, actor_id, emission_time)", "relation_name": "`xapi`.`int_problem_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.716750Z", "completed_at": "2024-03-07T15:19:01.721345Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.722856Z", "completed_at": "2024-03-07T15:19:01.722862Z"}], "thread_id": "Thread-1", "execution_time": 0.008863449096679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_grade_status_state__passed__failed.6dd8b75c6b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        state as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_grade_status`\n    group by state\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'passed','failed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.727363Z", "completed_at": "2024-03-07T15:19:01.732857Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.734372Z", "completed_at": "2024-03-07T15:19:01.734379Z"}], "thread_id": "Thread-1", "execution_time": 0.009808540344238281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_navigation_dropoff_rollup_name__section__subsection.8afafb193f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        rollup_name as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_navigation_dropoff`\n    group by rollup_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'section','subsection'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.738852Z", "completed_at": "2024-03-07T15:19:01.742978Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.744479Z", "completed_at": "2024-03-07T15:19:01.744485Z"}], "thread_id": "Thread-1", "execution_time": 0.008298397064208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_learner_problem_summary", "compiled": true, "compiled_code": "-- summary table for a learner's performance on and interactions with a\n-- particular problem\nwith\n    results_with_hints as (\n        select\n            org,\n            course_key,\n            course_name,\n            course_run,\n            problem_id,\n            problem_name,\n            problem_name_with_location,\n            actor_id,\n            success,\n            attempts,\n            0 as num_hints_displayed,\n            0 as num_answers_displayed\n        from `xapi`.`int_problem_results`\n        union all\n        select\n            org,\n            course_key,\n            course_name,\n            course_run,\n            problem_id,\n            problem_name,\n            problem_name_with_location,\n            actor_id,\n            null as success,\n            null as attempts,\n            case help_type when 'hint' then 1 else 0 end as num_hints_displayed,\n            case help_type when 'answer' then 1 else 0 end as num_answers_displayed\n        from `xapi`.`int_problem_hints`\n    )\n\n-- n.b.: there should only be one row per org, course, problem, and actor\n-- in problem_results, so any(success) and any(attempts) should return the\n-- values from that part of the union and not the null values used as\n-- placeholders in the problem_hints part of the union\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    problem_id,\n    problem_name,\n    problem_name_with_location,\n    actor_id,\n    coalesce(any(success), false) as success,\n    coalesce(any(attempts), 0) as attempts,\n    sum(num_hints_displayed) as num_hints_displayed,\n    sum(num_answers_displayed) as num_answers_displayed\nfrom results_with_hints\ngroup by\n    org,\n    course_key,\n    course_name,\n    course_run,\n    problem_id,\n    problem_name,\n    problem_name_with_location,\n    actor_id", "relation_name": "`xapi`.`fact_learner_problem_summary`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.749034Z", "completed_at": "2024-03-07T15:19:01.753705Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.755219Z", "completed_at": "2024-03-07T15:19:01.755225Z"}], "thread_id": "Thread-1", "execution_time": 0.00894927978515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.problem_results_uniqueness", "compiled": true, "compiled_code": "-- problem_results should only have one record for the following\n-- combination of values:\n-- actor_id, problem_id, course_id, org\nselect org, course_key, problem_id, actor_id, responses, count(*) as num_rows\nfrom `xapi`.`int_problem_results`\ngroup by org, course_key, problem_id, actor_id, responses\nhaving num_rows > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.759592Z", "completed_at": "2024-03-07T15:19:01.763126Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.764617Z", "completed_at": "2024-03-07T15:19:01.764624Z"}], "thread_id": "Thread-1", "execution_time": 0.007676839828491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.learner_problem_summary_uniqueness", "compiled": true, "compiled_code": "select org, course_key, problem_id, actor_id, count(*) as num_rows\nfrom `xapi`.`fact_learner_problem_summary`\ngroup by org, course_key, problem_id, actor_id\nhaving num_rows > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.769002Z", "completed_at": "2024-03-07T15:19:01.778508Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.780036Z", "completed_at": "2024-03-07T15:19:01.780043Z"}], "thread_id": "Thread-1", "execution_time": 0.013736248016357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.not_null_fact_learner_problem_summary_attempts.817beed32b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect attempts\nfrom `xapi`.`fact_learner_problem_summary`\nwhere attempts is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-07T15:19:01.784486Z", "completed_at": "2024-03-07T15:19:01.789248Z"}, {"name": "execute", "started_at": "2024-03-07T15:19:01.790752Z", "completed_at": "2024-03-07T15:19:01.790759Z"}], "thread_id": "Thread-1", "execution_time": 0.008963346481323242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.not_null_fact_learner_problem_summary_success.76b52cb2da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect success\nfrom `xapi`.`fact_learner_problem_summary`\nwhere success is null\n\n\n", "relation_name": null}], "elapsed_time": 0.5527210235595703, "args": {"indirect_selection": "eager", "print": true, "version_check": true, "show_resource_report": false, "partial_parse_file_diff": true, "enable_legacy_logger": false, "exclude": [], "log_format": "default", "select": [], "defer": false, "static_parser": true, "log_format_file": "debug", "use_colors": true, "log_file_max_bytes": 10485760, "profiles_dir": "./.github/", "vars": {}, "log_path": "/home/runner/work/aspects-dbt/aspects-dbt/logs", "quiet": false, "strict_mode": false, "static": false, "write_json": true, "partial_parse": true, "macro_debugging": false, "printer_width": 80, "compile": true, "use_colors_file": true, "empty_catalog": false, "populate_cache": true, "invocation_command": "dbt docs generate", "project_dir": "/home/runner/work/aspects-dbt/aspects-dbt", "send_anonymous_usage_stats": true, "log_level": "info", "warn_error_options": {"include": [], "exclude": []}, "favor_state": false, "introspect": true, "which": "generate", "log_level_file": "debug", "cache_selected_only": false}}