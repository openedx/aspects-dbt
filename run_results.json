{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-05-03T16:59:41.025510Z", "invocation_id": "f5ef6ad2-940e-44b8-922c-75e90aea4bfd", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.376222Z", "completed_at": "2024-05-03T16:59:40.387759Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.389295Z", "completed_at": "2024-05-03T16:59:40.389307Z"}], "thread_id": "Thread-1", "execution_time": 0.015810489654541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.course_block_names", "compiled": true, "compiled_code": "\n\nwith\n    most_recent_course_blocks as (\n        select\n            location,\n            display_name,\n            toString(section)\n            || ':'\n            || toString(subsection)\n            || ':'\n            || toString(unit)\n            || ' - '\n            || display_name as display_name_with_location,\n            JSONExtractInt(xblock_data_json, 'section') as section,\n            JSONExtractInt(xblock_data_json, 'subsection') as subsection,\n            JSONExtractInt(xblock_data_json, 'unit') as unit,\n            JSONExtractBool(xblock_data_json, 'graded') as graded,\n            `order` as course_order,\n            course_key,\n            dump_id,\n            time_last_dumped,\n            row_number() over (\n                partition by location order by time_last_dumped desc\n            ) as rn\n        from `event_sink`.`course_blocks`\n    )\nselect\n    location,\n    display_name as block_name,\n    course_key,\n    graded,\n    course_order,\n    display_name_with_location\nfrom most_recent_course_blocks\nwhere rn = 1", "relation_name": "`xapi`.`course_block_names`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.393748Z", "completed_at": "2024-05-03T16:59:40.399431Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.400983Z", "completed_at": "2024-05-03T16:59:40.400989Z"}], "thread_id": "Thread-1", "execution_time": 0.009851455688476562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.course_names", "compiled": true, "compiled_code": "\n\nwith\n    most_recent_overviews as (\n        select org, course_key, max(modified) as last_modified\n        from `event_sink`.`course_overviews`\n        group by org, course_key\n    )\nselect course_key, display_name, splitByString('+', course_key)[-1] as course_run, org\nfrom `event_sink`.`course_overviews` co\ninner join\n    most_recent_overviews mro\n    on co.org = mro.org\n    and co.course_key = mro.course_key\n    and co.modified = mro.last_modified", "relation_name": "`xapi`.`course_names`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.405567Z", "completed_at": "2024-05-03T16:59:40.411640Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.413159Z", "completed_at": "2024-05-03T16:59:40.413165Z"}], "thread_id": "Thread-1", "execution_time": 0.010396957397460938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.user_pii", "compiled": true, "compiled_code": "\n\nwith\n    most_recent_user_profile as (\n        select\n            user_id,\n            name,\n            email,\n            ROW_NUMBER() over (\n                partition by user_id order by (id, time_last_dumped) DESC\n            ) as rn\n        from `event_sink`.`user_profile`\n    )\nselect mrup.user_id as user_id, external_user_id, username, name, email\nfrom `event_sink`.`external_id` ex\nleft outer join most_recent_user_profile mrup on mrup.user_id = ex.user_id\nwhere mrup.rn = 1", "relation_name": "`xapi`.`user_pii`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.417711Z", "completed_at": "2024-05-03T16:59:40.424295Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.425914Z", "completed_at": "2024-05-03T16:59:40.425921Z"}], "thread_id": "Thread-1", "execution_time": 0.011064291000366211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.xapi_events_all_parsed", "compiled": true, "compiled_code": "\n\nselect\n    event_id as event_id,\n    JSON_VALUE(event::String, '$.verb.id') as verb_id,\n    COALESCE(\n        NULLIF(JSON_VALUE(event::String, '$.actor.account.name'), ''),\n        NULLIF(JSON_VALUE(event::String, '$.actor.mbox'), ''),\n        JSON_VALUE(event::String, '$.actor.mbox_sha1sum')\n    ) as actor_id,\n    JSON_VALUE(event::String, '$.object.id') as object_id,\n    -- If the contextActivities parent is a course, use that. It can be a \"course\"\n    -- type, or a \"cmi.interaction\" type for multiple question problem submissions.\n    -- Otherwise use the object id for the course id.\n    multiIf(\n        -- If the contextActivities parent is a course, use that\n        JSON_VALUE(\n            event::String, '$.context.contextActivities.parent[0].definition.type'\n        )\n        = 'http://adlnet.gov/expapi/activities/course',\n        JSON_VALUE(event::String, '$.context.contextActivities.parent[0].id'),\n        -- Else if the contextActivities parent is a GroupActivity, it's a multi\n        -- question problem and we use the grouping id\n        JSON_VALUE(event::String, '$.context.contextActivities.parent[0].objectType')\n        in ('Activity', 'GroupActivity'),\n        JSON_VALUE(event::String, '$.context.contextActivities.grouping[0].id'),\n        -- Otherwise use the object id\n        JSON_VALUE(event::String, '$.object.id')\n    ) as course_id,\n    coalesce(\n        get_org_from_course_url(course_id), get_org_from_ccx_course_url(course_id), ''\n    ) as org,\n    emission_time as emission_time,\n    event::String as event\nfrom `xapi`.`xapi_events_all`", "relation_name": "`xapi`.`xapi_events_all_parsed`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.430780Z", "completed_at": "2024-05-03T16:59:40.435666Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.437196Z", "completed_at": "2024-05-03T16:59:40.437203Z"}], "thread_id": "Thread-1", "execution_time": 0.00914144515991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.a_tag", "compiled": true, "compiled_code": "select\n    'http://local.edly.io/xblock/block-v1:OpenedX+DemoX+DemoCourse+type@video+block@d5a54ce52f464acfa7a83ae155712cc3' as object_id,\n    'The Purpose, Power and Reach of the Open edX\u00ae Platform' as video_name,\n    \n    concat(\n        '<a href=\"', object_id, '\" target=\"_blank\">', video_name, '</a>'\n    )\n as object_a_tag\nfrom\n    system.numbers\nwhere object_a_tag != '<a href=\"http://local.edly.io/xblock/block-v1:OpenedX+DemoX+DemoCourse+type@video+block@d5a54ce52f464acfa7a83ae155712cc3\" target=\"_blank\">The Purpose, Power and Reach of the Open edX\u00ae Platform</a>'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.441570Z", "completed_at": "2024-05-03T16:59:40.446389Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.447961Z", "completed_at": "2024-05-03T16:59:40.447968Z"}], "thread_id": "Thread-1", "execution_time": 0.009030818939208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_problem_id", "compiled": true, "compiled_code": "select\n    'http://local.edly.io:8000/xblock/block-v1:edunext+demo+demo+ccx+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:edunext+demo+demo+ccx+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.452291Z", "completed_at": "2024-05-03T16:59:40.455760Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.457273Z", "completed_at": "2024-05-03T16:59:40.457279Z"}], "thread_id": "Thread-1", "execution_time": 0.007723569869995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_problem_id_with_ccx", "compiled": true, "compiled_code": "select\n    'http://local.edly.io:8000/xblock/ccx-block-v1:edunext+demo+demo+ccx@1+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_]*)(_\\d_\\d)?', 1\n    )\n\n    != 'ccx-block-v1:edunext+demo+demo+ccx@1+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.461645Z", "completed_at": "2024-05-03T16:59:40.467313Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.468903Z", "completed_at": "2024-05-03T16:59:40.468910Z"}], "thread_id": "Thread-1", "execution_time": 0.009869098663330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_course_blocks", "compiled": true, "compiled_code": "select\n    courses.org as org,\n    courses.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    blocks.location as block_id,\n    blocks.block_name as block_name,\n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', blocks.display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', blocks.display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    as subsection_number,\n    splitByString(' - ', blocks.display_name_with_location)[1] as hierarchy_location,\n    blocks.display_name_with_location as display_name_with_location,\n    course_order,\n    graded,\n    case\n        when block_id like '%@chapter+block@%'\n        then 'section'\n        when block_id like '%@sequential+block@%'\n        then 'subsection'\n        when block_id like '%@vertical+block@%'\n        then 'unit'\n        else regexpExtract(block_id, '@([^+]+)\\+block@', 1)\n    end as block_type\nfrom `xapi`.`course_block_names` blocks\njoin\n    `xapi`.`course_names` courses on blocks.course_key = courses.course_key\n    settings join_algorithm = 'direct'", "relation_name": "`xapi`.`dim_course_blocks`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.473416Z", "completed_at": "2024-05-03T16:59:40.476934Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.478476Z", "completed_at": "2024-05-03T16:59:40.478483Z"}], "thread_id": "Thread-1", "execution_time": 0.00786280632019043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_user_pii", "compiled": true, "compiled_code": "select external_user_id, username, name, email from `xapi`.`user_pii` user_pii", "relation_name": "`xapi`.`dim_user_pii`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.482794Z", "completed_at": "2024-05-03T16:59:40.487673Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.489222Z", "completed_at": "2024-05-03T16:59:40.489229Z"}], "thread_id": "Thread-1", "execution_time": 0.009029150009155273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.completion_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSON_VALUE(\n        event,\n        '$.result.extensions.\"https://w3id.org/xapi/cmi5/result/extensions/progress\"'\n    ) as progress_percent\nfrom `xapi`.`xapi_events_all_parsed`\nwhere verb_id = 'http://adlnet.gov/expapi/verbs/progressed'", "relation_name": "`xapi`.`completion_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.493665Z", "completed_at": "2024-05-03T16:59:40.498615Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.500189Z", "completed_at": "2024-05-03T16:59:40.500196Z"}], "thread_id": "Thread-1", "execution_time": 0.009185314178466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.enrollment_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSON_VALUE(\n        event,\n        '$.object.definition.extensions.\"https://w3id.org/xapi/acrossx/extensions/type\"'\n    ) as enrollment_mode\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'http://adlnet.gov/expapi/verbs/registered',\n        'http://id.tincanapi.com/verb/unregistered'\n    )", "relation_name": "`xapi`.`enrollment_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.504717Z", "completed_at": "2024-05-03T16:59:40.510085Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.511653Z", "completed_at": "2024-05-03T16:59:40.511660Z"}], "thread_id": "Thread-1", "execution_time": 0.009824991226196289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_actors", "compiled": true, "compiled_code": "\n\nselect\n    date_trunc('hour', emission_time) as emission_hour,\n    uniqCombinedState(actor_id) as actors_cnt\nfrom `xapi`.`xapi_events_all_parsed`\ngroup by emission_hour", "relation_name": "`xapi`.`fact_instance_actors`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.516016Z", "completed_at": "2024-05-03T16:59:40.520489Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.522009Z", "completed_at": "2024-05-03T16:59:40.522016Z"}], "thread_id": "Thread-1", "execution_time": 0.008649587631225586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_courses", "compiled": true, "compiled_code": "\n\nselect\n    date_trunc('hour', emission_time) as emission_hour,\n    uniqCombinedState(course_id) as courses_cnt\nfrom `xapi`.`xapi_events_all_parsed`\ngroup by emission_hour", "relation_name": "`xapi`.`fact_instance_courses`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.526336Z", "completed_at": "2024-05-03T16:59:40.531059Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.532616Z", "completed_at": "2024-05-03T16:59:40.532623Z"}], "thread_id": "Thread-1", "execution_time": 0.0089111328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_events", "compiled": true, "compiled_code": "\n\nselect\n    date_trunc('hour', emission_time) as emission_hour,\n    uniqCombinedState(event_id) as events_cnt\nfrom `xapi`.`xapi_events_all_parsed`\ngroup by emission_hour", "relation_name": "`xapi`.`fact_instance_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.537036Z", "completed_at": "2024-05-03T16:59:40.541876Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.543515Z", "completed_at": "2024-05-03T16:59:40.543522Z"}], "thread_id": "Thread-1", "execution_time": 0.009180784225463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.forum_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    org,\n    splitByString('/', course_id)[-1] as course_key,\n    object_id,\n    actor_id,\n    verb_id\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    JSON_VALUE(event, '$.object.definition.type')\n    = 'http://id.tincanapi.com/activitytype/discussion'", "relation_name": "`xapi`.`forum_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.548105Z", "completed_at": "2024-05-03T16:59:40.553035Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.554544Z", "completed_at": "2024-05-03T16:59:40.554551Z"}], "thread_id": "Thread-1", "execution_time": 0.009264707565307617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.grading_events", "compiled": true, "compiled_code": "\n\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSONExtractFloat(event, 'result', 'score', 'scaled') as scaled_score\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'http://id.tincanapi.com/verb/earned',\n        'https://w3id.org/xapi/acrossx/verbs/evaluated'\n    )\n    or (\n        verb_id in (\n            'http://adlnet.gov/expapi/verbs/passed',\n            'http://adlnet.gov/expapi/verbs/failed'\n        )\n        and JSON_VALUE(event::String, '$.object.definition.type')\n        = 'http://adlnet.gov/expapi/activities/course'\n    )", "relation_name": "`xapi`.`grading_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.559066Z", "completed_at": "2024-05-03T16:59:40.564199Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.565736Z", "completed_at": "2024-05-03T16:59:40.565743Z"}], "thread_id": "Thread-1", "execution_time": 0.00948023796081543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.navigation_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    splitByString('/xblock/', object_id)[-1] as block_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSONExtractString(event, 'object', 'definition', 'type') as object_type,\n    -- clicking a link and selecting a module outline have no starting-position field\n    if(\n        object_type in (\n            'http://adlnet.gov/expapi/activities/link',\n            'http://adlnet.gov/expapi/activities/module'\n        ),\n        0,\n        JSONExtractInt(\n            event,\n            'context',\n            'extensions',\n            'http://id.tincanapi.com/extension/starting-position'\n        )\n    ) as starting_position,\n    JSONExtractString(\n        event, 'context', 'extensions', 'http://id.tincanapi.com/extension/ending-point'\n    ) as ending_point\nfrom `xapi`.`xapi_events_all_parsed`\nwhere verb_id in ('https://w3id.org/xapi/dod-isd/verbs/navigated')", "relation_name": "`xapi`.`navigation_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.570311Z", "completed_at": "2024-05-03T16:59:40.576001Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.577531Z", "completed_at": "2024-05-03T16:59:40.577538Z"}], "thread_id": "Thread-1", "execution_time": 0.010068655014038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.problem_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    JSON_VALUE(event, '$.result.response') as responses,\n    JSON_VALUE(event, '$.result.score.scaled') as scaled_score,\n    if(\n        verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated',\n        cast(JSON_VALUE(event, '$.result.success') as Bool),\n        false\n    ) as success,\n    JSON_VALUE(event, '$.object.definition.interactionType') as interaction_type,\n    if(\n        verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated',\n        cast(\n            JSON_VALUE(\n                event,\n                '$.object.definition.extensions.\"http://id.tincanapi.com/extension/attempt-id\"'\n            ) as Int16\n        ),\n        0\n    ) as attempts\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'https://w3id.org/xapi/acrossx/verbs/evaluated',\n        'http://adlnet.gov/expapi/verbs/passed',\n        'http://adlnet.gov/expapi/verbs/asked'\n    )", "relation_name": "`xapi`.`problem_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.582066Z", "completed_at": "2024-05-03T16:59:40.586954Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.588494Z", "completed_at": "2024-05-03T16:59:40.588501Z"}], "thread_id": "Thread-1", "execution_time": 0.009190082550048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.video_playback_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    splitByString('/', course_id)[-1] as course_key,\n    org,\n    verb_id,\n    ceil(\n        CAST(\n            coalesce(\n                nullIf(\n                    JSON_VALUE(\n                        event,\n                        '$.result.extensions.\"https://w3id.org/xapi/video/extensions/time\"'\n                    ),\n                    ''\n                ),\n                nullIf(\n                    JSON_VALUE(\n                        event,\n                        '$.result.extensions.\"https://w3id.org/xapi/video/extensions/time-from\"'\n                    ),\n                    ''\n                ),\n                '0.0'\n            ),\n            'Decimal32(2)'\n        )\n    ) as video_position,\n    JSONExtractInt(\n        event, 'context', 'extensions', 'https://w3id.org/xapi/video/extensions/length'\n    ) as video_duration\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    (\n        verb_id in (\n            'http://adlnet.gov/expapi/verbs/completed',\n            'http://adlnet.gov/expapi/verbs/initialized',\n            'http://adlnet.gov/expapi/verbs/terminated',\n            'https://w3id.org/xapi/video/verbs/paused',\n            'https://w3id.org/xapi/video/verbs/played',\n            'https://w3id.org/xapi/video/verbs/seeked'\n        )\n    )\n    and (object_id like '%video+block%')", "relation_name": "`xapi`.`video_playback_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.592910Z", "completed_at": "2024-05-03T16:59:40.597723Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.599280Z", "completed_at": "2024-05-03T16:59:40.599287Z"}], "thread_id": "Thread-1", "execution_time": 0.009104490280151367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.video_transcript_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    org,\n    splitByString('/', course_id)[-1] as course_key,\n    splitByString('/xblock/', object_id)[2] as video_id,\n    actor_id,\n    JSONExtractBool(\n        event,\n        'result',\n        'extensions',\n        'https://w3id.org/xapi/video/extensions/cc-enabled'\n    ) as cc_enabled\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in ('http://adlnet.gov/expapi/verbs/interacted')\n    and JSONHas(\n        event,\n        'result',\n        'extensions',\n        'https://w3id.org/xapi/video/extensions/cc-enabled'\n    )", "relation_name": "`xapi`.`video_transcript_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.603776Z", "completed_at": "2024-05-03T16:59:40.607920Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.609479Z", "completed_at": "2024-05-03T16:59:40.609486Z"}], "thread_id": "Thread-1", "execution_time": 0.008418798446655273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_course_blocks_extended", "compiled": true, "compiled_code": "select\n    blocks.org as org,\n    blocks.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    blocks.block_id as block_id,\n    blocks.block_name as block_name,\n    blocks.section_number as section_number,\n    blocks.subsection_number as subsection_number,\n    blocks.hierarchy_location as hierarchy_location,\n    blocks.display_name_with_location as display_name_with_location,\n    blocks.graded as graded,\n    blocks.course_order as course_order,\n    blocks.block_type as block_type,\n    section_blocks.display_name_with_location as section_with_name,\n    subsection_blocks.display_name_with_location as subsection_with_name\nfrom `xapi`.`dim_course_blocks` blocks\nleft join\n    `xapi`.`dim_course_blocks` section_blocks\n    on (\n        blocks.section_number = section_blocks.hierarchy_location\n        and blocks.org = section_blocks.org\n        and blocks.course_key = section_blocks.course_key\n        and section_blocks.block_id like '%@chapter+block@%'\n    )\nleft join\n    `xapi`.`dim_course_blocks` subsection_blocks\n    on (\n        blocks.subsection_number = subsection_blocks.hierarchy_location\n        and blocks.org = subsection_blocks.org\n        and blocks.course_key = subsection_blocks.course_key\n        and subsection_blocks.block_id like '%@sequential+block@%'\n    )", "relation_name": "`xapi`.`dim_course_blocks_extended`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.614057Z", "completed_at": "2024-05-03T16:59:40.618144Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.619728Z", "completed_at": "2024-05-03T16:59:40.619735Z"}], "thread_id": "Thread-1", "execution_time": 0.008423328399658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.int_pages_per_subsection", "compiled": true, "compiled_code": "with\n    pages_per_subsection as (\n        select\n            org,\n            course_key,\n            section_number,\n            subsection_number,\n            course_order,\n            count(*) as page_count\n        from `xapi`.`dim_course_blocks`\n        where block_id like '%@vertical+block@%'\n        group by org, course_key, section_number, subsection_number, course_order\n    )\n\nselect\n    pps.org as org,\n    pps.course_key as course_key,\n    pps.section_number as section_number,\n    section_blocks.display_name_with_location as section_with_name,\n    pps.subsection_number as subsection_number,\n    subsection_blocks.display_name_with_location as subsection_with_name,\n    pps.course_order as course_order,\n    pps.page_count as page_count\nfrom pages_per_subsection pps\nleft join\n    `xapi`.`dim_course_blocks` section_blocks\n    on (\n        pps.section_number = section_blocks.hierarchy_location\n        and pps.org = section_blocks.org\n        and pps.course_key = section_blocks.course_key\n        and section_blocks.block_id like '%@chapter+block@%'\n    )\nleft join\n    `xapi`.`dim_course_blocks` subsection_blocks\n    on (\n        pps.subsection_number = subsection_blocks.hierarchy_location\n        and pps.org = subsection_blocks.org\n        and pps.course_key = subsection_blocks.course_key\n        and subsection_blocks.block_id like '%@sequential+block@%'\n    )", "relation_name": "`xapi`.`int_pages_per_subsection`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.624095Z", "completed_at": "2024-05-03T16:59:40.629393Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.630909Z", "completed_at": "2024-05-03T16:59:40.630916Z"}], "thread_id": "Thread-1", "execution_time": 0.009492874145507812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.int_problems_per_subsection", "compiled": true, "compiled_code": "select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@problem+block@%'\n            group by\n                org, course_key, section_number, subsection_number, course_order, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)", "relation_name": "`xapi`.`int_problems_per_subsection`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.635307Z", "completed_at": "2024-05-03T16:59:40.639876Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.641387Z", "completed_at": "2024-05-03T16:59:40.641393Z"}], "thread_id": "Thread-1", "execution_time": 0.008758306503295898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.int_videos_per_subsection", "compiled": true, "compiled_code": "select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@video+block@%'\n            group by\n                org, course_key, section_number, subsection_number, course_order, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)", "relation_name": "`xapi`.`int_videos_per_subsection`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.645782Z", "completed_at": "2024-05-03T16:59:40.650211Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.651766Z", "completed_at": "2024-05-03T16:59:40.651773Z"}], "thread_id": "Thread-1", "execution_time": 0.008597373962402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_completions", "compiled": true, "compiled_code": "with\n    completions as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            progress_percent,\n            if(\n                object_id like '%/course/%',\n                splitByString('/course/', object_id)[-1],\n                splitByString('/xblock/', object_id)[-1]\n            ) as entity_id,\n            cast(progress_percent as Float) / 100 as scaled_progress\n        from `xapi`.`completion_events`\n    )\n\nselect\n    completions.emission_time as emission_time,\n    completions.org as org,\n    completions.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    completions.entity_id as entity_id,\n    if(blocks.block_name != '', blocks.block_name, courses.course_name) as entity_name,\n    if(\n        blocks.block_name != '', blocks.display_name_with_location, null\n    ) as entity_name_with_location,\n    completions.actor_id as actor_id,\n    cast(completions.scaled_progress as Float) as scaled_progress,\n    case\n        when scaled_progress >= 0.9\n        then '90-100%'\n        when scaled_progress >= 0.8 and scaled_progress < 0.9\n        then '80-89%'\n        when scaled_progress >= 0.7 and scaled_progress < 0.8\n        then '70-79%'\n        when scaled_progress >= 0.6 and scaled_progress < 0.7\n        then '60-69%'\n        when scaled_progress >= 0.5 and scaled_progress < 0.6\n        then '50-59%'\n        when scaled_progress >= 0.4 and scaled_progress < 0.5\n        then '40-49%'\n        when scaled_progress >= 0.3 and scaled_progress < 0.4\n        then '30-39%'\n        when scaled_progress >= 0.2 and scaled_progress < 0.3\n        then '20-29%'\n        when scaled_progress >= 0.1 and scaled_progress < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as completion_bucket,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom completions\njoin `xapi`.`course_names` courses on completions.course_key = courses.course_key\nleft join\n    `xapi`.`course_block_names` blocks on completions.entity_id = blocks.location\nleft outer join\n    `xapi`.`dim_user_pii` users\n    on toUUID(completions.actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_completions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.656172Z", "completed_at": "2024-05-03T16:59:40.660435Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.661970Z", "completed_at": "2024-05-03T16:59:40.661977Z"}], "thread_id": "Thread-1", "execution_time": 0.008479595184326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_enrollment_status", "compiled": true, "compiled_code": "\n\nwith\n    ranked_enrollments as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            enrollment_mode,\n            splitByString('/', verb_id)[-1] as enrollment_status,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`enrollment_events`\n    )\n\nselect org, course_key, actor_id, enrollment_status, enrollment_mode, emission_time\nfrom ranked_enrollments\nwhere rn = 1", "relation_name": "`xapi`.`fact_enrollment_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.666437Z", "completed_at": "2024-05-03T16:59:40.670500Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.672049Z", "completed_at": "2024-05-03T16:59:40.672056Z"}], "thread_id": "Thread-1", "execution_time": 0.008324384689331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_enrollments", "compiled": true, "compiled_code": "with\n    enrollments as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            enrollment_mode,\n            splitByString('/', verb_id)[-1] as enrollment_status\n        from `xapi`.`enrollment_events`\n    )\n\nselect\n    enrollments.emission_time as emission_time,\n    enrollments.org as org,\n    enrollments.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    enrollments.actor_id as actor_id,\n    enrollments.enrollment_mode as enrollment_mode,\n    enrollments.enrollment_status as enrollment_status,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom enrollments\njoin `xapi`.`course_names` courses on enrollments.course_key = courses.course_key\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_enrollments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.676552Z", "completed_at": "2024-05-03T16:59:40.681325Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.682880Z", "completed_at": "2024-05-03T16:59:40.682887Z"}], "thread_id": "Thread-1", "execution_time": 0.009236335754394531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_enrollments", "compiled": true, "compiled_code": "\n\nwith\n    enrollments as (\n        select\n            emission_time,\n            course_key,\n            enrollment_mode,\n            splitByString('/', verb_id)[-1] as enrollment_status\n        from `xapi`.`enrollment_events`\n    )\n\nselect\n    date_trunc('hour', emission_time) as emission_hour,\n    courses.course_name as course_name,\n    enrollments.enrollment_mode as enrollment_mode,\n    enrollments.enrollment_status as enrollment_status,\n    count() as course_enrollment_mode_status_cnt\nfrom enrollments\njoin `xapi`.`course_names` courses on enrollments.course_key = courses.course_key\ngroup by emission_hour, course_name, enrollment_mode, enrollment_status", "relation_name": "`xapi`.`fact_instance_enrollments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.687526Z", "completed_at": "2024-05-03T16:59:40.691632Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.693190Z", "completed_at": "2024-05-03T16:59:40.693197Z"}], "thread_id": "Thread-1", "execution_time": 0.008434534072875977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_forum_interactions", "compiled": true, "compiled_code": "select\n    forum.event_id as event_id,\n    forum.emission_time as emission_time,\n    forum.org as org,\n    forum.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    forum.object_id as object_id,\n    forum.actor_id as actor_id,\n    forum.verb_id as verb_id,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom `xapi`.`forum_events` forum\njoin `xapi`.`course_names` courses on (forum.course_key = courses.course_key)\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_forum_interactions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.697582Z", "completed_at": "2024-05-03T16:59:40.705028Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.706573Z", "completed_at": "2024-05-03T16:59:40.706580Z"}], "thread_id": "Thread-1", "execution_time": 0.011713266372680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_grades", "compiled": true, "compiled_code": "with\n    grades as (\n        select\n            emission_time,\n            org,\n            course_key,\n            case\n                when object_id like '%/course/%'\n                then 'course'\n                when object_id like '%@sequential+block@%'\n                then 'subsection'\n                when object_id like '%@problem+block@%'\n                then 'problem'\n            end as grade_type,\n            if(\n                grade_type = 'course',\n                splitByString('/course/', object_id)[-1],\n                splitByString('/xblock/', object_id)[-1]\n            ) as entity_id,\n            actor_id,\n            scaled_score\n        from `xapi`.`grading_events`\n        where\n            verb_id in (\n                'http://id.tincanapi.com/verb/earned',\n                'https://w3id.org/xapi/acrossx/verbs/evaluated'\n            )\n    )\n\nselect\n    grades.emission_time as emission_time,\n    grades.org as org,\n    grades.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    grades.entity_id as entity_id,\n    if(blocks.block_name != '', blocks.block_name, courses.course_name) as entity_name,\n    if(\n        blocks.block_name != '', blocks.display_name_with_location, null\n    ) as entity_name_with_location,\n    grades.grade_type as grade_type,\n    grades.actor_id as actor_id,\n    grades.scaled_score as scaled_score,\n    case\n        when scaled_score >= 0.9\n        then '90-100%'\n        when scaled_score >= 0.8 and scaled_score < 0.9\n        then '80-89%'\n        when scaled_score >= 0.7 and scaled_score < 0.8\n        then '70-79%'\n        when scaled_score >= 0.6 and scaled_score < 0.7\n        then '60-69%'\n        when scaled_score >= 0.5 and scaled_score < 0.6\n        then '50-59%'\n        when scaled_score >= 0.4 and scaled_score < 0.5\n        then '40-49%'\n        when scaled_score >= 0.3 and scaled_score < 0.4\n        then '30-39%'\n        when scaled_score >= 0.2 and scaled_score < 0.3\n        then '20-29%'\n        when scaled_score >= 0.1 and scaled_score < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as grade_bucket,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom grades\njoin `xapi`.`course_names` courses on grades.course_key = courses.course_key\nleft join `xapi`.`course_block_names` blocks on grades.entity_id = blocks.location\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_grades`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.711222Z", "completed_at": "2024-05-03T16:59:40.715466Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.717013Z", "completed_at": "2024-05-03T16:59:40.717020Z"}], "thread_id": "Thread-1", "execution_time": 0.008669137954711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_learner_course_grade", "compiled": true, "compiled_code": "\n\nwith\n    ranked_grades as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            scaled_score as course_grade,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`grading_events`\n        where object_id like '%/course/%'\n    )\n\nselect org, course_key, actor_id, course_grade, emission_time\nfrom ranked_grades\nwhere rn = 1", "relation_name": "`xapi`.`fact_learner_course_grade`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.721506Z", "completed_at": "2024-05-03T16:59:40.725750Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.727296Z", "completed_at": "2024-05-03T16:59:40.727302Z"}], "thread_id": "Thread-1", "execution_time": 0.008467435836791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_learner_course_status", "compiled": true, "compiled_code": "\n\nwith\n    ranked_status as (\n        select\n            org,\n            course_key,\n            actor_id,\n            splitByString('/', verb_id)[-1] as approving_state,\n            emission_time,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`grading_events`\n        where\n            verb_id in (\n                'http://adlnet.gov/expapi/verbs/passed',\n                'http://adlnet.gov/expapi/verbs/failed'\n            )\n    )\n\nselect org, course_key, actor_id, approving_state, emission_time\nfrom ranked_status\nwhere rn = 1", "relation_name": "`xapi`.`fact_learner_course_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.731893Z", "completed_at": "2024-05-03T16:59:40.735959Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.737487Z", "completed_at": "2024-05-03T16:59:40.737493Z"}], "thread_id": "Thread-1", "execution_time": 0.008398056030273438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_navigation", "compiled": true, "compiled_code": "select\n    navigation.emission_time as emission_time,\n    navigation.org as org,\n    navigation.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    navigation.actor_id as actor_id,\n    navigation.block_id as block_id,\n    blocks.block_name as block_name,\n    blocks.display_name_with_location as block_name_with_location,\n    blocks.course_order as course_order,\n    navigation.object_type as object_type,\n    navigation.starting_position as starting_position,\n    navigation.ending_point as ending_point,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom `xapi`.`navigation_events` navigation\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (\n        navigation.course_key = blocks.course_key\n        and navigation.block_id = blocks.block_id\n    )\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_navigation`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.742045Z", "completed_at": "2024-05-03T16:59:40.746822Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.748418Z", "completed_at": "2024-05-03T16:59:40.748425Z"}], "thread_id": "Thread-1", "execution_time": 0.009121179580688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_problem_responses", "compiled": true, "compiled_code": "with\n    responses as (\n        select\n            emission_time,\n            org,\n            course_key,\n            object_id,\n            \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_]*)(_\\d_\\d)?', 1\n    )\n as problem_id,\n            actor_id,\n            responses,\n            success,\n            attempts,\n            interaction_type\n        from `xapi`.`problem_events`\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\n    )\n\nselect\n    responses.emission_time as emission_time,\n    responses.org as org,\n    responses.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    responses.problem_id as problem_id,\n    blocks.block_name as problem_name,\n    blocks.display_name_with_location as problem_name_with_location,\n    \n    concat(\n        '<a href=\"', responses.object_id, '\" target=\"_blank\">', blocks.block_name, '</a>'\n    )\n as problem_link,\n    blocks.graded as graded,\n    course_order as course_order,\n    responses.actor_id as actor_id,\n    responses.responses as responses,\n    responses.success as success,\n    responses.attempts as attempts,\n    responses.interaction_type as interaction_type,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom responses\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (\n        responses.course_key = blocks.course_key\n        and responses.problem_id = blocks.block_id\n    )\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id\ngroup by\n    -- multi-part questions include an extra record for the response to the first\n    -- part of the question. this group by clause eliminates the duplicate record\n    emission_time,\n    org,\n    course_key,\n    course_name,\n    course_run,\n    problem_id,\n    problem_name,\n    problem_name_with_location,\n    problem_link,\n    actor_id,\n    responses,\n    success,\n    attempts,\n    course_order,\n    graded,\n    interaction_type,\n    username,\n    name,\n    email", "relation_name": "`xapi`.`fact_problem_responses`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.752925Z", "completed_at": "2024-05-03T16:59:40.757295Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.758858Z", "completed_at": "2024-05-03T16:59:40.758866Z"}], "thread_id": "Thread-1", "execution_time": 0.008725166320800781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.int_problem_hints", "compiled": true, "compiled_code": "with\n    hints as (\n        select\n            emission_time,\n            org,\n            course_key,\n            \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_]*)(_\\d_\\d)?', 1\n    )\n as problem_id,\n            actor_id,\n            case\n                when object_id like '%/hint%'\n                then 'hint'\n                when object_id like '%/answer%'\n                then 'answer'\n                else 'N/A'\n            end as help_type\n        from `xapi`.`problem_events`\n        where verb_id = 'http://adlnet.gov/expapi/verbs/asked'\n    )\n\nselect\n    hints.emission_time as emission_time,\n    hints.org as org,\n    hints.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    hints.problem_id as problem_id,\n    blocks.block_name as problem_name,\n    blocks.display_name_with_location as problem_name_with_location,\n    blocks.course_order as course_order,\n    hints.actor_id as actor_id,\n    hints.help_type as help_type\nfrom hints\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (hints.course_key = blocks.course_key and hints.problem_id = blocks.block_id)", "relation_name": "`xapi`.`int_problem_hints`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.763378Z", "completed_at": "2024-05-03T16:59:40.768357Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.769933Z", "completed_at": "2024-05-03T16:59:40.769944Z"}], "thread_id": "Thread-1", "execution_time": 0.009302616119384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_transcript_usage", "compiled": true, "compiled_code": "select\n    transcripts.emission_time as emission_time,\n    transcripts.org as org,\n    transcripts.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    transcripts.video_id as video_id,\n    blocks.block_name as video_name,\n    blocks.display_name_with_location as video_name_with_location,\n    blocks.course_order as course_order,\n    transcripts.actor_id as actor_id,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom `xapi`.`video_transcript_events` transcripts\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (\n        transcripts.course_key = blocks.course_key\n        and transcripts.video_id = blocks.block_id\n    )\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id\nwhere transcripts.cc_enabled", "relation_name": "`xapi`.`fact_transcript_usage`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.774362Z", "completed_at": "2024-05-03T16:59:40.779062Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.780654Z", "completed_at": "2024-05-03T16:59:40.780661Z"}], "thread_id": "Thread-1", "execution_time": 0.008908271789550781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_video_plays", "compiled": true, "compiled_code": "-- model to support number of watches per video\n-- ref:\n-- https://edx.readthedocs.io/projects/edx-insights/en/latest/Reference.html#engagement-computations\nwith\n    plays as (\n        select\n            emission_time,\n            org,\n            course_key,\n            object_id,\n            video_duration,\n            video_position,\n            splitByString('/xblock/', object_id)[-1] as video_id,\n            actor_id\n        from `xapi`.`video_playback_events`\n        where verb_id = 'https://w3id.org/xapi/video/verbs/played'\n    )\n\nselect\n    plays.emission_time as emission_time,\n    plays.org as org,\n    plays.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    plays.video_id as video_id,\n    blocks.block_name as video_name,\n    blocks.display_name_with_location as video_name_with_location,\n    \n    concat(\n        '<a href=\"', plays.object_id, '\" target=\"_blank\">', blocks.block_name, '</a>'\n    )\n as video_link,\n    blocks.graded as graded,\n    plays.video_position as video_position,\n    plays.video_duration as video_duration,\n    case\n        when video_position/video_duration >= 0.9\n        then '90-100%'\n        when video_position/video_duration >= 0.8 and video_position/video_duration < 0.9\n        then '80-89%'\n        when video_position/video_duration >= 0.7 and video_position/video_duration < 0.8\n        then '70-79%'\n        when video_position/video_duration >= 0.6 and video_position/video_duration < 0.7\n        then '60-69%'\n        when video_position/video_duration >= 0.5 and video_position/video_duration < 0.6\n        then '50-59%'\n        when video_position/video_duration >= 0.4 and video_position/video_duration < 0.5\n        then '40-49%'\n        when video_position/video_duration >= 0.3 and video_position/video_duration < 0.4\n        then '30-39%'\n        when video_position/video_duration >= 0.2 and video_position/video_duration < 0.3\n        then '20-29%'\n        when video_position/video_duration >= 0.1 and video_position/video_duration < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as visualization_bucket,\n    plays.actor_id as actor_id,\n    users.username as username,\n    users.name as name,\n    users.email as email,\n    blocks.section_with_name as section_with_name,\n    blocks.subsection_with_name as subsection_with_name,\n    blocks.course_order as course_order\nfrom plays\njoin\n    `xapi`.`dim_course_blocks_extended` blocks\n    on (plays.course_key = blocks.course_key and plays.video_id = blocks.block_id)\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_video_plays`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.785148Z", "completed_at": "2024-05-03T16:59:40.798181Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.799782Z", "completed_at": "2024-05-03T16:59:40.799790Z"}], "thread_id": "Thread-1", "execution_time": 0.017342329025268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_enrollment_status_enrollment_status__registered__unregistered.893527c11f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_enrollment_status`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.804321Z", "completed_at": "2024-05-03T16:59:40.809266Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.810848Z", "completed_at": "2024-05-03T16:59:40.810859Z"}], "thread_id": "Thread-1", "execution_time": 0.009348392486572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_enrollments_enrollment_status__registered__unregistered.f8d10203f4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_enrollments`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.815359Z", "completed_at": "2024-05-03T16:59:40.820476Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.821991Z", "completed_at": "2024-05-03T16:59:40.821998Z"}], "thread_id": "Thread-1", "execution_time": 0.009362220764160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_instance_enrollments_enrollment_status__registered__unregistered.305ffdf696", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_instance_enrollments`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.826440Z", "completed_at": "2024-05-03T16:59:40.833710Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.835212Z", "completed_at": "2024-05-03T16:59:40.835218Z"}], "thread_id": "Thread-1", "execution_time": 0.011477947235107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_grades_grade_type__course__subsection__problem.712bd50c2f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        grade_type as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_grades`\n    group by grade_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'course','subsection','problem'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.839795Z", "completed_at": "2024-05-03T16:59:40.844628Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.846178Z", "completed_at": "2024-05-03T16:59:40.846185Z"}], "thread_id": "Thread-1", "execution_time": 0.009155750274658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_student_status", "compiled": true, "compiled_code": "select\n    fes.org as org,\n    fes.course_key as course_key,\n    fes.actor_id as actor_id,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    if(empty(approving_state), 'failed', approving_state) as approving_state,\n    enrollment_mode,\n    enrollment_status,\n    course_grade as course_grade,\n    case\n        when course_grade >= 0.9\n        then '90-100%'\n        when course_grade >= 0.8 and course_grade < 0.9\n        then '80-89%'\n        when course_grade >= 0.7 and course_grade < 0.8\n        then '70-79%'\n        when course_grade >= 0.6 and course_grade < 0.7\n        then '60-69%'\n        when course_grade >= 0.5 and course_grade < 0.6\n        then '50-59%'\n        when course_grade >= 0.4 and course_grade < 0.5\n        then '40-49%'\n        when course_grade >= 0.3 and course_grade < 0.4\n        then '30-39%'\n        when course_grade >= 0.2 and course_grade < 0.3\n        then '20-29%'\n        when course_grade >= 0.1 and course_grade < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as grade_bucket,\n    users.username as username,\n    users.name as name,\n    users.email as email,\n    fes.emission_time as enrolled_at\nfrom `xapi`.`fact_enrollment_status` fes\nleft join\n    `xapi`.`fact_learner_course_status` lg\n    on fes.org = lg.org\n    and fes.course_key = lg.course_key\n    and fes.actor_id = lg.actor_id\nleft join\n    `xapi`.`fact_learner_course_grade` ls\n    on fes.org = ls.org\n    and fes.course_key = ls.course_key\n    and fes.actor_id = ls.actor_id\njoin\n    `xapi`.`course_names` courses\n    on fes.org = courses.org\n    and fes.course_key = courses.course_key\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_student_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.850828Z", "completed_at": "2024-05-03T16:59:40.856719Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.858241Z", "completed_at": "2024-05-03T16:59:40.858248Z"}], "thread_id": "Thread-1", "execution_time": 0.010336637496948242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_learner_course_status_approving_state__passed__failed.f9c0c1b85f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        approving_state as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_learner_course_status`\n    group by approving_state\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'passed','failed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.862755Z", "completed_at": "2024-05-03T16:59:40.867425Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.868970Z", "completed_at": "2024-05-03T16:59:40.868980Z"}], "thread_id": "Thread-1", "execution_time": 0.008889198303222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_navigation_completion", "compiled": true, "compiled_code": "-- number of learners who've viewed all pages in a section/subsection\nwith\n    visited_subsection_pages as (\n        select distinct\n            date(emission_time) as visited_on,\n            org,\n            course_key,\n            course_name,\n            course_run,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', block_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', block_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            actor_id,\n            block_id\n        from `xapi`.`fact_navigation`\n    )\n\nselect\n    visits.visited_on as visited_on,\n    visits.org as org,\n    visits.course_key as course_key,\n    visits.course_name as course_name,\n    visits.course_run as course_run,\n    pages.section_with_name as section_with_name,\n    pages.subsection_with_name as subsection_with_name,\n    pages.course_order as course_order,\n    pages.page_count as page_count,\n    visits.actor_id as actor_id,\n    visits.block_id as block_id,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom visited_subsection_pages visits\njoin\n    `xapi`.`int_pages_per_subsection` pages\n    on (\n        visits.org = pages.org\n        and visits.course_key = pages.course_key\n        and visits.section_number = pages.section_number\n        and visits.subsection_number = pages.subsection_number\n    )\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_navigation_completion`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.873469Z", "completed_at": "2024-05-03T16:59:40.878458Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.880049Z", "completed_at": "2024-05-03T16:59:40.880056Z"}], "thread_id": "Thread-1", "execution_time": 0.009330272674560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_navigation_dropoff", "compiled": true, "compiled_code": "with\n    blocks as (\n        select\n            org,\n            course_key,\n            display_name_with_location,\n            hierarchy_location,\n            course_order\n        from `xapi`.`dim_course_blocks`\n        where block_id like '%@chapter+block@%' or block_id like '%@sequential+block@%'\n    ),\n    page_views_by_section as (\n        -- section: x:0:0\n        -- take just the first number from the hierarchy location\n        select\n            date(emission_time) as emission_date,\n            org,\n            course_key,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', block_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            actor_id,\n            count(*) as total_views\n        from `xapi`.`fact_navigation`\n        group by emission_date, org, course_key, section_number, actor_id\n    ),\n    page_views_by_subsection as (\n        -- subsection: x:y:0\n        -- take the first two numbers from the hierarchy location\n        select\n            date(emission_time) as emission_date,\n            org,\n            course_key,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', block_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            actor_id,\n            count(*) as total_views\n        from `xapi`.`fact_navigation`\n        group by emission_date, org, course_key, subsection_number, actor_id\n    ),\n    page_views as (\n        select\n            emission_date,\n            org,\n            course_key,\n            'section' as rollup_name,\n            section_number as hierarchy_location,\n            actor_id,\n            sum(total_views) as total_views\n        from page_views_by_section\n        group by\n            emission_date, org, course_key, rollup_name, hierarchy_location, actor_id\n        union all\n        select\n            emission_date,\n            org,\n            course_key,\n            'subsection' as rollup_name,\n            subsection_number as hierarchy_location,\n            actor_id,\n            sum(total_views) as total_views\n        from page_views_by_subsection\n        group by\n            emission_date, org, course_key, rollup_name, hierarchy_location, actor_id\n    )\n\nselect\n    page_views.emission_date as emission_date,\n    page_views.org as org,\n    page_views.course_key as course_key,\n    page_views.rollup_name as rollup_name,\n    blocks.display_name_with_location as block_name,\n    blocks.course_order as course_order,\n    page_views.actor_id as actor_id,\n    page_views.total_views as total_views,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom page_views\njoin\n    blocks\n    on (\n        page_views.org = blocks.org\n        and page_views.course_key = blocks.course_key\n        and page_views.hierarchy_location = blocks.hierarchy_location\n    )\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_navigation_dropoff`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.884599Z", "completed_at": "2024-05-03T16:59:40.889296Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.890871Z", "completed_at": "2024-05-03T16:59:40.890878Z"}], "thread_id": "Thread-1", "execution_time": 0.009145259857177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_problem_engagement", "compiled": true, "compiled_code": "with\n    attempted_subsection_problems as (\n        select distinct\n            date(emission_time) as attempted_on,\n            org,\n            course_key,\n            course_run,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', problem_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', problem_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            course_order as course_order,\n            graded,\n            actor_id,\n            problem_id\n        from `xapi`.`fact_problem_responses`\n    )\n\nselect\n    attempts.attempted_on as attempted_on,\n    attempts.org as org,\n    attempts.course_key as course_key,\n    attempts.course_run as course_run,\n    problems.section_with_name as section_with_name,\n    problems.subsection_with_name as subsection_with_name,\n    problems.item_count as item_count,\n    attempts.actor_id as actor_id,\n    attempts.problem_id as problem_id,\n    attempts.course_order as course_order,\n    attempts.graded as graded,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom attempted_subsection_problems attempts\njoin\n    `xapi`.`int_problems_per_subsection` problems\n    on (\n        attempts.org = problems.org\n        and attempts.course_key = problems.course_key\n        and attempts.section_number = problems.section_number\n        and attempts.subsection_number = problems.subsection_number\n    )\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_problem_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.895267Z", "completed_at": "2024-05-03T16:59:40.900471Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.902041Z", "completed_at": "2024-05-03T16:59:40.902048Z"}], "thread_id": "Thread-1", "execution_time": 0.009397268295288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.int_problem_results", "compiled": true, "compiled_code": "-- select one record per (learner, problem, course, org) tuple\n-- contains either the first successful attempt\n-- or the most recent unsuccessful attempt\n-- find the timestamp of the earliest successful response\n-- this will be used to pick the xAPI event corresponding to that submission\nwith\n    successful_responses as (\n        select\n            org,\n            course_key,\n            problem_id,\n            actor_id,\n            min(emission_time) as first_success_at\n        from `xapi`.`fact_problem_responses`\n        where\n            -- clickhouse throws an error when shortening this to `where success`\n            success = true\n        group by org, course_key, problem_id, actor_id\n    ),\n    -- for all learners who did not submit a successful response,\n    -- find the timestamp of the most recent unsuccessful response\n    unsuccessful_responses as (\n        select\n            org,\n            course_key,\n            problem_id,\n            actor_id,\n            max(emission_time) as last_response_at\n        from `xapi`.`fact_problem_responses`\n        where actor_id not in (select distinct actor_id from successful_responses)\n        group by org, course_key, problem_id, actor_id\n    ),\n    -- combine result sets for successful and unsuccessful problem submissions\n    responses as (\n        select org, course_key, problem_id, actor_id, first_success_at as emission_time\n        from successful_responses\n        union all\n        select org, course_key, problem_id, actor_id, last_response_at as emission_time\n        from unsuccessful_responses\n    )\n\nselect\n    emission_time,\n    org,\n    course_key,\n    course_name,\n    course_run,\n    problem_id,\n    problem_name,\n    problem_name_with_location,\n    course_order,\n    problem_link,\n    actor_id,\n    responses,\n    success,\n    attempts,\n    graded,\n    interaction_type\nfrom `xapi`.`fact_problem_responses` problem_responses\njoin responses using (org, course_key, problem_id, actor_id, emission_time)", "relation_name": "`xapi`.`int_problem_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.906507Z", "completed_at": "2024-05-03T16:59:40.911048Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.912628Z", "completed_at": "2024-05-03T16:59:40.912634Z"}], "thread_id": "Thread-1", "execution_time": 0.008884191513061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_video_engagement", "compiled": true, "compiled_code": "with\n    viewed_subsection_videos as (\n        select distinct\n            date(emission_time) as viewed_on,\n            org,\n            course_key,\n            course_run,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', video_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', video_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            graded,\n            actor_id,\n            video_id,\n            username,\n            name,\n            email\n        from `xapi`.`fact_video_plays`\n    )\n\nselect\n    views.viewed_on,\n    views.org,\n    views.course_key,\n    views.course_run,\n    videos.section_with_name,\n    videos.subsection_with_name,\n    videos.course_order,\n    videos.item_count,\n    views.actor_id,\n    views.video_id,\n    views.graded,\n    views.username as username,\n    views.name as name,\n    views.email as email\nfrom viewed_subsection_videos views\njoin\n    `xapi`.`int_videos_per_subsection` videos\n    on (\n        views.org = videos.org\n        and views.course_key = videos.course_key\n        and views.section_number = videos.section_number\n        and views.subsection_number = videos.subsection_number\n    )", "relation_name": "`xapi`.`fact_video_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.917075Z", "completed_at": "2024-05-03T16:59:40.920911Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.922501Z", "completed_at": "2024-05-03T16:59:40.922507Z"}], "thread_id": "Thread-1", "execution_time": 0.00818181037902832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_at_risk_learners", "compiled": true, "compiled_code": "with\n    page_visits as (\n        select org, course_key, actor_id, max(emission_time) as last_visited\n        from `xapi`.`navigation_events`\n        group by org, course_key, actor_id\n    )\n\nselect\n    learners.org as org,\n    learners.course_key as course_key,\n    learners.course_name as course_name,\n    learners.course_run as course_run,\n    learners.actor_id as actor_id,\n    learners.username as username,\n    learners.name as name,\n    learners.email as email,\n    learners.enrollment_mode as enrollment_mode,\n    learners.course_grade as course_grade,\n    learners.enrolled_at as enrolled_at,\n    page_visits.last_visited as last_visited\nfrom `xapi`.`fact_student_status` learners\njoin page_visits using (org, course_key, actor_id)\nwhere\n    approving_state = 'failed'\n    and enrollment_status = 'registered'\n    and page_visits.last_visited < subtractDays(now(), 7)", "relation_name": "`xapi`.`dim_at_risk_learners`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.927027Z", "completed_at": "2024-05-03T16:59:40.931994Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.933507Z", "completed_at": "2024-05-03T16:59:40.933514Z"}], "thread_id": "Thread-1", "execution_time": 0.009151220321655273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_student_status_enrollment_status__registered__unregistered.53cae8a0f3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_student_status`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.937991Z", "completed_at": "2024-05-03T16:59:40.943502Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.945075Z", "completed_at": "2024-05-03T16:59:40.945082Z"}], "thread_id": "Thread-1", "execution_time": 0.009751081466674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_navigation_dropoff_rollup_name__section__subsection.8afafb193f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        rollup_name as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_navigation_dropoff`\n    group by rollup_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'section','subsection'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.949596Z", "completed_at": "2024-05-03T16:59:40.953923Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.955510Z", "completed_at": "2024-05-03T16:59:40.955518Z"}], "thread_id": "Thread-1", "execution_time": 0.008667230606079102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_learner_problem_summary", "compiled": true, "compiled_code": "-- summary table for a learner's performance on and interactions with a\n-- particular problem\nwith\n    results_with_hints as (\n        select\n            org,\n            course_key,\n            course_name,\n            course_run,\n            problem_id,\n            problem_name,\n            problem_name_with_location,\n            course_order,\n            actor_id,\n            success,\n            attempts,\n            0 as num_hints_displayed,\n            0 as num_answers_displayed\n        from `xapi`.`int_problem_results`\n        union all\n        select\n            org,\n            course_key,\n            course_name,\n            course_run,\n            problem_id,\n            problem_name,\n            problem_name_with_location,\n            course_order,\n            actor_id,\n            null as success,\n            null as attempts,\n            case help_type when 'hint' then 1 else 0 end as num_hints_displayed,\n            case help_type when 'answer' then 1 else 0 end as num_answers_displayed\n        from `xapi`.`int_problem_hints`\n    )\n\n-- n.b.: there should only be one row per org, course, problem, and actor\n-- in problem_results, so any(success) and any(attempts) should return the\n-- values from that part of the union and not the null values used as\n-- placeholders in the problem_hints part of the union\nselect\n    org,\n    course_key,\n    course_name,\n    course_run,\n    problem_id,\n    problem_name,\n    problem_name_with_location,\n    course_order,\n    actor_id,\n    coalesce(any(success), false) as success,\n    coalesce(any(attempts), 0) as attempts,\n    sum(num_hints_displayed) as num_hints_displayed,\n    sum(num_answers_displayed) as num_answers_displayed,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom results_with_hints\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id\ngroup by\n    org,\n    course_key,\n    course_name,\n    course_run,\n    problem_id,\n    problem_name,\n    problem_name_with_location,\n    course_order,\n    actor_id,\n    username,\n    name,\n    email", "relation_name": "`xapi`.`fact_learner_problem_summary`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.960102Z", "completed_at": "2024-05-03T16:59:40.965739Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.967376Z", "completed_at": "2024-05-03T16:59:40.967383Z"}], "thread_id": "Thread-1", "execution_time": 0.010186433792114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_problem_responses_extended", "compiled": true, "compiled_code": "with\n    problem_results as (\n        select\n            *,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', problem_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', problem_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number\n        from `xapi`.`int_problem_results`\n    )\nselect\n    results.emission_time as emission_time,\n    results.org as org,\n    results.course_key as course_key,\n    results.course_name as course_name,\n    results.course_run as course_run,\n    problems.section_with_name as section_with_name,\n    problems.subsection_with_name as subsection_with_name,\n    results.problem_id as problem_id,\n    results.problem_name as problem_name,\n    results.problem_name_with_location as problem_name_with_location,\n    results.problem_link as problem_link,\n    results.actor_id as actor_id,\n    results.responses as responses,\n    results.success as success,\n    results.attempts as attempts,\n    results.course_order as course_order,\n    results.graded as graded,\n    results.interaction_type as interaction_type,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom problem_results results\njoin\n    `xapi`.`int_problems_per_subsection` problems\n    on (\n        results.org = problems.org\n        and results.course_key = problems.course_key\n        and results.section_number = problems.section_number\n        and results.subsection_number = problems.subsection_number\n    )\nleft outer join\n    `xapi`.`dim_user_pii` users on toUUID(actor_id) = users.external_user_id", "relation_name": "`xapi`.`fact_problem_responses_extended`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.971895Z", "completed_at": "2024-05-03T16:59:40.975407Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.976903Z", "completed_at": "2024-05-03T16:59:40.976910Z"}], "thread_id": "Thread-1", "execution_time": 0.007689476013183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.problem_results_uniqueness", "compiled": true, "compiled_code": "-- problem_results should only have one record for the following\n-- combination of values:\n-- actor_id, problem_id, course_id, org\nselect org, course_key, problem_id, actor_id, responses, count(*) as num_rows\nfrom `xapi`.`int_problem_results`\ngroup by org, course_key, problem_id, actor_id, responses\nhaving num_rows > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.981271Z", "completed_at": "2024-05-03T16:59:40.984790Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:40.986272Z", "completed_at": "2024-05-03T16:59:40.986278Z"}], "thread_id": "Thread-1", "execution_time": 0.007639408111572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.learner_problem_summary_uniqueness", "compiled": true, "compiled_code": "select org, course_key, problem_id, actor_id, count(*) as num_rows\nfrom `xapi`.`fact_learner_problem_summary`\ngroup by org, course_key, problem_id, actor_id\nhaving num_rows > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:40.990672Z", "completed_at": "2024-05-03T16:59:41.000013Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:41.002538Z", "completed_at": "2024-05-03T16:59:41.002547Z"}], "thread_id": "Thread-1", "execution_time": 0.015153169631958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.not_null_fact_learner_problem_summary_attempts.817beed32b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect attempts\nfrom `xapi`.`fact_learner_problem_summary`\nwhere attempts is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-03T16:59:41.009302Z", "completed_at": "2024-05-03T16:59:41.016139Z"}, {"name": "execute", "started_at": "2024-05-03T16:59:41.018479Z", "completed_at": "2024-05-03T16:59:41.018487Z"}], "thread_id": "Thread-1", "execution_time": 0.013439655303955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.not_null_fact_learner_problem_summary_success.76b52cb2da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect success\nfrom `xapi`.`fact_learner_problem_summary`\nwhere success is null\n\n\n", "relation_name": null}], "elapsed_time": 0.7847440242767334, "args": {"favor_state": false, "print": true, "log_file_max_bytes": 10485760, "select": [], "compile": true, "invocation_command": "dbt docs generate", "version_check": true, "empty_catalog": false, "exclude": [], "printer_width": 80, "populate_cache": true, "static_parser": true, "log_level_file": "debug", "partial_parse_file_diff": true, "partial_parse": true, "write_json": true, "log_format_file": "debug", "which": "generate", "cache_selected_only": false, "introspect": true, "profiles_dir": "./.github/", "use_colors_file": true, "log_path": "/home/runner/work/aspects-dbt/aspects-dbt/logs", "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "quiet": false, "macro_debugging": false, "send_anonymous_usage_stats": true, "static": false, "show_resource_report": false, "vars": {}, "log_level": "info", "log_format": "default", "project_dir": "/home/runner/work/aspects-dbt/aspects-dbt", "enable_legacy_logger": false, "use_colors": true, "defer": false, "strict_mode": false}}