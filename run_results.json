{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-09-10T13:54:28.384544Z", "invocation_id": "25f1b2ef-6661-4c42-b46c-661ea5c727fd", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:27.919654Z", "completed_at": "2025-09-10T13:54:27.996298Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:27.996824Z", "completed_at": "2025-09-10T13:54:27.996839Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.078277587890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_course_names", "compiled": true, "compiled_code": "\n\nwith\n    latest as (\n        select org, course_key, max(modified) as last_modified\n        from `event_sink`.`course_overviews`\n        group by org, course_key\n    )\nselect\n    course_key,\n    display_name as course_name,\n    splitByString('+', course_key)[-1] as course_run,\n    org,\n    JSONExtract(course_data_json, 'tags', 'String') as tags_str\nfrom `event_sink`.`course_overviews` co\ninner join\n    latest mr\n    on mr.org = co.org\n    and mr.course_key = co.course_key\n    and co.modified = mr.last_modified", "relation_name": "`xapi`.`dim_course_names`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:27.999202Z", "completed_at": "2025-09-10T13:54:28.005304Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.005768Z", "completed_at": "2025-09-10T13:54:28.005779Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0076329708099365234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_course_blocks", "compiled": true, "compiled_code": "\n\nselect\n    location,\n    display_name as block_name,\n    toString(section)\n    || ':'\n    || toString(subsection)\n    || ':'\n    || toString(unit)\n    || ' - '\n    || display_name as display_name_with_location,\n    JSONExtractInt(xblock_data_json, 'section') as section,\n    JSONExtractInt(xblock_data_json, 'subsection') as subsection,\n    JSONExtractInt(xblock_data_json, 'unit') as unit,\n    JSONExtractBool(xblock_data_json, 'graded') as graded,\n    order as course_order,\n    course_key,\n    dump_id,\n    time_last_dumped\nfrom `event_sink`.`course_blocks` course_blocks\njoin\n    (\n        select location, max(time_last_dumped) as max_time_last_dumped\n        from `event_sink`.`course_blocks`\n        group by location\n    ) latest_course_blocks\n    on course_blocks.location = latest_course_blocks.location\n    and course_blocks.time_last_dumped = latest_course_blocks.max_time_last_dumped", "relation_name": "`xapi`.`dim_most_recent_course_blocks`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.008386Z", "completed_at": "2025-09-10T13:54:28.012593Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.013090Z", "completed_at": "2025-09-10T13:54:28.013098Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006042957305908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_object_tags", "compiled": true, "compiled_code": "\nwith\n    latest as (\n        select id, max(time_last_dumped) as last_modified\n        from `event_sink`.`object_tag`\n        group by id\n    )\nselect id, object_id, taxonomy, _value, _export_id, lineage\nfrom `event_sink`.`object_tag` ot\ninner join latest mrot on mrot.id = ot.id and ot.time_last_dumped = mrot.last_modified", "relation_name": "`xapi`.`dim_most_recent_object_tags`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.015325Z", "completed_at": "2025-09-10T13:54:28.019793Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.020294Z", "completed_at": "2025-09-10T13:54:28.020305Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005998849868774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_tags", "compiled": true, "compiled_code": "\nwith\n    latest as (\n        select id, max(time_last_dumped) as last_modified\n        from `event_sink`.`tag`\n        group by id\n    )\nselect id, taxonomy, parent, value, external_id, lineage\nfrom `event_sink`.`tag` ot\ninner join latest mrot on mrot.id = ot.id and ot.time_last_dumped = mrot.last_modified", "relation_name": "`xapi`.`dim_most_recent_tags`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.022562Z", "completed_at": "2025-09-10T13:54:28.026999Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.027592Z", "completed_at": "2025-09-10T13:54:28.027602Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006065845489501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_taxonomies", "compiled": true, "compiled_code": "\nwith\n    latest as (\n        select id, max(time_last_dumped) as last_modified\n        from `event_sink`.`taxonomy`\n        group by id\n    )\nselect id, name\nfrom `event_sink`.`taxonomy` ot\ninner join latest mrot on mrot.id = ot.id and ot.time_last_dumped = mrot.last_modified", "relation_name": "`xapi`.`dim_most_recent_taxonomies`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.030339Z", "completed_at": "2025-09-10T13:54:28.036434Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.036912Z", "completed_at": "2025-09-10T13:54:28.036925Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008085966110229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.user_pii", "compiled": true, "compiled_code": "\n\nwith\n    most_recent_user_profile as (\n        select user_id, max(time_last_dumped) as time_last_dumped\n        from `event_sink`.`user_profile`\n        group by user_id\n    )\nselect\n    ex.user_id as user_id,\n    if(\n        empty(ex.external_user_id),\n        concat('mailto:', email),\n        ex.external_user_id::String\n    ) as external_user_id,\n    up.username as username,\n    up.name as name,\n    up.email as email\nfrom most_recent_user_profile mrup\nleft outer join\n    `event_sink`.`external_id` ex on mrup.user_id = ex.user_id\nleft outer join\n    `event_sink`.`user_profile` up\n    on up.user_id = mrup.user_id\n    and up.time_last_dumped = mrup.time_last_dumped", "relation_name": "`xapi`.`user_pii`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.039289Z", "completed_at": "2025-09-10T13:54:28.044015Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.044521Z", "completed_at": "2025-09-10T13:54:28.044528Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006293773651123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.xapi_events_all_parsed", "compiled": true, "compiled_code": "\n\nselect\n    event_id as event_id,\n    toLowCardinality(JSON_VALUE(event::String, '$.verb.id')) as verb_id,\n    COALESCE(\n        NULLIF(JSON_VALUE(event::String, '$.actor.account.name'), ''),\n        NULLIF(JSON_VALUE(event::String, '$.actor.mbox'), ''),\n        JSON_VALUE(event::String, '$.actor.mbox_sha1sum')\n    ) as actor_id,\n    JSON_VALUE(event::String, '$.object.id') as object_id,\n    -- If the contextActivities parent is a course, use that. It can be a \"course\"\n    -- type, or a \"cmi.interaction\" type for multiple question problem submissions.\n    -- Otherwise use the object id for the course id.\n    toLowCardinality(\n        multiIf(\n            -- If the contextActivities parent is a course, use that\n            JSON_VALUE(\n                event::String, '$.context.contextActivities.parent[0].definition.type'\n            )\n            = 'http://adlnet.gov/expapi/activities/course',\n            JSON_VALUE(event::String, '$.context.contextActivities.parent[0].id'),\n            -- Else if the contextActivities parent is a GroupActivity, it's a multi\n            -- question problem and we use the grouping id\n            JSON_VALUE(\n                event::String, '$.context.contextActivities.parent[0].objectType'\n            )\n            in ('Activity', 'GroupActivity'),\n            JSON_VALUE(event::String, '$.context.contextActivities.grouping[0].id'),\n            -- Otherwise use the object id\n            JSON_VALUE(event::String, '$.object.id')\n        )\n    ) as course_id,\n    toLowCardinality(splitByString('/', course_id)[-1]) as course_key,\n    toLowCardinality(\n        coalesce(\n            get_org_from_course_url(course_id),\n            get_org_from_ccx_course_url(course_id),\n            ''\n        )\n    ) as org,\n    emission_time as emission_time,\n    event::String as event\nfrom `xapi`.`xapi_events_all`", "relation_name": "`xapi`.`xapi_events_all_parsed`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.046993Z", "completed_at": "2025-09-10T13:54:28.051121Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.051569Z", "completed_at": "2025-09-10T13:54:28.051578Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005898475646972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.a_tag", "compiled": true, "compiled_code": "select\n    'http://local.edly.io/xblock/block-v1:OpenedX+DemoX+DemoCourse+type@video+block@d5a54ce52f464acfa7a83ae155712cc3' as object_id,\n    'The Purpose, Power and Reach of the Open edX\u00ae Platform' as video_name,\n    \n    concat(\n        '<a href=\"', object_id, '\" target=\"_blank\">', video_name, '</a>'\n    )\n as object_a_tag\nfrom\n    system.numbers\nwhere object_a_tag != '<a href=\"http://local.edly.io/xblock/block-v1:OpenedX+DemoX+DemoCourse+type@video+block@d5a54ce52f464acfa7a83ae155712cc3\" target=\"_blank\">The Purpose, Power and Reach of the Open edX\u00ae Platform</a>'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.053739Z", "completed_at": "2025-09-10T13:54:28.063367Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.063808Z", "completed_at": "2025-09-10T13:54:28.063814Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011113405227661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_bucket", "compiled": true, "compiled_code": "select 0.95 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '90-100%'\n\nunion all \n\nselect 0.8 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '80-89%'\n\nunion all \n\nselect 0.700009 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '70-79%'\n\nunion all \n\nselect 0.69999 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '60-69%'\n\nunion all \n\nselect 0.5 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '50-59%'\n\nunion all \n\nselect 0.4123 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '40-49%'\n\nunion all \n\nselect 0.3000000000 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '30-39%'\n\nunion all \n\nselect 0.276734 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '20-29%'\n\nunion all \n\nselect 0.11111 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '10-19%'\n\nunion all \n\nselect 0.0342 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '0-9%'\n\nunion all \n\nselect 0.00000005 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '0-9%'\n\nunion all \n\nselect -0.1 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '0-9%'\n\nunion all \n\nselect 123 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '90-100%'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.066009Z", "completed_at": "2025-09-10T13:54:28.070525Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.070965Z", "completed_at": "2025-09-10T13:54:28.070971Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060024261474609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_problem_id", "compiled": true, "compiled_code": "select\n    'http://local.edly.io:8000/xblock/block-v1:edunext+demo+demo+ccx+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:edunext+demo+demo+ccx+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n\nunion all\n\nselect\n    'http://localhost:18000/course/course-v1:Org1+DemoX+1937e7'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != ''\n\nunion all\n\nselect\n    'http://localhost:18000/xblock/block-v1:course-v1:Org0+DemoX+2bc51b+type@problem+block@09b07a8d'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:course-v1:Org0+DemoX+2bc51b+type@problem+block@09b07a8d'\n\nunion all\n\nselect\n    'http://localhost:18000/xblock/block-v1:course-v1:Org0+DemoX+2bc51b+type@problem+block@09b07a8d/answer'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:course-v1:Org0+DemoX+2bc51b+type@problem+block@09b07a8d'\n\nunion all\n\nselect\n    'http://localhost:18000/xblock/block-v1:course-v1:Org0+DemoX+81bba1+type@problem+block@20d3f709/hint/1'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:course-v1:Org0+DemoX+81bba1+type@problem+block@20d3f709'\n\nunion all\n\nselect\n    'http://localhost:18000/xblock/block-v1:course-v1:Org0+DemoX+81bba1+type@problem+block@20d3f709/hint/1'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:course-v1:Org0+DemoX+81bba1+type@problem+block@20d3f709'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.073199Z", "completed_at": "2025-09-10T13:54:28.075930Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.076437Z", "completed_at": "2025-09-10T13:54:28.076442Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004319906234741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_problem_id_with_ccx", "compiled": true, "compiled_code": "select\n    'http://local.edly.io:8000/xblock/ccx-block-v1:edunext+demo+demo+ccx@1+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'ccx-block-v1:edunext+demo+demo+ccx@1+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.078633Z", "completed_at": "2025-09-10T13:54:28.082780Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.083283Z", "completed_at": "2025-09-10T13:54:28.083291Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00570225715637207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.section_from_display", "compiled": true, "compiled_code": "select \n    '1:2:3 - Course 1a2b3c' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n    != '1:0:0'\n\nunion all \n\nselect \n    '1:2:33 - Video 12' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n    != '1:0:0'\n\nunion all \n\nselect \n    '1:22:3 - Vertical 345' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n    != '1:0:0'\n\nunion all \n\nselect \n    '11:2:3 - Sequential 678' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n    != '11:0:0'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.085493Z", "completed_at": "2025-09-10T13:54:28.089689Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.090175Z", "completed_at": "2025-09-10T13:54:28.090181Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0057528018951416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.subsection_from_display", "compiled": true, "compiled_code": "select \n    '1:2:3 - Chapter 123' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    != '1:2:0'\n\nunion all \n\nselect \n    '1:2:33 - Problem 456' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    != '1:2:0'\n\nunion all \n\nselect \n    '1:22:3 - Sequential 789' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    != '1:22:0'\n\nunion all \n\nselect \n    '11:2:3 - Vertical 123' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    != '11:2:0'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.092417Z", "completed_at": "2025-09-10T13:54:28.097179Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.097722Z", "completed_at": "2025-09-10T13:54:28.097728Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006316423416137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_course_block_names", "compiled": true, "compiled_code": "\nselect\n    location, block_name, course_key, graded, course_order, display_name_with_location\nfrom `xapi`.`dim_most_recent_course_blocks`", "relation_name": "`xapi`.`dim_course_block_names`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.099941Z", "completed_at": "2025-09-10T13:54:28.105199Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.105677Z", "completed_at": "2025-09-10T13:54:28.105682Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0067822933197021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_course_tags", "compiled": true, "compiled_code": "\n\nwith\n    parsed_tags as (\n        select\n            course_key,\n            course_name,\n            arrayJoin(JSONExtractArrayRaw(tags_str))::Int32 as tag_id\n        from `xapi`.`dim_course_names`\n    )\nselect course_key, value as tag, course_name, mrt.name as taxonomy_name, lineage, tag_id\nfrom parsed_tags\ninner join `xapi`.`dim_most_recent_tags` mrot FINAL on mrot.id = tag_id\ninner join `xapi`.`dim_most_recent_taxonomies` mrt FINAL on mrt.id = mrot.taxonomy", "relation_name": "`xapi`.`dim_most_recent_course_tags`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.107939Z", "completed_at": "2025-09-10T13:54:28.110826Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.111305Z", "completed_at": "2025-09-10T13:54:28.111310Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004479646682739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_user_pii", "compiled": true, "compiled_code": "select external_user_id, username, name, email from `xapi`.`user_pii` user_pii", "relation_name": "`xapi`.`dim_user_pii`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.113531Z", "completed_at": "2025-09-10T13:54:28.117447Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.117946Z", "completed_at": "2025-09-10T13:54:28.117951Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00550389289855957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.enrollment_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    object_id,\n    course_key,\n    org,\n    verb_id,\n    toLowCardinality(\n        JSON_VALUE(\n            event,\n            '$.object.definition.extensions.\"https://w3id.org/xapi/acrossx/extensions/type\"'\n        )\n    ) as enrollment_mode,\n    splitByString('/', verb_id)[-1] as enrollment_status\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'http://adlnet.gov/expapi/verbs/registered',\n        'http://id.tincanapi.com/verb/unregistered'\n    )", "relation_name": "`xapi`.`enrollment_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.120119Z", "completed_at": "2025-09-10T13:54:28.123919Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.124455Z", "completed_at": "2025-09-10T13:54:28.124460Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0053632259368896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_actors", "compiled": true, "compiled_code": "\n\nselect\n    date_trunc('day', emission_time) as emission_day,\n    uniqCombinedState(actor_id) as actors_cnt\nfrom `xapi`.`xapi_events_all_parsed`\ngroup by emission_day", "relation_name": "`xapi`.`fact_instance_actors`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.126746Z", "completed_at": "2025-09-10T13:54:28.132835Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.133350Z", "completed_at": "2025-09-10T13:54:28.133356Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007699489593505859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_courses", "compiled": true, "compiled_code": "\n\nselect\n    date_trunc('hour', emission_time) as emission_hour,\n    uniqCombinedState(course_id) as courses_cnt\nfrom `xapi`.`xapi_events_all_parsed`\ngroup by emission_hour", "relation_name": "`xapi`.`fact_instance_courses`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.135541Z", "completed_at": "2025-09-10T13:54:28.139343Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.139817Z", "completed_at": "2025-09-10T13:54:28.139823Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0053234100341796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_events", "compiled": true, "compiled_code": "\n\nselect\n    date_trunc('day', emission_time) as emission_day,\n    uniqCombinedState(event_id) as events_cnt\nfrom `xapi`.`xapi_events_all_parsed`\ngroup by emission_day", "relation_name": "`xapi`.`fact_instance_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.142012Z", "completed_at": "2025-09-10T13:54:28.146213Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.146704Z", "completed_at": "2025-09-10T13:54:28.146709Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005718708038330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.grading_events", "compiled": true, "compiled_code": "\n\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    course_key,\n    org,\n    verb_id,\n    cast(\n        JSONExtractFloat(event, 'result', 'score', 'scaled') as Float32\n    ) as scaled_score,\n    case\n        when\n            JSONExtractString(\n                event,\n                'result',\n                'extensions',\n                'http://www.tincanapi.co.uk/activitytypes/grade_classification'\n            )\n            = 'Fail'\n        then 'failed'\n        when\n            JSONExtractString(\n                event,\n                'result',\n                'extensions',\n                'http://www.tincanapi.co.uk/activitytypes/grade_classification'\n            )\n            = 'Pass'\n        then 'passed'\n        when\n            verb_id in (\n                'http://adlnet.gov/expapi/verbs/passed',\n                'http://adlnet.gov/expapi/verbs/failed'\n            )\n        then splitByString('/', verb_id)[-1]\n        else ''\n    end as approving_state\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'http://id.tincanapi.com/verb/earned',\n        'https://w3id.org/xapi/acrossx/verbs/evaluated'\n    )\n    or (\n        verb_id in (\n            'http://adlnet.gov/expapi/verbs/passed',\n            'http://adlnet.gov/expapi/verbs/failed'\n        )\n        and JSON_VALUE(event::String, '$.object.definition.type')\n        = 'http://adlnet.gov/expapi/activities/course'\n    )", "relation_name": "`xapi`.`grading_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.148920Z", "completed_at": "2025-09-10T13:54:28.153282Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.153773Z", "completed_at": "2025-09-10T13:54:28.153778Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0059206485748291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.navigation_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    splitByString('/xblock/', object_id)[-1] as block_id,\n    course_key,\n    org,\n    verb_id,\n    JSONExtractString(event, 'object', 'definition', 'type') as object_type,\n    -- clicking a link and selecting a module outline have no starting-position field\n    if(\n        object_type in (\n            'http://adlnet.gov/expapi/activities/link',\n            'http://adlnet.gov/expapi/activities/module'\n        ),\n        0,\n        JSONExtractInt(\n            event,\n            'context',\n            'extensions',\n            'http://id.tincanapi.com/extension/starting-position'\n        )\n    ) as starting_position,\n    JSONExtractString(\n        event, 'context', 'extensions', 'http://id.tincanapi.com/extension/ending-point'\n    ) as ending_point\nfrom `xapi`.`xapi_events_all_parsed`\nwhere verb_id in ('https://w3id.org/xapi/dod-isd/verbs/navigated')", "relation_name": "`xapi`.`navigation_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.156032Z", "completed_at": "2025-09-10T13:54:28.160317Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.160787Z", "completed_at": "2025-09-10T13:54:28.160793Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0057141780853271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.problem_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    object_id,\n    course_key,\n    org,\n    verb_id,\n    JSON_VALUE(event, '$.result.response') as responses,\n    cast(\n        JSONExtractFloat(event, 'result', 'score', 'scaled') as Float32\n    ) as scaled_score,\n    if(\n        verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated',\n        cast(JSON_VALUE(event, '$.result.success') as Bool),\n        false\n    ) as success,\n    toLowCardinality(\n        JSON_VALUE(event, '$.object.definition.interactionType')\n    ) as interaction_type,\n    if(\n        verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated',\n        cast(\n            JSON_VALUE(\n                event,\n                '$.object.definition.extensions.\"http://id.tincanapi.com/extension/attempt-id\"'\n            ) as Int16\n        ),\n        0\n    ) as attempts,\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n as problem_id\nfrom `xapi`.`xapi_events_all_parsed` xapi\nwhere\n    verb_id in (\n        'https://w3id.org/xapi/acrossx/verbs/evaluated',\n        'http://adlnet.gov/expapi/verbs/passed',\n        'http://adlnet.gov/expapi/verbs/asked'\n    )", "relation_name": "`xapi`.`problem_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.162997Z", "completed_at": "2025-09-10T13:54:28.167091Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.167572Z", "completed_at": "2025-09-10T13:54:28.167577Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0056531429290771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.video_playback_events", "compiled": true, "compiled_code": "\n\nwith\n    final_results as (\n        select\n            event_id,\n            emission_time,\n            actor_id,\n            object_id,\n            course_key,\n            org,\n            verb_id,\n            ceil(\n                CAST(\n                    coalesce(\n                        nullIf(\n                            JSON_VALUE(\n                                event,\n                                '$.result.extensions.\"https://w3id.org/xapi/video/extensions/time\"'\n                            ),\n                            ''\n                        ),\n                        nullIf(\n                            JSON_VALUE(\n                                event,\n                                '$.result.extensions.\"https://w3id.org/xapi/video/extensions/time-from\"'\n                            ),\n                            ''\n                        ),\n                        '0.0'\n                    ),\n                    'Decimal32(2)'\n                )\n            ) as _video_position,\n            JSONExtractInt(\n                event,\n                'context',\n                'extensions',\n                'https://w3id.org/xapi/video/extensions/length'\n            ) as video_duration\n        from `xapi`.`xapi_events_all_parsed`\n        where\n            (\n                verb_id in (\n                    'http://adlnet.gov/expapi/verbs/completed',\n                    'http://adlnet.gov/expapi/verbs/initialized',\n                    'http://adlnet.gov/expapi/verbs/terminated',\n                    'https://w3id.org/xapi/video/verbs/paused',\n                    'https://w3id.org/xapi/video/verbs/played',\n                    'https://w3id.org/xapi/video/verbs/seeked'\n                )\n            )\n            and (object_id like '%video+block%')\n    )\nselect\n    event_id,\n    emission_time as emission_time_long,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    course_key,\n    org,\n    verb_id,\n    -- reset video position when it has been re-played from the end\n    case\n        when\n            _video_position = video_duration\n            and verb_id = 'https://w3id.org/xapi/video/verbs/played'\n        then 1\n        else _video_position\n    end as video_position,\n    video_duration\nfrom final_results", "relation_name": "`xapi`.`video_playback_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.169873Z", "completed_at": "2025-09-10T13:54:28.173687Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.174187Z", "completed_at": "2025-09-10T13:54:28.174192Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005411624908447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_course_blocks", "compiled": true, "compiled_code": "with\n    dim_course_blocks as (\n        select\n            courses.org as org,\n            courses.course_key as course_key,\n            courses.course_name as course_name,\n            courses.course_run as course_run,\n            blocks.location as block_id,\n            blocks.block_name as block_name,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', blocks.display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n            as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', blocks.display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            splitByString(' - ', blocks.display_name_with_location)[\n                1\n            ] as hierarchy_location,\n            blocks.display_name_with_location as display_name_with_location,\n            course_order,\n            graded,\n            case\n                when block_id like '%@chapter+block@%'\n                then 'section'\n                when block_id like '%@sequential+block@%'\n                then 'subsection'\n                when block_id like '%@vertical+block@%'\n                then 'unit'\n                else regexpExtract(block_id, '@([^+]+)\\+block@', 1)\n            end as block_type\n        from `xapi`.`dim_course_block_names` blocks\n        join\n            `xapi`.`dim_course_names` courses\n            on blocks.course_key = courses.course_key\n    )\nselect\n    blocks.org as org,\n    blocks.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    blocks.block_id as block_id,\n    section_blocks.block_id as section_block_id,\n    subsection_blocks.block_id as subsection_block_id,\n    blocks.block_name as block_name,\n    blocks.section_number as section_number,\n    blocks.subsection_number as subsection_number,\n    blocks.hierarchy_location as hierarchy_location,\n    blocks.display_name_with_location as display_name_with_location,\n    blocks.course_order as course_order,\n    blocks.graded as graded,\n    blocks.block_type as block_type,\n    section_blocks.display_name_with_location as section_with_name,\n    subsection_blocks.display_name_with_location as subsection_with_name\nfrom dim_course_blocks as blocks\nleft join\n    dim_course_blocks as section_blocks\n    on (\n        blocks.section_number = section_blocks.hierarchy_location\n        and blocks.org = section_blocks.org\n        and blocks.course_key = section_blocks.course_key\n        and section_blocks.block_id like '%@chapter+block@%'\n    )\nleft join\n    dim_course_blocks as subsection_blocks\n    on (\n        blocks.subsection_number = subsection_blocks.hierarchy_location\n        and blocks.org = subsection_blocks.org\n        and blocks.course_key = subsection_blocks.course_key\n        and subsection_blocks.block_id like '%@sequential+block@%'\n    )", "relation_name": "`xapi`.`dim_course_blocks`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.176791Z", "completed_at": "2025-09-10T13:54:28.180236Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.180694Z", "completed_at": "2025-09-10T13:54:28.180698Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005283355712890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_enrollment", "compiled": true, "compiled_code": "\n\nwith\n    ranked_enrollments as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            enrollment_mode,\n            enrollment_status,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`enrollment_events`\n    )\n\nselect org, course_key, actor_id, enrollment_status, enrollment_mode, emission_time\nfrom ranked_enrollments\nwhere rn = 1", "relation_name": "`xapi`.`dim_most_recent_enrollment`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.182816Z", "completed_at": "2025-09-10T13:54:28.186259Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.186739Z", "completed_at": "2025-09-10T13:54:28.186744Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004943370819091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_enrollments", "compiled": true, "compiled_code": "select\n    enrollments.emission_time as emission_time,\n    enrollments.org as org,\n    enrollments.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    enrollments.actor_id as actor_id,\n    enrollments.enrollment_mode as enrollment_mode,\n    enrollments.enrollment_status as enrollment_status,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom `xapi`.`enrollment_events` enrollments\njoin\n    `xapi`.`dim_course_names` courses on enrollments.course_key = courses.course_key\nleft outer join\n    `xapi`.`dim_user_pii` users\n    on (actor_id like 'mailto:%' and SUBSTRING(actor_id, 8) = users.email)\n    or actor_id = toString(users.external_user_id)", "relation_name": "`xapi`.`fact_enrollments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.189128Z", "completed_at": "2025-09-10T13:54:28.192572Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.193062Z", "completed_at": "2025-09-10T13:54:28.193069Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005157470703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_enrollments", "compiled": true, "compiled_code": "\n\nwith\n    enrollments as (\n        select\n            emission_time,\n            course_key,\n            enrollment_mode,\n            splitByString('/', verb_id)[-1] as enrollment_status\n        from `xapi`.`enrollment_events`\n    )\n\nselect\n    date_trunc('day', emission_time) as emission_day,\n    enrollments.course_key,\n    enrollments.enrollment_mode as enrollment_mode,\n    enrollments.enrollment_status as enrollment_status,\n    count() as course_enrollment_mode_status_cnt\nfrom enrollments\ngroup by emission_day, course_key, enrollment_mode, enrollment_status", "relation_name": "`xapi`.`fact_instance_enrollments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.195383Z", "completed_at": "2025-09-10T13:54:28.209644Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.210136Z", "completed_at": "2025-09-10T13:54:28.210142Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01587057113647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_enrollment_events_enrollment_status__registered__unregistered.6e8262fef1", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`enrollment_events`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.212473Z", "completed_at": "2025-09-10T13:54:28.216070Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.216545Z", "completed_at": "2025-09-10T13:54:28.216550Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005131959915161133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_most_recent_course_grade", "compiled": true, "compiled_code": "\n\nwith\n    ranked_grades as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            scaled_score as course_grade,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`grading_events`\n        where\n            object_id like '%/course/%'\n            and (\n                (\n                    verb_id = 'http://adlnet.gov/expapi/verbs/passed'\n                    and scaled_score <> 0\n                )\n                or (verb_id <> 'http://adlnet.gov/expapi/verbs/passed')\n            )\n    )\n\nselect org, course_key, actor_id, course_grade, emission_time\nfrom ranked_grades\nwhere rn = 1", "relation_name": "`xapi`.`dim_learner_most_recent_course_grade`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.218829Z", "completed_at": "2025-09-10T13:54:28.222426Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.222867Z", "completed_at": "2025-09-10T13:54:28.222872Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005181074142456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_most_recent_course_state", "compiled": true, "compiled_code": "\n\nwith\n    ranked_status as (\n        select\n            org,\n            course_key,\n            actor_id,\n            approving_state,\n            emission_time,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`grading_events`\n        where not empty(approving_state)\n    )\n\nselect org, course_key, actor_id, approving_state, emission_time\nfrom ranked_status\nwhere rn = 1", "relation_name": "`xapi`.`dim_learner_most_recent_course_state`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.225446Z", "completed_at": "2025-09-10T13:54:28.229158Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.229659Z", "completed_at": "2025-09-10T13:54:28.229664Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005633115768432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_last_course_visit", "compiled": true, "compiled_code": "\n\nselect org, course_key, actor_id, max(emission_time) as emission_time\nfrom `xapi`.`navigation_events`\ngroup by org, course_key, actor_id", "relation_name": "`xapi`.`dim_learner_last_course_visit`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.231874Z", "completed_at": "2025-09-10T13:54:28.235618Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.236098Z", "completed_at": "2025-09-10T13:54:28.236103Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005325794219970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_video_segments", "compiled": true, "compiled_code": "\n\nwith\n    data as (\n        select\n            event_id,\n            org,\n            course_key,\n            actor_id,\n            emission_time_long,\n            video_position,\n            object_id,\n            video_duration,\n            if(\n                verb_id = 'https://w3id.org/xapi/video/verbs/played', 'start', 'end'\n            ) as verb\n        from `xapi`.`video_playback_events`\n        where verb_id <> 'http://adlnet.gov/expapi/verbs/initialized'\n    ),\n    matches as (\n        select\n            *,\n            first_value(event_id) filter (where verb = 'start') over (\n                partition by org, course_key, actor_id, object_id\n                order by emission_time_long, verb\n                rows between 1 following and unbounded following\n            ) as matching_event_id\n        from data\n    ),\n    final_matches as (\n        select\n            *,\n            last_value(event_id) over (\n                partition by matching_event_id, object_id, actor_id\n                order by emission_time_long\n                rows between unbounded preceding and unbounded following\n            ) as end_id\n        from matches\n        order by emission_time_long\n    ),\n    ends as (select * from final_matches where verb = 'end' and event_id = end_id),\n    starts as (select * from final_matches where verb = 'start'),\n    final_results as (\n        select\n            starts.event_id as event_id,\n            starts.org as org,\n            starts.course_key as course_key,\n            starts.actor_id as actor_id,\n            starts.object_id as object_id,\n            starts.video_duration as video_duration,\n            arrayJoin(\n                range(\n                    greatest(cast(starts.video_position as int), 1),\n                    cast(ends.video_position as int) + 1,\n                    1\n                )\n            ) as watched_segment\n        from starts\n        inner join ends on starts.end_id = ends.event_id\n        where ends.video_position > starts.video_position\n    )\nselect\n    org,\n    course_key,\n    actor_id,\n    object_id,\n    video_duration,\n    watched_segment,\n    count(1) as watch_count\nfrom final_results\ngroup by org, course_key, actor_id, object_id, video_duration, watched_segment", "relation_name": "`xapi`.`fact_video_segments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.238341Z", "completed_at": "2025-09-10T13:54:28.242590Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.243078Z", "completed_at": "2025-09-10T13:54:28.243083Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005858898162841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_last_response", "compiled": true, "compiled_code": "\n\nwith\n    final_results as (\n        select\n            org,\n            course_key,\n            object_id,\n            problem_id,\n            actor_id,\n            interaction_type,\n            MAX(attempts) as _attempt,\n            argMax(success, attempts) as success,\n            argMax(emission_time, attempts) as emission_time,\n            argMax(responses, attempts) as responses,\n            argMax(scaled_score, attempts) as scaled_score\n        from `xapi`.`problem_events` events\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\n        group by org, course_key, object_id, problem_id, actor_id, interaction_type\n    )\nselect\n    org,\n    course_key,\n    object_id,\n    problem_id,\n    \n    concat(\n        '<a href=\"', object_id, '\" target=\"_blank\">', blocks.display_name_with_location, '</a>'\n    )\n as problem_link,\n    blocks.display_name_with_location as display_name_with_location,\n    blocks.graded as graded,\n    actor_id,\n    blocks.course_order as course_order,\n    interaction_type,\n    _attempt as attempts,\n    success,\n    emission_time,\n    responses,\n    scaled_score\nfrom final_results\nleft join\n    `xapi`.`dim_course_blocks` blocks\n    on (\n        final_results.course_key = blocks.course_key\n        and final_results.problem_id = blocks.block_id\n    )", "relation_name": "`xapi`.`dim_learner_last_response`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.245343Z", "completed_at": "2025-09-10T13:54:28.250477Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.250923Z", "completed_at": "2025-09-10T13:54:28.250928Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006666660308837891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_problem_responses", "compiled": true, "compiled_code": "\n\nwith\n    first_response as (\n        select\n            org,\n            course_key,\n            object_id,\n            problem_id,\n            actor_id,\n            interaction_type,\n            argMin(success, attempts) as success,\n            argMin(emission_time, attempts) as emission_time,\n            argMin(responses, attempts) as responses,\n            argMin(scaled_score, attempts) as scaled_score\n        from `xapi`.`problem_events`\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\n        group by org, course_key, object_id, problem_id, actor_id, interaction_type\n    ),\n    final_results as (\n        select\n            first_response.org as org,\n            first_response.course_key as course_key,\n            first_response.emission_time as emission_time,\n            splitByChar('@', first_response.problem_id)[3] as block_id_short,\n            replaceRegexpAll(\n                first_response.responses,\n                '<.*?hint.*?<\\/.*?hint>|</div>|<div>|\\[|\\]',\n                ''\n            ) as _response1,\n            replaceRegexpAll(_response1, '\",(\\s|)\"', ',') as _response2,\n            case\n                when first_response.responses like '[%'\n                then arrayJoin(splitByChar(',', replaceAll(_response2, '\"', '')))\n                else _response2\n            end as response,\n            first_response.success as success,\n            first_response.interaction_type as interaction_type,\n            \n    substring(\n        regexpExtract(first_response.object_id, '(@problem\\+block@[\\w\\d][^_\\/]*)(_\\d)?', 2),\n        2\n    ) as _problem_id_number,\n    ifNull(nullIf(_problem_id_number, ''), '1') as _problem_id_or_1,\n    splitByString(' - ', blocks.display_name_with_location) as _problem_with_name,\n    arrayStringConcat(\n        arrayMap(\n            x -> (leftPad(x, 2, char(917768))),\n            splitByString(':', _problem_with_name[1])\n        ),\n        ':'\n    ) as _problem_number,\n    concat(_problem_number, '_', _problem_id_or_1) as problem_number,\n    concat(problem_number, ' - ', _problem_with_name[2]) as problem_name_location\n\n        from first_response\n        left join\n            `xapi`.`dim_course_blocks` blocks\n            on (\n                first_response.course_key = blocks.course_key\n                and first_response.problem_id = blocks.block_id\n            )\n    )\nselect\n    org,\n    course_key,\n    emission_time,\n    block_id_short,\n    response,\n    success,\n    interaction_type,\n    problem_number,\n    problem_name_location,\n    count(1) as response_count\nfrom final_results\ngroup by\n    org,\n    course_key,\n    emission_time,\n    block_id_short,\n    response,\n    success,\n    interaction_type,\n    problem_number,\n    problem_name_location", "relation_name": "`xapi`.`dim_problem_responses`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.253133Z", "completed_at": "2025-09-10T13:54:28.258641Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.259200Z", "completed_at": "2025-09-10T13:54:28.259207Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007071495056152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_problem_results", "compiled": true, "compiled_code": "\n\nwith\n    first_success as (\n        select\n            org,\n            course_key,\n            object_id,\n            argMin(attempts, emission_time) as attempts,\n            success,\n            actor_id\n        from `xapi`.`problem_events`\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated' and success\n        group by org, course_key, object_id, actor_id, success\n    ),\n    events as (\n        select distinct org, course_key, object_id, problem_id\n        from `xapi`.`problem_events` events\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\n    ),\n    final_results as (\n        select\n            events.org as org,\n            events.course_key as course_key,\n            first_success.success as success,\n            first_success.attempts as attempts,\n            first_success.actor_id as actor_id,\n            splitByChar('@', events.problem_id)[3] as block_id_short,\n            \n    substring(\n        regexpExtract(events.object_id, '(@problem\\+block@[\\w\\d][^_\\/]*)(_\\d)?', 2),\n        2\n    ) as _problem_id_number,\n    ifNull(nullIf(_problem_id_number, ''), '1') as _problem_id_or_1,\n    splitByString(' - ', blocks.display_name_with_location) as _problem_with_name,\n    arrayStringConcat(\n        arrayMap(\n            x -> (leftPad(x, 2, char(917768))),\n            splitByString(':', _problem_with_name[1])\n        ),\n        ':'\n    ) as _problem_number,\n    concat(_problem_number, '_', _problem_id_or_1) as problem_number,\n    concat(problem_number, ' - ', _problem_with_name[2]) as problem_name_location\n\n        from events\n        left join\n            `xapi`.`dim_course_blocks` blocks\n            on (\n                events.course_key = blocks.course_key\n                and events.problem_id = blocks.block_id\n            )\n        left join\n            first_success\n            on (\n                first_success.org = events.org\n                and first_success.course_key = events.course_key\n                and first_success.object_id = events.object_id\n            )\n    )\nselect distinct\n    org,\n    course_key,\n    success,\n    attempts,\n    actor_id,\n    problem_number,\n    problem_name_location,\n    block_id_short\nfrom final_results", "relation_name": "`xapi`.`dim_problem_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.261508Z", "completed_at": "2025-09-10T13:54:28.266552Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.267025Z", "completed_at": "2025-09-10T13:54:28.267030Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006584882736206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_navigation_completion", "compiled": true, "compiled_code": "with\n    pages_per_subsection as (\n        select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                min(course_order) as course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@vertical+block@%'\n            group by org, course_key, section_number, subsection_number, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id,\n        section_blocks.course_order as section_course_order,\n        subsection_blocks.course_order as subsection_course_order\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)\n    )\nselect\n    navigation.org as org,\n    navigation.course_key as course_key,\n    navigation.block_id as block_id,\n    pages.subsection_course_order as course_order,\n    navigation.actor_id as actor_id,\n    pages.item_count as page_count,\n    pages.section_with_name as section_with_name,\n    pages.subsection_with_name as subsection_with_name,\n    date(navigation.emission_time) as visited_on\nfrom `xapi`.`navigation_events` navigation\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (\n        navigation.course_key = blocks.course_key\n        and navigation.block_id = blocks.block_id\n    )\njoin\n    pages_per_subsection pages\n    on (\n        pages.org = navigation.org\n        and pages.course_key = navigation.course_key\n        and pages.section_number = blocks.section_number\n        and pages.subsection_number = blocks.subsection_number\n    )", "relation_name": "`xapi`.`fact_navigation_completion`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.269319Z", "completed_at": "2025-09-10T13:54:28.277823Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.278312Z", "completed_at": "2025-09-10T13:54:28.278317Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010103702545166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_problem_engagement", "compiled": true, "compiled_code": "with\n    get_problem_data as (\n        select\n            problems.org as org,\n            problems.course_key as course_key,\n            items.subsection_course_order as course_order,\n            problems.actor_id as actor_id,\n            items.item_count as item_count,\n            problems.problem_id as problem_id,\n            items.section_block_id as section_block_id,\n            items.subsection_block_id as subsection_block_id,\n            items.section_with_name as section_with_name,\n            items.subsection_with_name as subsection_with_name\n        from `xapi`.`problem_events` problems\n        join\n            `xapi`.`dim_course_blocks` blocks\n            on (\n                problems.course_key = blocks.course_key\n                and problems.problem_id = blocks.block_id\n            )\n        join\n            (select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                min(course_order) as course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@problem+block@%'\n            group by org, course_key, section_number, subsection_number, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id,\n        section_blocks.course_order as section_course_order,\n        subsection_blocks.course_order as subsection_course_order\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)) items\n            on (\n                problems.org = items.org\n                and problems.course_key = items.course_key\n                and blocks.section_number = items.section_number\n                and blocks.subsection_number = items.subsection_number\n            )\n        where problems.verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\n    ),\n    section_subsection as (\n        select\n            org,\n            course_key,\n            course_order,\n            actor_id,\n            'section' as section_content_level,\n            'subsection' as subsection_content_level,\n            item_count,\n            count(distinct problem_id) as problems_attempted,\n            section_block_id,\n            subsection_block_id,\n            section_with_name,\n            subsection_with_name,\n        from get_problem_data\n        group by\n            org,\n            course_key,\n            course_order,\n            actor_id,\n            item_count,\n            section_block_id,\n            subsection_block_id,\n            section_with_name,\n            subsection_with_name\n    ),\n    problem_engagement as (\n        select\n            org,\n            course_key,\n            actor_id,\n            case\n                when problems_attempted = 0\n                then 'No problems attempted yet'\n                when problems_attempted = item_count\n                then 'All problems attempted'\n                else 'At least one problem attempted'\n            end as section_subsection_problem_engagement,\n            block_id,\n            section_with_name,\n            section_subsection_name,\n            content_level\n        from section_subsection ARRAY\n        join\n            arrayConcat([subsection_block_id], [section_block_id]) as block_id,\n            arrayConcat(\n                [subsection_with_name], [section_with_name]\n            ) as section_subsection_name,\n            arrayConcat(\n                [subsection_content_level], [section_content_level]\n            ) as content_level\n        group by\n            org,\n            course_key,\n            actor_id,\n            section_subsection_problem_engagement,\n            block_id,\n            section_with_name,\n            section_subsection_name,\n            content_level\n    )\nselect\n    problem_engagement.org as org,\n    problem_engagement.course_key as course_key,\n    problem_engagement.section_subsection_name as section_subsection_name,\n    problem_engagement.section_with_name as section_with_name,\n    problem_engagement.content_level as content_level,\n    problem_engagement.actor_id as actor_id,\n    problem_engagement.section_subsection_problem_engagement\n    as section_subsection_problem_engagement,\n    problem_engagement.block_id as block_id,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom problem_engagement\nleft join\n    `xapi`.`dim_user_pii` users\n    on (\n        problem_engagement.actor_id like 'mailto:%'\n        and SUBSTRING(problem_engagement.actor_id, 8) = users.email\n    )\n    or problem_engagement.actor_id = toString(users.external_user_id)\nwhere section_subsection_name <> ''", "relation_name": "`xapi`.`fact_problem_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.280914Z", "completed_at": "2025-09-10T13:54:28.285228Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.285689Z", "completed_at": "2025-09-10T13:54:28.285694Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006041765213012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_dim_most_recent_enrollment_enrollment_status__registered__unregistered.85182a49cb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`dim_most_recent_enrollment`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.287998Z", "completed_at": "2025-09-10T13:54:28.292337Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.292814Z", "completed_at": "2025-09-10T13:54:28.292819Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005908489227294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_enrollments_enrollment_status__registered__unregistered.f8d10203f4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_enrollments`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.295112Z", "completed_at": "2025-09-10T13:54:28.299511Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.300062Z", "completed_at": "2025-09-10T13:54:28.300069Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006074190139770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_instance_enrollments_enrollment_status__registered__unregistered.305ffdf696", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_instance_enrollments`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.302684Z", "completed_at": "2025-09-10T13:54:28.307332Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.307816Z", "completed_at": "2025-09-10T13:54:28.307822Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006398439407348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_student_status", "compiled": true, "compiled_code": "select\n    fes.org as org,\n    fes.course_key as course_key,\n    fes.actor_id as actor_id,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    if(empty(approving_state), 'failed', approving_state) as approving_state,\n    enrollment_mode,\n    enrollment_status,\n    course_grade,\n    case\n        when course_grade >= 0.9\n        then '90-100%'\n        when course_grade >= 0.8 and course_grade < 0.9\n        then '80-89%'\n        when course_grade >= 0.7 and course_grade < 0.8\n        then '70-79%'\n        when course_grade >= 0.6 and course_grade < 0.7\n        then '60-69%'\n        when course_grade >= 0.5 and course_grade < 0.6\n        then '50-59%'\n        when course_grade >= 0.4 and course_grade < 0.5\n        then '40-49%'\n        when course_grade >= 0.3 and course_grade < 0.4\n        then '30-39%'\n        when course_grade >= 0.2 and course_grade < 0.3\n        then '20-29%'\n        when course_grade >= 0.1 and course_grade < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as grade_bucket,\n    users.username as username,\n    users.name as name,\n    users.email as email,\n    fes.emission_time as enrolled_at\nfrom `xapi`.`dim_most_recent_enrollment` fes\nleft join\n    `xapi`.`dim_learner_most_recent_course_state` lg\n    on fes.org = lg.org\n    and fes.course_key = lg.course_key\n    and fes.actor_id = lg.actor_id\nleft join\n    `xapi`.`dim_learner_most_recent_course_grade` ls\n    on fes.org = ls.org\n    and fes.course_key = ls.course_key\n    and fes.actor_id = ls.actor_id\njoin\n    `xapi`.`dim_course_names` courses\n    on fes.org = courses.org\n    and fes.course_key = courses.course_key\nleft outer join\n    `xapi`.`dim_user_pii` users\n    on (actor_id like 'mailto:%' and SUBSTRING(actor_id, 8) = users.email)\n    or actor_id = toString(users.external_user_id)", "relation_name": "`xapi`.`dim_student_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.310429Z", "completed_at": "2025-09-10T13:54:28.315871Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.316353Z", "completed_at": "2025-09-10T13:54:28.316358Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007122993469238281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_dim_learner_most_recent_course_state_approving_state__passed__failed.b6c7cf1dfb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        approving_state as value_field,\n        count(*) as n_records\n\n    from `xapi`.`dim_learner_most_recent_course_state`\n    group by approving_state\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'passed','failed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.318536Z", "completed_at": "2025-09-10T13:54:28.323365Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.323838Z", "completed_at": "2025-09-10T13:54:28.323844Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006303310394287109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_video_engagement", "compiled": true, "compiled_code": "\n\nwith\n    fact_video_segments as (\n        select\n            segments.org as org,\n            segments.course_key as course_key,\n            blocks.section_number as section_number,\n            blocks.subsection_number as subsection_number,\n            segments.actor_id as actor_id,\n            count(distinct blocks.block_id) as videos_viewed\n        from `xapi`.`fact_video_segments` segments\n        join\n            `xapi`.`dim_course_blocks` blocks\n            on (\n                segments.course_key = blocks.course_key\n                and splitByString('/xblock/', segments.object_id)[-1] = blocks.block_id\n            )\n        group by org, course_key, section_number, subsection_number, actor_id\n    ),\n    fact_videos_per_subsection as (\n        select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                min(course_order) as course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@video+block@%'\n            group by org, course_key, section_number, subsection_number, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id,\n        section_blocks.course_order as section_course_order,\n        subsection_blocks.course_order as subsection_course_order\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)\n    ),\n    fact_video_section_subsection as (\n        select\n            videos.org as org,\n            videos.course_key as course_key,\n            videos.subsection_course_order as course_order,\n            plays.actor_id as actor_id,\n            'section' as section_content_level,\n            'subsection' as subsection_content_level,\n            videos.item_count as item_count,\n            sum(plays.videos_viewed) as videos_viewed,\n            videos.section_block_id as section_block_id,\n            videos.subsection_block_id as subsection_block_id,\n            videos.section_with_name as section_with_name,\n            videos.subsection_with_name as subsection_with_name\n        from fact_video_segments plays\n        full join\n            fact_videos_per_subsection videos\n            on (\n                videos.org = plays.org\n                and videos.course_key = plays.course_key\n                and videos.section_number = plays.section_number\n                and videos.subsection_number = plays.subsection_number\n            )\n        group by\n            org,\n            course_key,\n            course_order,\n            actor_id,\n            item_count,\n            section_block_id,\n            subsection_block_id,\n            section_with_name,\n            subsection_with_name\n    ),\n    video_engagment as (\n        select\n            org,\n            course_key,\n            actor_id,\n            sum(videos_viewed) as videos_viewed,\n            sum(item_count) as item_count,\n            case\n                when videos_viewed = 0\n                then 'No videos viewed yet'\n                when videos_viewed = item_count\n                then 'All videos viewed'\n                else 'At least one video viewed'\n            end as section_subsection_video_engagement,\n            block_id,\n            section_subsection_name,\n            content_level\n        from fact_video_section_subsection ARRAY\n        join\n            arrayConcat([subsection_block_id], [section_block_id]) as block_id,\n            arrayConcat(\n                [subsection_with_name], [section_with_name]\n            ) as section_subsection_name,\n            arrayConcat(\n                [subsection_content_level], [section_content_level]\n            ) as content_level\n        group by\n            org, course_key, actor_id, block_id, section_subsection_name, content_level\n    ),\n    final_results as (\n        select\n            video_engagment.org as org,\n            video_engagment.course_key as course_key,\n            video_engagment.section_subsection_name as section_subsection_name,\n            video_engagment.content_level as content_level,\n            video_engagment.actor_id as actor_id,\n            video_engagment.section_subsection_video_engagement\n            as section_subsection_video_engagement,\n            video_engagment.block_id as block_id,\n            users.username as username,\n            users.name as name,\n            users.email as email\n        from video_engagment\n        left outer join\n            `xapi`.`dim_user_pii` users\n            on (\n                video_engagment.actor_id like 'mailto:%'\n                and SUBSTRING(video_engagment.actor_id, 8) = users.email\n            )\n            or video_engagment.actor_id = toString(users.external_user_id)\n        where section_subsection_name <> ''\n    )\nselect *\nfrom final_results", "relation_name": "`xapi`.`fact_video_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.326282Z", "completed_at": "2025-09-10T13:54:28.330934Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.331442Z", "completed_at": "2025-09-10T13:54:28.331448Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006356954574584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_subsection_problem_results", "compiled": true, "compiled_code": "\n\nwith\n    final_results as (\n        select\n            last_response.org as org,\n            last_response.course_key as course_key,\n            last_response.actor_id as actor_id,\n            splitByChar('@', subsection_blocks.block_id)[3] as block_id_short,\n            last_response.problem_id as problem_id,\n            last_response.success as success,\n            last_response.scaled_score as scaled_score,\n            splitByString(\n                ' - ', subsection_blocks.display_name_with_location\n            ) as _subsection_with_name,\n            arrayStringConcat(\n                arrayMap(\n                    x -> (leftPad(x, 2, char(917768))),\n                    splitByString(':', _subsection_with_name[1])\n                ),\n                ':'\n            ) as subsection_number,\n            concat(\n                subsection_number, ' - ', _subsection_with_name[2]\n            ) as subsection_with_name,\n            \n    substring(\n        regexpExtract(last_response.object_id, '(@problem\\+block@[\\w\\d][^_\\/]*)(_\\d)?', 2),\n        2\n    ) as _problem_id_number,\n    ifNull(nullIf(_problem_id_number, ''), '1') as _problem_id_or_1,\n    splitByString(' - ', last_response.display_name_with_location) as _problem_with_name,\n    arrayStringConcat(\n        arrayMap(\n            x -> (leftPad(x, 2, char(917768))),\n            splitByString(':', _problem_with_name[1])\n        ),\n        ':'\n    ) as _problem_number,\n    concat(_problem_number, '_', _problem_id_or_1) as problem_number,\n    concat(problem_number, ' - ', _problem_with_name[2]) as problem_name_location\n\n        from `xapi`.`dim_learner_last_response` last_response\n        join\n            `xapi`.`dim_course_blocks` problem_blocks\n            on problem_blocks.block_id = last_response.problem_id\n            and last_response.course_key = problem_blocks.course_key\n        left join\n            `xapi`.`dim_course_blocks` subsection_blocks\n            on problem_blocks.subsection_number = subsection_blocks.hierarchy_location\n            and last_response.org = subsection_blocks.org\n            and last_response.course_key = subsection_blocks.course_key\n            and (\n                subsection_blocks.block_id like '%@sequential+block@%'\n                or subsection_blocks.block_id like '%@chapter+block@%'\n            )\n        where last_response.graded\n    )\nselect\n    org,\n    course_key,\n    block_id_short,\n    problem_number,\n    problem_name_location,\n    actor_id,\n    success,\n    subsection_number,\n    subsection_with_name,\n    scaled_score\nfrom final_results", "relation_name": "`xapi`.`dim_subsection_problem_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.333686Z", "completed_at": "2025-09-10T13:54:28.337506Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.337989Z", "completed_at": "2025-09-10T13:54:28.337994Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005365848541259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_pageview_engagement", "compiled": true, "compiled_code": "with\n    pageview_section_subsection as (\n        select\n            org,\n            course_key,\n            course_order,\n            actor_id,\n            'section' as section_content_level,\n            'subsection' as subsection_content_level,\n            page_count,\n            count(block_id) as pages_visited,\n            section_with_name,\n            subsection_with_name\n        from `xapi`.`fact_navigation_completion`\n        group by\n            org,\n            course_key,\n            course_order,\n            actor_id,\n            page_count,\n            section_with_name,\n            subsection_with_name\n    ),\n    pageview_engagement as (\n        select\n            org,\n            course_key,\n            course_order,\n            actor_id,\n            case\n                when pages_visited = 0\n                then 'No pages viewed yet'\n                when pages_visited = page_count\n                then 'All pages viewed'\n                else 'At least one page viewed'\n            end as section_subsection_page_engagement,\n            section_with_name,\n            section_subsection_name,\n            content_level\n        from pageview_section_subsection ARRAY\n        join\n            arrayConcat(\n                [subsection_with_name], [section_with_name]\n            ) as section_subsection_name,\n            arrayConcat(\n                [subsection_content_level], [section_content_level]\n            ) as content_level\n        group by\n            org,\n            course_key,\n            course_order,\n            actor_id,\n            section_subsection_page_engagement,\n            section_subsection_name,\n            section_with_name,\n            content_level\n    ),\n    final_results as (\n        select\n            pageview_engagement.org as org,\n            pageview_engagement.course_key as course_key,\n            pageview_engagement.section_subsection_name as section_subsection_name,\n            pageview_engagement.content_level as content_level,\n            pageview_engagement.actor_id as actor_id,\n            pageview_engagement.section_subsection_page_engagement\n            as section_subsection_page_engagement,\n            pageview_engagement.section_with_name as section_with_name,\n            pageview_engagement.course_order as course_order,\n            users.username as username,\n            users.name as name,\n            users.email as email\n        from pageview_engagement\n        left outer join\n            `xapi`.`dim_user_pii` users\n            on (\n                pageview_engagement.actor_id like 'mailto:%'\n                and SUBSTRING(pageview_engagement.actor_id, 8) = users.email\n            )\n            or pageview_engagement.actor_id = toString(users.external_user_id)\n        where section_subsection_name <> ''\n    )\nselect *\nfrom final_results", "relation_name": "`xapi`.`fact_pageview_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.340542Z", "completed_at": "2025-09-10T13:54:28.349514Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.350072Z", "completed_at": "2025-09-10T13:54:28.350079Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010841608047485352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_problem_engagement_content_level__section__subsection.59d1daa321", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        content_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_problem_engagement`\n    group by content_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'section','subsection'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.352415Z", "completed_at": "2025-09-10T13:54:28.356970Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.357459Z", "completed_at": "2025-09-10T13:54:28.357465Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0061643123626708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_dim_student_status_enrollment_status__registered__unregistered.e175e06448", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`dim_student_status`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.360112Z", "completed_at": "2025-09-10T13:54:28.364845Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.365340Z", "completed_at": "2025-09-10T13:54:28.365346Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0067539215087890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_video_engagement_content_level__section__subsection.636c5e7005", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        content_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_video_engagement`\n    group by content_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'section','subsection'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.367600Z", "completed_at": "2025-09-10T13:54:28.373609Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.374093Z", "completed_at": "2025-09-10T13:54:28.374100Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007542610168457031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_video_engagement_section_subsection_video_engagement__No_videos_viewed_yet__At_least_one_video_viewed__All_videos_viewed.91f6ccbf80", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        section_subsection_video_engagement as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_video_engagement`\n    group by section_subsection_video_engagement\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'No videos viewed yet','At least one video viewed','All videos viewed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-10T13:54:28.376406Z", "completed_at": "2025-09-10T13:54:28.381090Z"}, {"name": "execute", "started_at": "2025-09-10T13:54:28.381555Z", "completed_at": "2025-09-10T13:54:28.381561Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0061838626861572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_pageview_engagement_content_level__section__subsection.dd9e9af3ed", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        content_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_pageview_engagement`\n    group by content_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'section','subsection'\n)\n\n\n", "relation_name": null}], "elapsed_time": 0.575371265411377, "args": {"empty_catalog": false, "log_level_file": "debug", "compile": true, "defer": false, "require_resource_names_without_spaces": false, "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "vars": {}, "project_dir": "/home/runner/work/aspects-dbt/aspects-dbt", "favor_state": false, "write_json": true, "macro_debugging": false, "enable_legacy_logger": false, "profiles_dir": "./.github/", "introspect": true, "printer_width": 80, "select": [], "which": "generate", "static_parser": true, "require_explicit_package_overrides_for_builtin_materializations": true, "log_path": "/home/runner/work/aspects-dbt/aspects-dbt/logs", "log_format": "default", "version_check": true, "use_colors_file": true, "populate_cache": true, "print": true, "quiet": false, "strict_mode": false, "exclude": [], "source_freshness_run_project_hooks": false, "partial_parse": true, "log_format_file": "debug", "log_file_max_bytes": 10485760, "show_resource_report": false, "invocation_command": "dbt docs generate", "static": false, "partial_parse_file_diff": true, "cache_selected_only": false, "use_colors": true, "send_anonymous_usage_stats": true, "log_level": "info"}}