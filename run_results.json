{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-05-06T14:23:59.712158Z", "invocation_id": "d6fe0680-30bb-4aea-a91c-021a67cc2964", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.259583Z", "completed_at": "2025-05-06T14:23:59.269265Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.269781Z", "completed_at": "2025-05-06T14:23:59.269793Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011286258697509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_course_names", "compiled": true, "compiled_code": "\n\nwith\n    latest as (\n        select org, course_key, max(modified) as last_modified\n        from `event_sink`.`course_overviews`\n        group by org, course_key\n    )\nselect\n    course_key,\n    display_name as course_name,\n    splitByString('+', course_key)[-1] as course_run,\n    org,\n    JSONExtract(course_data_json, 'tags', 'String') as tags_str\nfrom `event_sink`.`course_overviews` co\ninner join\n    latest mr\n    on mr.org = co.org\n    and mr.course_key = co.course_key\n    and co.modified = mr.last_modified", "relation_name": "`xapi`.`dim_course_names`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.272109Z", "completed_at": "2025-05-06T14:23:59.277811Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.278323Z", "completed_at": "2025-05-06T14:23:59.278332Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007334470748901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_course_blocks", "compiled": true, "compiled_code": "\n\nselect\n    location,\n    display_name as block_name,\n    toString(section)\n    || ':'\n    || toString(subsection)\n    || ':'\n    || toString(unit)\n    || ' - '\n    || display_name as display_name_with_location,\n    JSONExtractInt(xblock_data_json, 'section') as section,\n    JSONExtractInt(xblock_data_json, 'subsection') as subsection,\n    JSONExtractInt(xblock_data_json, 'unit') as unit,\n    JSONExtractBool(xblock_data_json, 'graded') as graded,\n    order as course_order,\n    course_key,\n    dump_id,\n    time_last_dumped\nfrom `event_sink`.`course_blocks` course_blocks\njoin\n    (\n        select location, max(time_last_dumped) as max_time_last_dumped\n        from `event_sink`.`course_blocks`\n        group by location\n    ) latest_course_blocks\n    on course_blocks.location = latest_course_blocks.location\n    and course_blocks.time_last_dumped = latest_course_blocks.max_time_last_dumped", "relation_name": "`xapi`.`dim_most_recent_course_blocks`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.280748Z", "completed_at": "2025-05-06T14:23:59.284550Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.285016Z", "completed_at": "2025-05-06T14:23:59.285023Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005426168441772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_object_tags", "compiled": true, "compiled_code": "\nwith\n    latest as (\n        select id, max(time_last_dumped) as last_modified\n        from `event_sink`.`object_tag`\n        group by id\n    )\nselect id, object_id, taxonomy, _value, _export_id, lineage\nfrom `event_sink`.`object_tag` ot\ninner join latest mrot on mrot.id = ot.id and ot.time_last_dumped = mrot.last_modified", "relation_name": "`xapi`.`dim_most_recent_object_tags`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.287262Z", "completed_at": "2025-05-06T14:23:59.290954Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.291432Z", "completed_at": "2025-05-06T14:23:59.291439Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0051839351654052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_tags", "compiled": true, "compiled_code": "\nwith\n    latest as (\n        select id, max(time_last_dumped) as last_modified\n        from `event_sink`.`tag`\n        group by id\n    )\nselect id, taxonomy, parent, value, external_id, lineage\nfrom `event_sink`.`tag` ot\ninner join latest mrot on mrot.id = ot.id and ot.time_last_dumped = mrot.last_modified", "relation_name": "`xapi`.`dim_most_recent_tags`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.293623Z", "completed_at": "2025-05-06T14:23:59.297418Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.297881Z", "completed_at": "2025-05-06T14:23:59.297887Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0053310394287109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_taxonomies", "compiled": true, "compiled_code": "\nwith\n    latest as (\n        select id, max(time_last_dumped) as last_modified\n        from `event_sink`.`taxonomy`\n        group by id\n    )\nselect id, name\nfrom `event_sink`.`taxonomy` ot\ninner join latest mrot on mrot.id = ot.id and ot.time_last_dumped = mrot.last_modified", "relation_name": "`xapi`.`dim_most_recent_taxonomies`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.300169Z", "completed_at": "2025-05-06T14:23:59.305134Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.305611Z", "completed_at": "2025-05-06T14:23:59.305617Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006461143493652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.user_pii", "compiled": true, "compiled_code": "\n\nwith\n    most_recent_user_profile as (\n        select user_id, max(time_last_dumped) as time_last_dumped\n        from `event_sink`.`user_profile`\n        group by user_id\n    )\nselect\n    ex.user_id as user_id,\n    if(\n        empty(ex.external_user_id),\n        concat('mailto:', email),\n        ex.external_user_id::String\n    ) as external_user_id,\n    up.username as username,\n    up.name as name,\n    up.email as email\nfrom most_recent_user_profile mrup\nleft outer join\n    `event_sink`.`external_id` ex on mrup.user_id = ex.user_id\nleft outer join\n    `event_sink`.`user_profile` up\n    on up.user_id = mrup.user_id\n    and up.time_last_dumped = mrup.time_last_dumped", "relation_name": "`xapi`.`user_pii`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.307858Z", "completed_at": "2025-05-06T14:23:59.311708Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.312172Z", "completed_at": "2025-05-06T14:23:59.312195Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005354642868041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.xapi_events_all_parsed", "compiled": true, "compiled_code": "\n\nselect\n    event_id as event_id,\n    toLowCardinality(JSON_VALUE(event::String, '$.verb.id')) as verb_id,\n    COALESCE(\n        NULLIF(JSON_VALUE(event::String, '$.actor.account.name'), ''),\n        NULLIF(JSON_VALUE(event::String, '$.actor.mbox'), ''),\n        JSON_VALUE(event::String, '$.actor.mbox_sha1sum')\n    ) as actor_id,\n    JSON_VALUE(event::String, '$.object.id') as object_id,\n    -- If the contextActivities parent is a course, use that. It can be a \"course\"\n    -- type, or a \"cmi.interaction\" type for multiple question problem submissions.\n    -- Otherwise use the object id for the course id.\n    toLowCardinality(\n        multiIf(\n            -- If the contextActivities parent is a course, use that\n            JSON_VALUE(\n                event::String, '$.context.contextActivities.parent[0].definition.type'\n            )\n            = 'http://adlnet.gov/expapi/activities/course',\n            JSON_VALUE(event::String, '$.context.contextActivities.parent[0].id'),\n            -- Else if the contextActivities parent is a GroupActivity, it's a multi\n            -- question problem and we use the grouping id\n            JSON_VALUE(\n                event::String, '$.context.contextActivities.parent[0].objectType'\n            )\n            in ('Activity', 'GroupActivity'),\n            JSON_VALUE(event::String, '$.context.contextActivities.grouping[0].id'),\n            -- Otherwise use the object id\n            JSON_VALUE(event::String, '$.object.id')\n        )\n    ) as course_id,\n    toLowCardinality(splitByString('/', course_id)[-1]) as course_key,\n    toLowCardinality(\n        coalesce(\n            get_org_from_course_url(course_id),\n            get_org_from_ccx_course_url(course_id),\n            ''\n        )\n    ) as org,\n    emission_time as emission_time,\n    event::String as event\nfrom `xapi`.`xapi_events_all`", "relation_name": "`xapi`.`xapi_events_all_parsed`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.314627Z", "completed_at": "2025-05-06T14:23:59.318319Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.318825Z", "completed_at": "2025-05-06T14:23:59.318831Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005258083343505859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.a_tag", "compiled": true, "compiled_code": "select\n    'http://local.edly.io/xblock/block-v1:OpenedX+DemoX+DemoCourse+type@video+block@d5a54ce52f464acfa7a83ae155712cc3' as object_id,\n    'The Purpose, Power and Reach of the Open edX\u00ae Platform' as video_name,\n    \n    concat(\n        '<a href=\"', object_id, '\" target=\"_blank\">', video_name, '</a>'\n    )\n as object_a_tag\nfrom\n    system.numbers\nwhere object_a_tag != '<a href=\"http://local.edly.io/xblock/block-v1:OpenedX+DemoX+DemoCourse+type@video+block@d5a54ce52f464acfa7a83ae155712cc3\" target=\"_blank\">The Purpose, Power and Reach of the Open edX\u00ae Platform</a>'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.320999Z", "completed_at": "2025-05-06T14:23:59.327527Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.328009Z", "completed_at": "2025-05-06T14:23:59.328014Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008061885833740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_bucket", "compiled": true, "compiled_code": "select 0.95 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '90-100%'\n\nunion all \n\nselect 0.8 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '80-89%'\n\nunion all \n\nselect 0.700009 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '70-79%'\n\nunion all \n\nselect 0.69999 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '60-69%'\n\nunion all \n\nselect 0.5 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '50-59%'\n\nunion all \n\nselect 0.4123 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '40-49%'\n\nunion all \n\nselect 0.3000000000 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '30-39%'\n\nunion all \n\nselect 0.276734 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '20-29%'\n\nunion all \n\nselect 0.11111 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '10-19%'\n\nunion all \n\nselect 0.0342 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '0-9%'\n\nunion all \n\nselect 0.00000005 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '0-9%'\n\nunion all \n\nselect -0.1 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '0-9%'\n\nunion all \n\nselect 123 as field\nfrom system.one\nwhere \n    case\n        when field >= 0.9\n        then '90-100%'\n        when field >= 0.8 and field < 0.9\n        then '80-89%'\n        when field >= 0.7 and field < 0.8\n        then '70-79%'\n        when field >= 0.6 and field < 0.7\n        then '60-69%'\n        when field >= 0.5 and field < 0.6\n        then '50-59%'\n        when field >= 0.4 and field < 0.5\n        then '40-49%'\n        when field >= 0.3 and field < 0.4\n        then '30-39%'\n        when field >= 0.2 and field < 0.3\n        then '20-29%'\n        when field >= 0.1 and field < 0.2\n        then '10-19%'\n        else '0-9%'\n    end != '90-100%'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.330290Z", "completed_at": "2025-05-06T14:23:59.334440Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.334917Z", "completed_at": "2025-05-06T14:23:59.334922Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005674839019775391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_problem_id", "compiled": true, "compiled_code": "select\n    'http://local.edly.io:8000/xblock/block-v1:edunext+demo+demo+ccx+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:edunext+demo+demo+ccx+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n\nunion all\n\nselect\n    'http://localhost:18000/course/course-v1:Org1+DemoX+1937e7'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != ''\n\nunion all\n\nselect\n    'http://localhost:18000/xblock/block-v1:course-v1:Org0+DemoX+2bc51b+type@problem+block@09b07a8d'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:course-v1:Org0+DemoX+2bc51b+type@problem+block@09b07a8d'\n\nunion all\n\nselect\n    'http://localhost:18000/xblock/block-v1:course-v1:Org0+DemoX+2bc51b+type@problem+block@09b07a8d/answer'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:course-v1:Org0+DemoX+2bc51b+type@problem+block@09b07a8d'\n\nunion all\n\nselect\n    'http://localhost:18000/xblock/block-v1:course-v1:Org0+DemoX+81bba1+type@problem+block@20d3f709/hint/1'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:course-v1:Org0+DemoX+81bba1+type@problem+block@20d3f709'\n\nunion all\n\nselect\n    'http://localhost:18000/xblock/block-v1:course-v1:Org0+DemoX+81bba1+type@problem+block@20d3f709/hint/1'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'block-v1:course-v1:Org0+DemoX+81bba1+type@problem+block@20d3f709'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.337116Z", "completed_at": "2025-05-06T14:23:59.340861Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.341336Z", "completed_at": "2025-05-06T14:23:59.341341Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005255460739135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.get_problem_id_with_ccx", "compiled": true, "compiled_code": "select\n    'http://local.edly.io:8000/xblock/ccx-block-v1:edunext+demo+demo+ccx@1+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'\n    as object_id\nfrom system.one\nwhere\n    \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n\n    != 'ccx-block-v1:edunext+demo+demo+ccx@1+type@problem+block@3c1646f7133a4c5fb4557d649e22c251'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.343453Z", "completed_at": "2025-05-06T14:23:59.347146Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.347654Z", "completed_at": "2025-05-06T14:23:59.347658Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005217790603637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.section_from_display", "compiled": true, "compiled_code": "select \n    '1:2:3 - Course 1a2b3c' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n    != '1:0:0'\n\nunion all \n\nselect \n    '1:2:33 - Video 12' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n    != '1:0:0'\n\nunion all \n\nselect \n    '1:22:3 - Vertical 345' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n    != '1:0:0'\n\nunion all \n\nselect \n    '11:2:3 - Sequential 678' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        splitByString(\n            ':', splitByString(' - ', display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n    != '11:0:0'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.349824Z", "completed_at": "2025-05-06T14:23:59.353563Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.354042Z", "completed_at": "2025-05-06T14:23:59.354047Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005225181579589844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.subsection_from_display", "compiled": true, "compiled_code": "select \n    '1:2:3 - Chapter 123' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    != '1:2:0'\n\nunion all \n\nselect \n    '1:2:33 - Problem 456' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    != '1:2:0'\n\nunion all \n\nselect \n    '1:22:3 - Sequential 789' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    != '1:22:0'\n\nunion all \n\nselect \n    '11:2:3 - Vertical 123' as display_name_with_location\nfrom system.one\nwhere \n    \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n    != '11:2:0'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.356257Z", "completed_at": "2025-05-06T14:23:59.360450Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.360910Z", "completed_at": "2025-05-06T14:23:59.360915Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005664825439453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_course_block_names", "compiled": true, "compiled_code": "\nselect\n    location, block_name, course_key, graded, course_order, display_name_with_location\nfrom `xapi`.`dim_most_recent_course_blocks`", "relation_name": "`xapi`.`dim_course_block_names`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.363153Z", "completed_at": "2025-05-06T14:23:59.367689Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.368145Z", "completed_at": "2025-05-06T14:23:59.368150Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0059888362884521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_course_tags", "compiled": true, "compiled_code": "\n\nwith\n    parsed_tags as (\n        select\n            course_key,\n            course_name,\n            arrayJoin(JSONExtractArrayRaw(tags_str))::Int32 as tag_id\n        from `xapi`.`dim_course_names`\n    )\nselect course_key, course_name, tag_id, value as tag, lineage, mrt.name as taxonomy_name\nfrom parsed_tags\ninner join `xapi`.`dim_most_recent_tags` mrot FINAL on mrot.id = tag_id\ninner join `xapi`.`dim_most_recent_taxonomies` mrt FINAL on mrt.id = mrot.taxonomy", "relation_name": "`xapi`.`dim_most_recent_course_tags`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.370317Z", "completed_at": "2025-05-06T14:23:59.373327Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.373783Z", "completed_at": "2025-05-06T14:23:59.373788Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0044918060302734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_user_pii", "compiled": true, "compiled_code": "select external_user_id, username, name, email from `xapi`.`user_pii` user_pii", "relation_name": "`xapi`.`dim_user_pii`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.375975Z", "completed_at": "2025-05-06T14:23:59.379776Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.380260Z", "completed_at": "2025-05-06T14:23:59.380265Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0052738189697265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.enrollment_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    object_id,\n    course_key,\n    org,\n    verb_id,\n    toLowCardinality(\n        JSON_VALUE(\n            event,\n            '$.object.definition.extensions.\"https://w3id.org/xapi/acrossx/extensions/type\"'\n        )\n    ) as enrollment_mode,\n    splitByString('/', verb_id)[-1] as enrollment_status\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'http://adlnet.gov/expapi/verbs/registered',\n        'http://id.tincanapi.com/verb/unregistered'\n    )", "relation_name": "`xapi`.`enrollment_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.382588Z", "completed_at": "2025-05-06T14:23:59.386130Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.386604Z", "completed_at": "2025-05-06T14:23:59.386609Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005061626434326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_actors", "compiled": true, "compiled_code": "\n\nselect\n    date_trunc('day', emission_time) as emission_day,\n    uniqCombinedState(actor_id) as actors_cnt\nfrom `xapi`.`xapi_events_all_parsed`\ngroup by emission_day", "relation_name": "`xapi`.`fact_instance_actors`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.388776Z", "completed_at": "2025-05-06T14:23:59.392358Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.392838Z", "completed_at": "2025-05-06T14:23:59.392844Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005056858062744141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_courses", "compiled": true, "compiled_code": "\n\nselect\n    date_trunc('hour', emission_time) as emission_hour,\n    uniqCombinedState(course_id) as courses_cnt\nfrom `xapi`.`xapi_events_all_parsed`\ngroup by emission_hour", "relation_name": "`xapi`.`fact_instance_courses`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.394986Z", "completed_at": "2025-05-06T14:23:59.398658Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.399122Z", "completed_at": "2025-05-06T14:23:59.399127Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005177736282348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_events", "compiled": true, "compiled_code": "\n\nselect\n    date_trunc('day', emission_time) as emission_day,\n    uniqCombinedState(event_id) as events_cnt\nfrom `xapi`.`xapi_events_all_parsed`\ngroup by emission_day", "relation_name": "`xapi`.`fact_instance_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.401323Z", "completed_at": "2025-05-06T14:23:59.407504Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.407964Z", "completed_at": "2025-05-06T14:23:59.407970Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007657051086425781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.grading_events", "compiled": true, "compiled_code": "\n\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    course_key,\n    org,\n    verb_id,\n    JSONExtractFloat(event, 'result', 'score', 'scaled') as scaled_score,\n    case\n        when\n            JSONExtractString(\n                event,\n                'result',\n                'extensions',\n                'http://www.tincanapi.co.uk/activitytypes/grade_classification'\n            )\n            = 'Fail'\n        then 'failed'\n        when\n            JSONExtractString(\n                event,\n                'result',\n                'extensions',\n                'http://www.tincanapi.co.uk/activitytypes/grade_classification'\n            )\n            = 'Pass'\n        then 'passed'\n        when\n            verb_id in (\n                'http://adlnet.gov/expapi/verbs/passed',\n                'http://adlnet.gov/expapi/verbs/failed'\n            )\n        then splitByString('/', verb_id)[-1]\n        else ''\n    end as approving_state\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    verb_id in (\n        'http://id.tincanapi.com/verb/earned',\n        'https://w3id.org/xapi/acrossx/verbs/evaluated'\n    )\n    or (\n        verb_id in (\n            'http://adlnet.gov/expapi/verbs/passed',\n            'http://adlnet.gov/expapi/verbs/failed'\n        )\n        and JSON_VALUE(event::String, '$.object.definition.type')\n        = 'http://adlnet.gov/expapi/activities/course'\n    )", "relation_name": "`xapi`.`grading_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.410319Z", "completed_at": "2025-05-06T14:23:59.414284Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.414755Z", "completed_at": "2025-05-06T14:23:59.414759Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005486488342285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.navigation_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    cast(emission_time as DateTime) as emission_time,\n    actor_id,\n    splitByString('/xblock/', object_id)[-1] as block_id,\n    course_key,\n    org,\n    verb_id,\n    JSONExtractString(event, 'object', 'definition', 'type') as object_type,\n    -- clicking a link and selecting a module outline have no starting-position field\n    if(\n        object_type in (\n            'http://adlnet.gov/expapi/activities/link',\n            'http://adlnet.gov/expapi/activities/module'\n        ),\n        0,\n        JSONExtractInt(\n            event,\n            'context',\n            'extensions',\n            'http://id.tincanapi.com/extension/starting-position'\n        )\n    ) as starting_position,\n    JSONExtractString(\n        event, 'context', 'extensions', 'http://id.tincanapi.com/extension/ending-point'\n    ) as ending_point\nfrom `xapi`.`xapi_events_all_parsed`\nwhere verb_id in ('https://w3id.org/xapi/dod-isd/verbs/navigated')", "relation_name": "`xapi`.`navigation_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.417007Z", "completed_at": "2025-05-06T14:23:59.420883Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.421368Z", "completed_at": "2025-05-06T14:23:59.421373Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005499839782714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.video_playback_events", "compiled": true, "compiled_code": "\n\nselect\n    event_id,\n    CAST(emission_time, 'DateTime') as emission_time,\n    actor_id,\n    object_id,\n    course_key,\n    org,\n    verb_id,\n    ceil(\n        CAST(\n            coalesce(\n                nullIf(\n                    JSON_VALUE(\n                        event,\n                        '$.result.extensions.\"https://w3id.org/xapi/video/extensions/time\"'\n                    ),\n                    ''\n                ),\n                nullIf(\n                    JSON_VALUE(\n                        event,\n                        '$.result.extensions.\"https://w3id.org/xapi/video/extensions/time-from\"'\n                    ),\n                    ''\n                ),\n                '0.0'\n            ),\n            'Decimal32(2)'\n        )\n    ) as video_position,\n    JSONExtractInt(\n        event, 'context', 'extensions', 'https://w3id.org/xapi/video/extensions/length'\n    ) as video_duration\nfrom `xapi`.`xapi_events_all_parsed`\nwhere\n    (\n        verb_id in (\n            'http://adlnet.gov/expapi/verbs/completed',\n            'http://adlnet.gov/expapi/verbs/initialized',\n            'http://adlnet.gov/expapi/verbs/terminated',\n            'https://w3id.org/xapi/video/verbs/paused',\n            'https://w3id.org/xapi/video/verbs/played',\n            'https://w3id.org/xapi/video/verbs/seeked'\n        )\n    )\n    and (object_id like '%video+block%')", "relation_name": "`xapi`.`video_playback_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.423539Z", "completed_at": "2025-05-06T14:23:59.427551Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.428013Z", "completed_at": "2025-05-06T14:23:59.428018Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0054895877838134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_course_blocks", "compiled": true, "compiled_code": "\n\nwith\n    dim_course_blocks as (\n        select\n            courses.org as org,\n            courses.course_key as course_key,\n            courses.course_name as course_name,\n            courses.course_run as course_run,\n            blocks.location as block_id,\n            blocks.block_name as block_name,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', blocks.display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n            as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', blocks.display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            splitByString(' - ', blocks.display_name_with_location)[\n                1\n            ] as hierarchy_location,\n            blocks.display_name_with_location as display_name_with_location,\n            course_order,\n            graded,\n            case\n                when block_id like '%@chapter+block@%'\n                then 'section'\n                when block_id like '%@sequential+block@%'\n                then 'subsection'\n                when block_id like '%@vertical+block@%'\n                then 'unit'\n                else regexpExtract(block_id, '@([^+]+)\\+block@', 1)\n            end as block_type\n        from `xapi`.`dim_course_block_names` blocks\n        join\n            `xapi`.`dim_course_names` courses\n            on blocks.course_key = courses.course_key\n    )\nselect\n    blocks.org as org,\n    blocks.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    blocks.block_id as block_id,\n    blocks.block_name as block_name,\n    blocks.section_number as section_number,\n    blocks.subsection_number as subsection_number,\n    blocks.hierarchy_location as hierarchy_location,\n    blocks.display_name_with_location as display_name_with_location,\n    blocks.course_order as course_order,\n    blocks.graded as graded,\n    blocks.block_type as block_type,\n    section_blocks.display_name_with_location as section_with_name,\n    subsection_blocks.display_name_with_location as subsection_with_name\nfrom dim_course_blocks as blocks\nleft join\n    dim_course_blocks as section_blocks\n    on (\n        blocks.section_number = section_blocks.hierarchy_location\n        and blocks.org = section_blocks.org\n        and blocks.course_key = section_blocks.course_key\n        and section_blocks.block_id like '%@chapter+block@%'\n    )\nleft join\n    dim_course_blocks as subsection_blocks\n    on (\n        blocks.subsection_number = subsection_blocks.hierarchy_location\n        and blocks.org = subsection_blocks.org\n        and blocks.course_key = subsection_blocks.course_key\n        and subsection_blocks.block_id like '%@sequential+block@%'\n    )", "relation_name": "`xapi`.`dim_course_blocks`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.430422Z", "completed_at": "2025-05-06T14:23:59.433816Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.434287Z", "completed_at": "2025-05-06T14:23:59.434292Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0049953460693359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_most_recent_enrollment", "compiled": true, "compiled_code": "\n\nwith\n    ranked_enrollments as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            enrollment_mode,\n            enrollment_status,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`enrollment_events`\n    )\n\nselect org, course_key, actor_id, enrollment_status, enrollment_mode, emission_time\nfrom ranked_enrollments\nwhere rn = 1", "relation_name": "`xapi`.`dim_most_recent_enrollment`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.436603Z", "completed_at": "2025-05-06T14:23:59.439759Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.440229Z", "completed_at": "2025-05-06T14:23:59.440234Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004629850387573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_enrollments", "compiled": true, "compiled_code": "select\n    enrollments.emission_time as emission_time,\n    enrollments.org as org,\n    enrollments.course_key as course_key,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    enrollments.actor_id as actor_id,\n    enrollments.enrollment_mode as enrollment_mode,\n    enrollments.enrollment_status as enrollment_status,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom `xapi`.`enrollment_events` enrollments\njoin\n    `xapi`.`dim_course_names` courses on enrollments.course_key = courses.course_key\nleft outer join\n    `xapi`.`dim_user_pii` users\n    on (actor_id like 'mailto:%' and SUBSTRING(actor_id, 8) = users.email)\n    or actor_id = toString(users.external_user_id)", "relation_name": "`xapi`.`fact_enrollments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.442462Z", "completed_at": "2025-05-06T14:23:59.445686Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.446164Z", "completed_at": "2025-05-06T14:23:59.446169Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004723787307739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_instance_enrollments", "compiled": true, "compiled_code": "\n\nwith\n    enrollments as (\n        select\n            emission_time,\n            course_key,\n            enrollment_mode,\n            splitByString('/', verb_id)[-1] as enrollment_status\n        from `xapi`.`enrollment_events`\n    )\n\nselect\n    date_trunc('day', emission_time) as emission_day,\n    enrollments.course_key,\n    enrollments.enrollment_mode as enrollment_mode,\n    enrollments.enrollment_status as enrollment_status,\n    count() as course_enrollment_mode_status_cnt\nfrom enrollments\ngroup by emission_day, course_key, enrollment_mode, enrollment_status", "relation_name": "`xapi`.`fact_instance_enrollments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.448478Z", "completed_at": "2025-05-06T14:23:59.460133Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.460638Z", "completed_at": "2025-05-06T14:23:59.460644Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013182640075683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_enrollment_events_enrollment_status__registered__unregistered.6e8262fef1", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`enrollment_events`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.462890Z", "completed_at": "2025-05-06T14:23:59.466194Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.466667Z", "completed_at": "2025-05-06T14:23:59.466671Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004814863204956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_most_recent_course_grade", "compiled": true, "compiled_code": "\n\nwith\n    ranked_grades as (\n        select\n            emission_time,\n            org,\n            course_key,\n            actor_id,\n            scaled_score as course_grade,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`grading_events`\n        where object_id like '%/course/%'\n    )\n\nselect org, course_key, actor_id, course_grade, emission_time\nfrom ranked_grades\nwhere rn = 1", "relation_name": "`xapi`.`dim_learner_most_recent_course_grade`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.468891Z", "completed_at": "2025-05-06T14:23:59.474096Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.474582Z", "completed_at": "2025-05-06T14:23:59.474586Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006716012954711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_most_recent_course_state", "compiled": true, "compiled_code": "\n\nwith\n    ranked_status as (\n        select\n            org,\n            course_key,\n            actor_id,\n            approving_state,\n            emission_time,\n            row_number() over (\n                partition by org, course_key, actor_id order by emission_time desc\n            ) as rn\n        from `xapi`.`grading_events`\n        where not empty(approving_state)\n    )\n\nselect org, course_key, actor_id, approving_state, emission_time\nfrom ranked_status\nwhere rn = 1", "relation_name": "`xapi`.`dim_learner_most_recent_course_state`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.477026Z", "completed_at": "2025-05-06T14:23:59.480606Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.481085Z", "completed_at": "2025-05-06T14:23:59.481089Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005341529846191406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_last_course_visit", "compiled": true, "compiled_code": "\n\nselect org, course_key, actor_id, max(emission_time) as emission_time\nfrom `xapi`.`navigation_events`\ngroup by org, course_key, actor_id", "relation_name": "`xapi`.`dim_learner_last_course_visit`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.483317Z", "completed_at": "2025-05-06T14:23:59.488731Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.489288Z", "completed_at": "2025-05-06T14:23:59.489293Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007033348083496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_navigation_completion", "compiled": true, "compiled_code": "-- number of learners who've viewed all pages in a section/subsection\nwith\n    visited_subsection_pages as (\n        select distinct\n            date(navigation.emission_time) as visited_on,\n            navigation.org as org,\n            navigation.course_key as course_key,\n            blocks.course_name as course_name,\n            blocks.course_run as course_run,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', blocks.display_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n\n            as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', blocks.display_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            navigation.actor_id as actor_id,\n            navigation.block_id as block_id,\n            users.username as username,\n            users.name as name,\n            users.email as email\n        from `xapi`.`navigation_events` navigation\n        join\n            `xapi`.`dim_course_blocks` blocks\n            on (\n                navigation.course_key = blocks.course_key\n                and navigation.block_id = blocks.block_id\n            )\n        left outer join\n            `xapi`.`dim_user_pii` users\n            on (actor_id like 'mailto:%' and SUBSTRING(actor_id, 8) = users.email)\n            or actor_id = toString(users.external_user_id)\n    ),\n    pages_per_subsection as (\n        select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@vertical+block@%'\n            group by\n                org, course_key, section_number, subsection_number, course_order, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)\n    )\nselect\n    visits.visited_on as visited_on,\n    visits.org as org,\n    visits.course_key as course_key,\n    visits.course_name as course_name,\n    visits.course_run as course_run,\n    pages.section_with_name as section_with_name,\n    pages.subsection_with_name as subsection_with_name,\n    pages.course_order as course_order,\n    pages.item_count as page_count,\n    visits.actor_id as actor_id,\n    visits.block_id as block_id,\n    visits.username as username,\n    visits.name as name,\n    visits.email as email\nfrom visited_subsection_pages visits\njoin\n    pages_per_subsection pages\n    on (\n        visits.org = pages.org\n        and visits.course_key = pages.course_key\n        and visits.section_number = pages.section_number\n        and visits.subsection_number = pages.subsection_number\n    )", "relation_name": "`xapi`.`fact_navigation_completion`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.491544Z", "completed_at": "2025-05-06T14:23:59.495910Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.496417Z", "completed_at": "2025-05-06T14:23:59.496422Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0058939456939697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_section_page_engagement", "compiled": true, "compiled_code": "\n\nwith\n    fact_navigation as (\n        select\n            navigation.emission_time as emission_time,\n            navigation.org as org,\n            navigation.course_key as course_key,\n            navigation.actor_id as actor_id,\n            navigation.block_id as block_id,\n            blocks.display_name_with_location as block_name_with_location\n        from `xapi`.`navigation_events` navigation\n        join\n            `xapi`.`dim_course_blocks` blocks\n            on (\n                navigation.course_key = blocks.course_key\n                and navigation.block_id = blocks.block_id\n            )\n    ),\n    visited_subsection_pages as (\n        select distinct\n            date(emission_time) as visited_on,\n            org,\n            course_key,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', block_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', block_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            actor_id,\n            block_id\n        from fact_navigation\n    ),\n    pages_per_subsection as (\n        select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@vertical+block@%'\n            group by\n                org, course_key, section_number, subsection_number, course_order, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)\n    ),\n    fact_navigation_completion as (\n        select\n            visits.visited_on as visited_on,\n            visits.org as org,\n            visits.course_key as course_key,\n            pages.section_with_name as section_with_name,\n            pages.subsection_with_name as subsection_with_name,\n            pages.item_count as item_count,\n            visits.actor_id as actor_id,\n            visits.block_id as block_id,\n            pages.section_block_id as section_block_id\n        from visited_subsection_pages visits\n        join\n            pages_per_subsection pages\n            on (\n                visits.org = pages.org\n                and visits.course_key = pages.course_key\n                and visits.section_number = pages.section_number\n                and visits.subsection_number = pages.subsection_number\n            )\n    ),\n    subsection_counts as (\n        select\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            count(distinct block_id) as pages_visited,\n            case\n                when pages_visited = 0\n                then 'No pages viewed yet'\n                when pages_visited = item_count\n                then 'All pages viewed'\n                else 'At least one page viewed'\n            end as engagement_level,\n            section_block_id\n        from fact_navigation_completion\n        group by\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            section_block_id\n    ),\n    section_counts as (\n        select\n            org,\n            course_key,\n            actor_id,\n            sum(item_count) as item_count,\n            sum(pages_visited) as pages_visited,\n            case\n                when pages_visited = 0\n                then 'No pages viewed yet'\n                when pages_visited = item_count\n                then 'All pages viewed'\n                else 'At least one page viewed'\n            end as engagement_level,\n            section_block_id\n        from subsection_counts\n        group by org, course_key, section_block_id, actor_id\n    )\n\nselect org, course_key, actor_id, section_block_id, engagement_level\nfrom section_counts", "relation_name": "`xapi`.`fact_section_page_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.498807Z", "completed_at": "2025-05-06T14:23:59.502881Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.503393Z", "completed_at": "2025-05-06T14:23:59.503398Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005701541900634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_section_video_engagement", "compiled": true, "compiled_code": "\n\nwith\n    plays as (\n        select\n            emission_time,\n            org,\n            course_key,\n            object_id,\n            video_duration,\n            video_position,\n            splitByString('/xblock/', object_id)[-1] as video_id,\n            actor_id\n        from `xapi`.`video_playback_events`\n        where verb_id = 'https://w3id.org/xapi/video/verbs/played'\n    ),\n    fact_video_plays as (\n        select\n            plays.emission_time as emission_time,\n            plays.org as org,\n            plays.course_key as course_key,\n            plays.video_id as video_id,\n            blocks.section_number as section_number,\n            blocks.subsection_number as subsection_number,\n            plays.actor_id as actor_id\n        from plays\n        join\n            `xapi`.`dim_course_blocks` blocks\n            on (\n                plays.course_key = blocks.course_key\n                and plays.video_id = blocks.block_id\n            )\n    ),\n    viewed_subsection_videos as (\n        select distinct\n            date(emission_time) as viewed_on,\n            org,\n            course_key,\n            section_number,\n            subsection_number,\n            actor_id,\n            video_id\n        from fact_video_plays\n    ),\n    fact_videos_per_subsection as (\n        select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@video+block@%'\n            group by\n                org, course_key, section_number, subsection_number, course_order, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)\n    ),\n    fact_video_engagement_per_subsection as (\n        select\n            views.org as org,\n            views.course_key as course_key,\n            videos.section_with_name as section_with_name,\n            videos.subsection_with_name as subsection_with_name,\n            videos.item_count as item_count,\n            views.actor_id as actor_id,\n            views.video_id as video_id,\n            videos.section_block_id as section_block_id\n        from viewed_subsection_videos views\n        join\n            fact_videos_per_subsection videos\n            on (\n                views.org = videos.org\n                and views.course_key = videos.course_key\n                and views.section_number = videos.section_number\n                and views.subsection_number = videos.subsection_number\n            )\n    ),\n    subsection_counts as (\n        select\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            count(distinct video_id) as videos_viewed,\n            case\n                when videos_viewed = 0\n                then 'No videos viewed yet'\n                when videos_viewed = item_count\n                then 'All videos viewed'\n                else 'At least one video viewed'\n            end as engagement_level,\n            section_block_id\n        from fact_video_engagement_per_subsection\n        group by\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            section_block_id\n    ),\n    section_counts as (\n        select\n            org,\n            course_key,\n            actor_id,\n            sum(item_count) as item_count,\n            sum(videos_viewed) as videos_viewed,\n            case\n                when videos_viewed = 0\n                then 'No videos viewed yet'\n                when videos_viewed = item_count\n                then 'All videos viewed'\n                else 'At least one video viewed'\n            end as engagement_level,\n            section_block_id\n        from subsection_counts\n        group by org, course_key, section_block_id, actor_id\n    )\nselect org, course_key, actor_id, section_block_id, engagement_level\nfrom section_counts", "relation_name": "`xapi`.`fact_section_video_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.505612Z", "completed_at": "2025-05-06T14:23:59.510259Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.510742Z", "completed_at": "2025-05-06T14:23:59.510747Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006182670593261719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_subsection_page_engagement", "compiled": true, "compiled_code": "\n\nwith\n    fact_navigation as (\n        select\n            navigation.emission_time as emission_time,\n            navigation.org as org,\n            navigation.course_key as course_key,\n            navigation.actor_id as actor_id,\n            navigation.block_id as block_id,\n            blocks.display_name_with_location as block_name_with_location\n        from `xapi`.`navigation_events` navigation\n        join\n            `xapi`.`dim_course_blocks` blocks\n            on (\n                navigation.course_key = blocks.course_key\n                and navigation.block_id = blocks.block_id\n            )\n    ),\n    visited_subsection_pages as (\n        select distinct\n            date(emission_time) as visited_on,\n            org,\n            course_key,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', block_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', block_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            actor_id,\n            block_id\n        from fact_navigation\n    ),\n    pages_per_subsection as (\n        select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@vertical+block@%'\n            group by\n                org, course_key, section_number, subsection_number, course_order, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)\n    ),\n    fact_navigation_completion as (\n        select\n            visits.visited_on as visited_on,\n            visits.org as org,\n            visits.course_key as course_key,\n            pages.section_with_name as section_with_name,\n            pages.subsection_with_name as subsection_with_name,\n            pages.item_count as item_count,\n            visits.actor_id as actor_id,\n            visits.block_id as block_id,\n            pages.subsection_block_id as subsection_block_id\n        from visited_subsection_pages visits\n        join\n            pages_per_subsection pages\n            on (\n                visits.org = pages.org\n                and visits.course_key = pages.course_key\n                and visits.section_number = pages.section_number\n                and visits.subsection_number = pages.subsection_number\n            )\n    ),\n    subsection_counts as (\n        select\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            count(distinct block_id) as pages_visited,\n            case\n                when pages_visited = 0\n                then 'No pages viewed yet'\n                when pages_visited = item_count\n                then 'All pages viewed'\n                else 'At least one page viewed'\n            end as engagement_level,\n            subsection_block_id\n        from fact_navigation_completion\n        group by\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            subsection_block_id\n    )\n\nselect org, course_key, actor_id, subsection_block_id, engagement_level\nfrom subsection_counts", "relation_name": "`xapi`.`fact_subsection_page_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.513008Z", "completed_at": "2025-05-06T14:23:59.517107Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.517616Z", "completed_at": "2025-05-06T14:23:59.517621Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005689859390258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_subsection_video_engagement", "compiled": true, "compiled_code": "\n\nwith\n    plays as (\n        select\n            emission_time,\n            org,\n            course_key,\n            object_id,\n            video_duration,\n            video_position,\n            splitByString('/xblock/', object_id)[-1] as video_id,\n            actor_id\n        from `xapi`.`video_playback_events`\n        where verb_id = 'https://w3id.org/xapi/video/verbs/played'\n    ),\n    fact_video_plays as (\n        select\n            plays.emission_time as emission_time,\n            plays.org as org,\n            plays.course_key as course_key,\n            plays.video_id as video_id,\n            blocks.section_number as section_number,\n            blocks.subsection_number as subsection_number,\n            plays.actor_id as actor_id\n        from plays\n        join\n            `xapi`.`dim_course_blocks` blocks\n            on (\n                plays.course_key = blocks.course_key\n                and plays.video_id = blocks.block_id\n            )\n    ),\n    viewed_subsection_videos as (\n        select distinct\n            date(emission_time) as viewed_on,\n            org,\n            course_key,\n            section_number,\n            subsection_number,\n            actor_id,\n            video_id\n        from fact_video_plays\n    ),\n    fact_videos_per_subsection as (\n        select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@video+block@%'\n            group by\n                org, course_key, section_number, subsection_number, course_order, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)\n    ),\n    fact_video_engagement_per_subsection as (\n        select\n            views.org as org,\n            views.course_key as course_key,\n            videos.section_with_name as section_with_name,\n            videos.subsection_with_name as subsection_with_name,\n            videos.item_count as item_count,\n            views.actor_id as actor_id,\n            views.video_id as video_id,\n            videos.subsection_block_id as subsection_block_id\n        from viewed_subsection_videos views\n        join\n            fact_videos_per_subsection videos\n            on (\n                views.org = videos.org\n                and views.course_key = videos.course_key\n                and views.section_number = videos.section_number\n                and views.subsection_number = videos.subsection_number\n            )\n    ),\n    subsection_counts as (\n        select\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            count(distinct video_id) as videos_viewed,\n            case\n                when videos_viewed = 0\n                then 'No videos viewed yet'\n                when videos_viewed = item_count\n                then 'All videos viewed'\n                else 'At least one video viewed'\n            end as engagement_level,\n            subsection_block_id\n        from fact_video_engagement_per_subsection\n        group by\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            subsection_block_id\n    )\nselect distinct org, course_key, actor_id, subsection_block_id, engagement_level\nfrom subsection_counts", "relation_name": "`xapi`.`fact_subsection_video_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.520022Z", "completed_at": "2025-05-06T14:23:59.523679Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.524147Z", "completed_at": "2025-05-06T14:23:59.524152Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005315542221069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_video_plays", "compiled": true, "compiled_code": "-- model to support number of watches per video\n-- how many partial and completed videos they have seen and how many times each \n-- five-second increment of video was viewed\n-- ref:\n-- https://docs.openedx.org/projects/openedx-aspects/en/latest/reference/course_overview_dashboard.html#engagement-metrics\nwith\n    plays as (\n        select\n            emission_time,\n            org,\n            course_key,\n            object_id,\n            video_duration,\n            video_position,\n            splitByString('/xblock/', object_id)[-1] as video_id,\n            actor_id\n        from `xapi`.`video_playback_events`\n        where verb_id = 'https://w3id.org/xapi/video/verbs/played'\n    )\nselect\n    plays.emission_time as emission_time,\n    plays.org as org,\n    plays.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    plays.video_id as video_id,\n    blocks.block_name as video_name,\n    blocks.display_name_with_location as video_name_with_location,\n    \n    concat(\n        '<a href=\"', plays.object_id, '\" target=\"_blank\">', blocks.display_name_with_location, '</a>'\n    )\n as video_link,\n    blocks.graded as graded,\n    plays.video_position as video_position,\n    plays.video_duration as video_duration,\n    case\n        when video_position/video_duration >= 0.9\n        then '90-100%'\n        when video_position/video_duration >= 0.8 and video_position/video_duration < 0.9\n        then '80-89%'\n        when video_position/video_duration >= 0.7 and video_position/video_duration < 0.8\n        then '70-79%'\n        when video_position/video_duration >= 0.6 and video_position/video_duration < 0.7\n        then '60-69%'\n        when video_position/video_duration >= 0.5 and video_position/video_duration < 0.6\n        then '50-59%'\n        when video_position/video_duration >= 0.4 and video_position/video_duration < 0.5\n        then '40-49%'\n        when video_position/video_duration >= 0.3 and video_position/video_duration < 0.4\n        then '30-39%'\n        when video_position/video_duration >= 0.2 and video_position/video_duration < 0.3\n        then '20-29%'\n        when video_position/video_duration >= 0.1 and video_position/video_duration < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as visualization_bucket,\n    plays.actor_id as actor_id,\n    users.username as username,\n    users.name as name,\n    users.email as email,\n    blocks.section_with_name as section_with_name,\n    blocks.subsection_with_name as subsection_with_name,\n    blocks.course_order as course_order\nfrom plays\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (plays.course_key = blocks.course_key and plays.video_id = blocks.block_id)\nleft outer join\n    `xapi`.`dim_user_pii` users\n    on (actor_id like 'mailto:%' and SUBSTRING(actor_id, 8) = users.email)\n    or actor_id = toString(users.external_user_id)", "relation_name": "`xapi`.`fact_video_plays`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.526357Z", "completed_at": "2025-05-06T14:23:59.529786Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.530319Z", "completed_at": "2025-05-06T14:23:59.530323Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0050241947174072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_watched_video_duration", "compiled": true, "compiled_code": "with\n    data as (\n        select\n            event_id,\n            org,\n            course_key,\n            actor_id,\n            emission_time,\n            video_position,\n            object_id,\n            video_duration,\n            if(\n                verb_id = 'https://w3id.org/xapi/video/verbs/played', 'start', 'end'\n            ) as verb\n        from `xapi`.`video_playback_events`\n        where\n            verb_id in (\n                'https://w3id.org/xapi/video/verbs/played',\n                'http://adlnet.gov/expapi/verbs/completed',\n                'https://w3id.org/xapi/video/verbs/paused',\n                'http://adlnet.gov/expapi/verbs/terminated',\n                'https://w3id.org/xapi/video/verbs/seeked'\n            )\n            and (\n                (\n                    {org_filter:String} <> '[]'\n                    and org in cast({org_filter:String}, 'Array(String)')\n                )\n                or {org_filter:String} = '[]'\n            )\n            and (\n                (\n                    {course_key_filter:String} <> '[]'\n                    and course_key in cast({course_key_filter:String}, 'Array(String)')\n                )\n                or {course_key_filter:String} = '[]'\n            )\n    ),\n    matches as (\n        select\n            *,\n            first_value(event_id) filter (where verb = 'start') over (\n                partition by org, course_key, actor_id, object_id\n                order by emission_time, verb\n                rows between 1 following and unbounded following\n            ) as matching_event_id\n        from data\n    ),\n    final_matches as (\n        select\n            *,\n            last_value(event_id) over (\n                partition by matching_event_id, object_id, actor_id\n                order by emission_time\n                rows between unbounded preceding and unbounded following\n            ) as end_id\n        from matches\n        order by emission_time\n    ),\n    ends as (select * from final_matches where verb = 'end' and event_id = end_id),\n    starts as (select * from final_matches where verb = 'start'),\n    range as (\n        select\n            starts.event_id,\n            starts.org,\n            starts.course_key,\n            starts.actor_id,\n            starts.object_id,\n            starts.video_duration,\n            starts.video_position as start_position,\n            ends.video_position as end_position,\n            starts.emission_time as start_emission_time,\n            ends.emission_time as end_emission_time\n        from starts\n        inner join ends on starts.end_id = ends.event_id\n        where ends.video_position > starts.video_position\n    ),\n    rewatched as (\n        select\n            a.org,\n            a.course_key,\n            a.actor_id,\n            a.object_id,\n            a.video_duration,\n            max(a.end_position) - min(a.start_position) as watched_time,\n            max(b.end_position) - min(b.start_position) as rewatched_time\n        from range a\n        inner join\n            range b\n            on a.org = b.org\n            and a.course_key = b.course_key\n            and a.actor_id = b.actor_id\n            and a.object_id = b.object_id\n        where\n            a.event_id <> b.event_id\n            and (\n                (\n                    b.start_position > a.start_position\n                    and b.start_position < a.end_position\n                )\n                or (\n                    b.end_position > a.start_position\n                    and b.end_position < a.end_position\n                )\n            )\n        group by a.org, a.course_key, a.actor_id, a.object_id, a.video_duration\n    ),\n    watched as (\n        select\n            org,\n            course_key,\n            actor_id,\n            object_id,\n            video_duration,\n            end_position - start_position as watched_time,\n            0 as rewatched_time\n        from range\n        where\n            (org, course_key, actor_id, object_id)\n            not in (select org, course_key, actor_id, object_id from rewatched)\n    ),\n    watched_combined as (\n        select *\n        from watched\n        union all\n        select *\n        from rewatched\n    ),\n    course_data as (\n        select org, course_key, count(distinct block_id) video_count\n        from `xapi`.`dim_course_blocks`\n        where block_type = 'video'\n        group by org, course_key\n    )\nselect\n    coalesce(nullIf(course_data.org, ''), watched_combined.org) as org,\n    coalesce(\n        nullIf(course_data.course_key, ''), watched_combined.course_key\n    ) as course_key,\n    actor_id,\n    video_duration,\n    cast(video_count as Int32) as video_count,\n    sum(watched_time) as watched_time,\n    sum(rewatched_time) as rewatched_time,\n    object_id\nfrom course_data\nfull join watched_combined on watched_combined.course_key = course_data.course_key\ngroup by org, course_key, actor_id, video_count, video_duration, object_id", "relation_name": "`xapi`.`fact_watched_video_duration`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.532534Z", "completed_at": "2025-05-06T14:23:59.538675Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.539197Z", "completed_at": "2025-05-06T14:23:59.539202Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007747650146484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.problem_events", "compiled": true, "compiled_code": "\n\nwith\n    events as (\n        select\n            event_id,\n            cast(emission_time as DateTime) as emission_time,\n            actor_id,\n            object_id,\n            course_key,\n            org,\n            verb_id,\n            JSON_VALUE(event, '$.result.response') as responses,\n            JSONExtractFloat(event, 'result', 'score', 'scaled') as scaled_score,\n            if(\n                verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated',\n                cast(JSON_VALUE(event, '$.result.success') as Bool),\n                false\n            ) as success,\n            toLowCardinality(\n                JSON_VALUE(event, '$.object.definition.interactionType')\n            ) as interaction_type,\n            if(\n                verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated',\n                cast(\n                    JSON_VALUE(\n                        event,\n                        '$.object.definition.extensions.\"http://id.tincanapi.com/extension/attempt-id\"'\n                    ) as Int16\n                ),\n                0\n            ) as attempts,\n            \n    regexpExtract(\n        object_id, 'xblock/([\\w\\d-\\+:@]*@problem\\+block@[\\w\\d][^_\\/]*)(_\\d_\\d)?', 1\n    )\n as problem_id\n        from `xapi`.`xapi_events_all_parsed` xapi\n        where\n            verb_id in (\n                'https://w3id.org/xapi/acrossx/verbs/evaluated',\n                'http://adlnet.gov/expapi/verbs/passed',\n                'http://adlnet.gov/expapi/verbs/asked'\n            )\n    )\nselect\n    events.*,\n    course_name,\n    block_name,\n    display_name_with_location,\n    \n    concat(\n        '<a href=\"', object_id, '\" target=\"_blank\">', display_name_with_location, '</a>'\n    )\n as problem_link,\n    graded,\n    course_order\nfrom events\nleft join\n    `xapi`.`dim_course_blocks` blocks\n    on (events.course_key = blocks.course_key and events.problem_id = blocks.block_id)", "relation_name": "`xapi`.`problem_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.541496Z", "completed_at": "2025-05-06T14:23:59.545472Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.545966Z", "completed_at": "2025-05-06T14:23:59.545971Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005588531494140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_dim_most_recent_enrollment_enrollment_status__registered__unregistered.85182a49cb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`dim_most_recent_enrollment`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.548227Z", "completed_at": "2025-05-06T14:23:59.552042Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.552544Z", "completed_at": "2025-05-06T14:23:59.552549Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005336284637451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_enrollments_enrollment_status__registered__unregistered.f8d10203f4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_enrollments`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.554852Z", "completed_at": "2025-05-06T14:23:59.558832Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.559316Z", "completed_at": "2025-05-06T14:23:59.559321Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005581855773925781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_instance_enrollments_enrollment_status__registered__unregistered.305ffdf696", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_instance_enrollments`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.561578Z", "completed_at": "2025-05-06T14:23:59.565335Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.565814Z", "completed_at": "2025-05-06T14:23:59.565819Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0052890777587890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_student_status", "compiled": true, "compiled_code": "select\n    fes.org as org,\n    fes.course_key as course_key,\n    fes.actor_id as actor_id,\n    courses.course_name as course_name,\n    courses.course_run as course_run,\n    if(empty(approving_state), 'failed', approving_state) as approving_state,\n    enrollment_mode,\n    enrollment_status,\n    course_grade,\n    case\n        when course_grade >= 0.9\n        then '90-100%'\n        when course_grade >= 0.8 and course_grade < 0.9\n        then '80-89%'\n        when course_grade >= 0.7 and course_grade < 0.8\n        then '70-79%'\n        when course_grade >= 0.6 and course_grade < 0.7\n        then '60-69%'\n        when course_grade >= 0.5 and course_grade < 0.6\n        then '50-59%'\n        when course_grade >= 0.4 and course_grade < 0.5\n        then '40-49%'\n        when course_grade >= 0.3 and course_grade < 0.4\n        then '30-39%'\n        when course_grade >= 0.2 and course_grade < 0.3\n        then '20-29%'\n        when course_grade >= 0.1 and course_grade < 0.2\n        then '10-19%'\n        else '0-9%'\n    end as grade_bucket,\n    users.username as username,\n    users.name as name,\n    users.email as email,\n    fes.emission_time as enrolled_at\nfrom `xapi`.`dim_most_recent_enrollment` fes\nleft join\n    `xapi`.`dim_learner_most_recent_course_state` lg\n    on fes.org = lg.org\n    and fes.course_key = lg.course_key\n    and fes.actor_id = lg.actor_id\nleft join\n    `xapi`.`dim_learner_most_recent_course_grade` ls\n    on fes.org = ls.org\n    and fes.course_key = ls.course_key\n    and fes.actor_id = ls.actor_id\njoin\n    `xapi`.`dim_course_names` courses\n    on fes.org = courses.org\n    and fes.course_key = courses.course_key\nleft outer join\n    `xapi`.`dim_user_pii` users\n    on (actor_id like 'mailto:%' and SUBSTRING(actor_id, 8) = users.email)\n    or actor_id = toString(users.external_user_id)", "relation_name": "`xapi`.`dim_student_status`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.568011Z", "completed_at": "2025-05-06T14:23:59.572982Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.573486Z", "completed_at": "2025-05-06T14:23:59.573491Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0065157413482666016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_dim_learner_most_recent_course_state_approving_state__passed__failed.b6c7cf1dfb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        approving_state as value_field,\n        count(*) as n_records\n\n    from `xapi`.`dim_learner_most_recent_course_state`\n    group by approving_state\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'passed','failed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.575724Z", "completed_at": "2025-05-06T14:23:59.581250Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.581726Z", "completed_at": "2025-05-06T14:23:59.581730Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007063627243041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_section_page_engagement_engagement_level__No_pages_viewed_yet__All_pages_viewed__At_least_one_page_viewed.8df1a6eaec", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        engagement_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_section_page_engagement`\n    group by engagement_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'No pages viewed yet','All pages viewed','At least one page viewed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.584030Z", "completed_at": "2025-05-06T14:23:59.589213Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.589698Z", "completed_at": "2025-05-06T14:23:59.589702Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00672149658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_section_video_engagement_engagement_level__No_videos_viewed_yet__All_videos_viewed__At_least_one_video_viewed.0c2dcd0513", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        engagement_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_section_video_engagement`\n    group by engagement_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'No videos viewed yet','All videos viewed','At least one video viewed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.592015Z", "completed_at": "2025-05-06T14:23:59.595487Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.595959Z", "completed_at": "2025-05-06T14:23:59.595964Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005048036575317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_pageview_engagement", "compiled": true, "compiled_code": "with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            'subsection' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_page_engagement\n        from `xapi`.`fact_subsection_page_engagement`\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            'section' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_page_engagement\n        from `xapi`.`fact_section_page_engagement`\n    ),\n    page_engagement as (\n        select *\n        from subsection_engagement\n        union all\n        select *\n        from section_engagement\n    )\n\nselect\n    pv.org as org,\n    pv.course_key as course_key,\n    course_blocks.course_run as course_run,\n    course_blocks.display_name_with_location as section_subsection_name,\n    pv.content_level as content_level,\n    pv.actor_id as actor_id,\n    pv.section_subsection_page_engagement as section_subsection_page_engagement,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom page_engagement pv\njoin\n    `xapi`.`dim_course_blocks` course_blocks\n    on (\n        pv.org = course_blocks.org\n        and pv.course_key = course_blocks.course_key\n        and pv.block_id = course_blocks.block_id\n    )\nleft outer join\n    `xapi`.`dim_user_pii` users\n    on (pv.actor_id like 'mailto:%' and SUBSTRING(pv.actor_id, 8) = users.email)\n    or pv.actor_id = toString(users.external_user_id)", "relation_name": "`xapi`.`fact_pageview_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.598172Z", "completed_at": "2025-05-06T14:23:59.603842Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.604342Z", "completed_at": "2025-05-06T14:23:59.604347Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007215738296508789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_subsection_page_engagement_engagement_level__No_pages_viewed_yet__All_pages_viewed__At_least_one_page_viewed.f4c62badeb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        engagement_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_subsection_page_engagement`\n    group by engagement_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'No pages viewed yet','All pages viewed','At least one page viewed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.606538Z", "completed_at": "2025-05-06T14:23:59.609925Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.610457Z", "completed_at": "2025-05-06T14:23:59.610463Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0049822330474853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_video_engagement", "compiled": true, "compiled_code": "with\n    subsection_engagement as (\n        select\n            org,\n            course_key,\n            'subsection' as content_level,\n            actor_id,\n            subsection_block_id as block_id,\n            engagement_level as section_subsection_video_engagement\n        from `xapi`.`fact_subsection_video_engagement`\n    ),\n    section_engagement as (\n        select\n            org,\n            course_key,\n            'section' as content_level,\n            actor_id,\n            section_block_id as block_id,\n            engagement_level as section_subsection_video_engagement\n        from `xapi`.`fact_section_video_engagement`\n    ),\n    video_engagement as (\n        select *\n        from subsection_engagement\n        union all\n        select *\n        from section_engagement\n    )\nselect\n    ve.org as org,\n    ve.course_key as course_key,\n    course_blocks.course_run as course_run,\n    course_blocks.display_name_with_location as section_subsection_name,\n    ve.content_level as content_level,\n    ve.actor_id as actor_id,\n    ve.section_subsection_video_engagement as section_subsection_video_engagement,\n    users.username as username,\n    users.name as name,\n    users.email as email\nfrom video_engagement ve\njoin\n    `xapi`.`dim_course_blocks` course_blocks\n    on (\n        ve.org = course_blocks.org\n        and ve.course_key = course_blocks.course_key\n        and ve.block_id = course_blocks.block_id\n    )\nleft outer join\n    `xapi`.`dim_user_pii` users\n    on (ve.actor_id like 'mailto:%' and SUBSTRING(ve.actor_id, 8) = users.email)\n    or ve.actor_id = toString(users.external_user_id)", "relation_name": "`xapi`.`fact_video_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.612807Z", "completed_at": "2025-05-06T14:23:59.616539Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.617030Z", "completed_at": "2025-05-06T14:23:59.617047Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005293369293212891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_subsection_video_engagement_engagement_level__No_videos_viewed_yet__All_videos_viewed__At_least_one_video_viewed.11e68f3c04", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        engagement_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_subsection_video_engagement`\n    group by engagement_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'No videos viewed yet','All videos viewed','At least one video viewed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.619303Z", "completed_at": "2025-05-06T14:23:59.622463Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.622938Z", "completed_at": "2025-05-06T14:23:59.622943Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004736185073852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_first_response", "compiled": true, "compiled_code": "\n\nselect\n    org,\n    course_key,\n    object_id,\n    problem_id,\n    actor_id,\n    interaction_type,\n    MIN(attempts) as attempt,\n    argMin(success, attempts) as success,\n    argMin(emission_time, attempts) as emission_time,\n    argMin(responses, attempts) as responses,\n    argMin(scaled_score, attempts) as scaled_score\nfrom `xapi`.`problem_events`\nwhere verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\ngroup by org, course_key, object_id, problem_id, actor_id, interaction_type", "relation_name": "`xapi`.`dim_learner_first_response`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.625164Z", "completed_at": "2025-05-06T14:23:59.628394Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.628894Z", "completed_at": "2025-05-06T14:23:59.628899Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004824161529541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_first_success_response", "compiled": true, "compiled_code": "\n\nwith\n    problem_events as (\n        select\n            org,\n            course_key,\n            object_id,\n            problem_id,\n            actor_id,\n            interaction_type,\n            argMin(attempts, emission_time) as attempt,\n            success,\n            argMin(responses, emission_time) as responses,\n            argMin(scaled_score, emission_time) as scaled_score,\n            MIN(emission_time) as _emission_time\n        from `xapi`.`problem_events`\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated' and success\n        group by\n            org, course_key, object_id, problem_id, actor_id, interaction_type, success\n    )\nselect\n    org,\n    course_key,\n    object_id,\n    problem_id,\n    actor_id,\n    interaction_type,\n    attempt,\n    success,\n    responses,\n    scaled_score,\n    _emission_time as emission_time\nfrom problem_events", "relation_name": "`xapi`.`dim_learner_first_success_response`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.631127Z", "completed_at": "2025-05-06T14:23:59.634692Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.635333Z", "completed_at": "2025-05-06T14:23:59.635338Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005290985107421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_last_response", "compiled": true, "compiled_code": "\n\nselect\n    org,\n    course_key,\n    object_id,\n    problem_id,\n    actor_id,\n    interaction_type,\n    MAX(attempts) as attempt,\n    argMax(success, attempts) as success,\n    argMax(emission_time, attempts) as emission_time,\n    argMax(responses, attempts) as responses,\n    argMax(scaled_score, attempts) as scaled_score\nfrom `xapi`.`problem_events`\nwhere verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\ngroup by org, course_key, object_id, problem_id, actor_id, interaction_type", "relation_name": "`xapi`.`dim_learner_last_response`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.638366Z", "completed_at": "2025-05-06T14:23:59.643280Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.643902Z", "completed_at": "2025-05-06T14:23:59.643907Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007096052169799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.dim_learner_response_attempt", "compiled": true, "compiled_code": "-- select one record per (learner, problem, course, org) tuple\n-- contains either the first successful attempt\n-- or the most recent unsuccessful attempt\n-- find the timestamp of the earliest successful response\n-- this will be used to pick the xAPI event corresponding to that submission\n\n\nwith\n    responses as (\n        select\n            emission_time,\n            org,\n            course_key,\n            object_id,\n            problem_id,\n            actor_id,\n            success,\n            responses,\n            attempts,\n            interaction_type\n        from `xapi`.`problem_events`\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\n    ),\n    response_status as (\n        select\n            org,\n            course_key,\n            problem_id,\n            actor_id,\n            MIN(case when success then emission_time else NULL end) as first_success_at,\n            MAX(emission_time) as last_attempt_at\n        from responses\n        group by org, course_key, problem_id, actor_id\n    )\nselect\n    org,\n    course_key,\n    problem_id,\n    actor_id,\n    first_success_at,\n    last_attempt_at,\n    coalesce(first_success_at, last_attempt_at) as emission_time\nfrom response_status", "relation_name": "`xapi`.`dim_learner_response_attempt`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.646925Z", "completed_at": "2025-05-06T14:23:59.652749Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.653257Z", "completed_at": "2025-05-06T14:23:59.653262Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0077304840087890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_section_problem_engagement", "compiled": true, "compiled_code": "\n\nwith\n    fact_problem_responses as (\n        select\n            emission_time as emission_time,\n            org as org,\n            course_key as course_key,\n            course_name as course_name,\n            problem_id as problem_id,\n            block_name as problem_name,\n            display_name_with_location as problem_name_with_location,\n            problem_link,\n            graded as graded,\n            course_order as course_order,\n            actor_id as actor_id,\n            responses as responses,\n            success as success,\n            attempts as attempts,\n            interaction_type as interaction_type\n        from `xapi`.`problem_events`\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\n        group by\n            -- multi-part questions include an extra record for the response to the\n            -- first\n            -- part of the question. this group by clause eliminates the duplicate\n            -- record\n            emission_time,\n            org,\n            course_key,\n            course_name,\n            problem_id,\n            problem_name,\n            problem_name_with_location,\n            problem_link,\n            actor_id,\n            responses,\n            success,\n            attempts,\n            course_order,\n            graded,\n            interaction_type\n    ),\n    attempted_subsection_problems as (\n        select distinct\n            date(emission_time) as attempted_on,\n            org,\n            course_key,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', problem_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', problem_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            course_order as course_order,\n            graded,\n            actor_id,\n            problem_id\n        from fact_problem_responses\n    ),\n    problems_per_subsection as (\n        select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@problem+block@%'\n            group by\n                org, course_key, section_number, subsection_number, course_order, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)\n    ),\n    fact_problem_engagement_per_subsection as (\n        select\n            attempts.org as org,\n            attempts.course_key as course_key,\n            problems.section_with_name as section_with_name,\n            problems.subsection_with_name as subsection_with_name,\n            problems.item_count as item_count,\n            attempts.actor_id as actor_id,\n            attempts.problem_id as problem_id,\n            problems.section_block_id as section_block_id\n        from attempted_subsection_problems attempts\n        join\n            problems_per_subsection problems\n            on (\n                attempts.org = problems.org\n                and attempts.course_key = problems.course_key\n                and attempts.section_number = problems.section_number\n                and attempts.subsection_number = problems.subsection_number\n            )\n    ),\n    subsection_counts as (\n        select\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            count(distinct problem_id) as problems_attempted,\n            case\n                when problems_attempted = 0\n                then 'No problems attempted yet'\n                when problems_attempted = item_count\n                then 'All problems attempted'\n                else 'At least one problem attempted'\n            end as engagement_level,\n            section_block_id\n        from fact_problem_engagement_per_subsection\n        group by\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            section_block_id\n    ),\n    section_counts as (\n        select\n            org,\n            course_key,\n            actor_id,\n            sum(item_count) as item_count,\n            sum(problems_attempted) as problems_attempted,\n            case\n                when problems_attempted = 0\n                then 'No problems attempted yet'\n                when problems_attempted = item_count\n                then 'All problems attempted'\n                else 'At least one problem attempted'\n            end as engagement_level,\n            section_block_id\n        from subsection_counts\n        group by org, course_key, section_block_id, actor_id\n    )\n\nselect org, course_key, actor_id, section_block_id, engagement_level\nfrom section_counts", "relation_name": "`xapi`.`fact_section_problem_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.655530Z", "completed_at": "2025-05-06T14:23:59.659808Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.660295Z", "completed_at": "2025-05-06T14:23:59.660300Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005816459655761719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_subsection_problem_engagement", "compiled": true, "compiled_code": "\n\nwith\n    fact_problem_responses as (\n        select\n            emission_time as emission_time,\n            org as org,\n            course_key as course_key,\n            course_name as course_name,\n            problem_id as problem_id,\n            block_name as problem_name,\n            display_name_with_location as problem_name_with_location,\n            problem_link,\n            graded as graded,\n            course_order as course_order,\n            actor_id as actor_id,\n            responses as responses,\n            success as success,\n            attempts as attempts,\n            interaction_type as interaction_type\n        from `xapi`.`problem_events`\n        where verb_id = 'https://w3id.org/xapi/acrossx/verbs/evaluated'\n        group by\n            -- multi-part questions include an extra record for the response to the\n            -- first\n            -- part of the question. this group by clause eliminates the duplicate\n            -- record\n            emission_time,\n            org,\n            course_key,\n            course_name,\n            problem_id,\n            problem_name,\n            problem_name_with_location,\n            problem_link,\n            actor_id,\n            responses,\n            success,\n            attempts,\n            course_order,\n            graded,\n            interaction_type\n    ),\n    attempted_subsection_problems as (\n        select distinct\n            date(emission_time) as attempted_on,\n            org,\n            course_key,\n            \n    concat(\n        splitByString(\n            ':', splitByString(' - ', problem_name_with_location)[1], 1\n        )[1],\n        ':0:0'\n    )\n as section_number,\n            \n    concat(\n        arrayStringConcat(\n            splitByString(\n                ':', splitByString(' - ', problem_name_with_location)[1], 2\n            ),\n            ':'\n        ),\n        ':0'\n    )\n\n            as subsection_number,\n            course_order as course_order,\n            graded,\n            actor_id,\n            problem_id\n        from fact_problem_responses\n    ),\n    problems_per_subsection as (\n        select * from (\n    with\n        items_per_subsection as (\n            select\n                org,\n                course_key,\n                section_number,\n                subsection_number,\n                course_order,\n                graded,\n                count(*) as item_count\n            from `xapi`.`dim_course_blocks`\n            where block_id like '%@problem+block@%'\n            group by\n                org, course_key, section_number, subsection_number, course_order, graded\n        )\n\n    select\n        ips.org as org,\n        ips.course_key as course_key,\n        ips.section_number as section_number,\n        section_blocks.display_name_with_location as section_with_name,\n        ips.subsection_number as subsection_number,\n        subsection_blocks.display_name_with_location as subsection_with_name,\n        ips.course_order as course_order,\n        ips.graded as graded,\n        ips.item_count as item_count,\n        subsection_blocks.block_id as subsection_block_id,\n        section_blocks.block_id as section_block_id\n    from items_per_subsection ips\n    left join\n        `xapi`.`dim_course_blocks` section_blocks\n        on (\n            ips.section_number = section_blocks.hierarchy_location\n            and ips.org = section_blocks.org\n            and ips.course_key = section_blocks.course_key\n            and section_blocks.block_id like '%@chapter+block@%'\n        )\n    left join\n        `xapi`.`dim_course_blocks` subsection_blocks\n        on (\n            ips.subsection_number = subsection_blocks.hierarchy_location\n            and ips.org = subsection_blocks.org\n            and ips.course_key = subsection_blocks.course_key\n            and subsection_blocks.block_id like '%@sequential+block@%'\n        )\n)\n    ),\n    fact_problem_engagement_per_subsection as (\n        select\n            attempts.org as org,\n            attempts.course_key as course_key,\n            problems.section_with_name as section_with_name,\n            problems.subsection_with_name as subsection_with_name,\n            problems.item_count as item_count,\n            attempts.actor_id as actor_id,\n            attempts.problem_id as problem_id,\n            problems.subsection_block_id as subsection_block_id\n        from attempted_subsection_problems attempts\n        join\n            problems_per_subsection problems\n            on (\n                attempts.org = problems.org\n                and attempts.course_key = problems.course_key\n                and attempts.section_number = problems.section_number\n                and attempts.subsection_number = problems.subsection_number\n            )\n    ),\n    subsection_counts as (\n        select\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            count(distinct problem_id) as problems_attempted,\n            case\n                when problems_attempted = 0\n                then 'No problems attempted yet'\n                when problems_attempted = item_count\n                then 'All problems attempted'\n                else 'At least one problem attempted'\n            end as engagement_level,\n            subsection_block_id\n        from fact_problem_engagement_per_subsection\n        group by\n            org,\n            course_key,\n            section_with_name,\n            subsection_with_name,\n            actor_id,\n            item_count,\n            subsection_block_id\n    )\n\nselect org, course_key, actor_id, subsection_block_id, engagement_level\nfrom subsection_counts", "relation_name": "`xapi`.`fact_subsection_problem_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.662537Z", "completed_at": "2025-05-06T14:23:59.666291Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.666750Z", "completed_at": "2025-05-06T14:23:59.666755Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005299806594848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_dim_student_status_enrollment_status__registered__unregistered.e175e06448", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        enrollment_status as value_field,\n        count(*) as n_records\n\n    from `xapi`.`dim_student_status`\n    group by enrollment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'registered','unregistered'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.668871Z", "completed_at": "2025-05-06T14:23:59.675389Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.675841Z", "completed_at": "2025-05-06T14:23:59.675846Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007956504821777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_pageview_engagement_content_level__section__subsection.dd9e9af3ed", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        content_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_pageview_engagement`\n    group by content_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'section','subsection'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.678020Z", "completed_at": "2025-05-06T14:23:59.681868Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.682344Z", "completed_at": "2025-05-06T14:23:59.682348Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00535893440246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_video_engagement_content_level__section__subsection.636c5e7005", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        content_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_video_engagement`\n    group by content_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'section','subsection'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.684593Z", "completed_at": "2025-05-06T14:23:59.688321Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.688786Z", "completed_at": "2025-05-06T14:23:59.688790Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0052187442779541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_video_engagement_section_subsection_video_engagement__No_videos_viewed_yet__At_least_one_video_viewed__All_videos_viewed.91f6ccbf80", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        section_subsection_video_engagement as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_video_engagement`\n    group by section_subsection_video_engagement\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'No videos viewed yet','At least one video viewed','All videos viewed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.691032Z", "completed_at": "2025-05-06T14:23:59.694278Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.694753Z", "completed_at": "2025-05-06T14:23:59.694757Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0047953128814697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aspects.fact_learner_response_attempts", "compiled": true, "compiled_code": "-- select one record per (learner, problem, course, org) tuple\n-- contains either the first successful attempt\n-- or the most recent unsuccessful attempt\n-- find the timestamp of the earliest successful response\n-- this will be used to pick the xAPI event corresponding to that submission\nwith\n    full_responses as (\n        select\n            events.emission_time as emission_time,\n            events.org as org,\n            events.course_key as course_key,\n            events.problem_id as problem_id,\n            events.object_id as object_id,\n            events.actor_id as actor_id,\n            events.responses as responses,\n            events.success as success,\n            events.attempts as attempts,\n            events.interaction_type as interaction_type,\n            events.problem_link as problem_link\n        from `xapi`.`problem_events` events\n        join\n            `xapi`.`dim_learner_response_attempt` using (\n                org, course_key, problem_id, actor_id, emission_time\n            )\n    )\n\nselect\n    full_responses.emission_time as emission_time,\n    full_responses.org as org,\n    full_responses.course_key as course_key,\n    blocks.course_name as course_name,\n    blocks.course_run as course_run,\n    full_responses.problem_id as problem_id,\n    blocks.block_name as problem_name,\n    blocks.display_name_with_location as problem_name_with_location,\n    blocks.course_order as course_order,\n    full_responses.problem_link as problem_link,\n    full_responses.actor_id as actor_id,\n    full_responses.responses as responses,\n    full_responses.success as success,\n    full_responses.attempts as attempts,\n    full_responses.interaction_type as interaction_type,\n    blocks.graded\nfrom full_responses\njoin\n    `xapi`.`dim_course_blocks` blocks\n    on (\n        full_responses.course_key = blocks.course_key\n        and full_responses.problem_id = blocks.block_id\n    )", "relation_name": "`xapi`.`fact_learner_response_attempts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.696931Z", "completed_at": "2025-05-06T14:23:59.702331Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.702825Z", "completed_at": "2025-05-06T14:23:59.702831Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006943702697753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_section_problem_engagement_engagement_level__No_problems_attempted_yet__All_problems_attempted__At_least_one_problem_attempted.59b85f0027", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        engagement_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_section_problem_engagement`\n    group by engagement_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'No problems attempted yet','All problems attempted','At least one problem attempted'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-06T14:23:59.705025Z", "completed_at": "2025-05-06T14:23:59.708651Z"}, {"name": "execute", "started_at": "2025-05-06T14:23:59.709139Z", "completed_at": "2025-05-06T14:23:59.709143Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005147218704223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.aspects.accepted_values_fact_subsection_problem_engagement_engagement_level__No_problems_attempted_yet__All_problems_attempted__At_least_one_problem_attempted.7f92082eba", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        engagement_level as value_field,\n        count(*) as n_records\n\n    from `xapi`.`fact_subsection_problem_engagement`\n    group by engagement_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'No problems attempted yet','All problems attempted','At least one problem attempted'\n)\n\n\n", "relation_name": null}], "elapsed_time": 0.6102542877197266, "args": {"exclude": [], "compile": true, "introspect": true, "partial_parse_file_diff": true, "strict_mode": false, "use_colors": true, "project_dir": "/home/runner/work/aspects-dbt/aspects-dbt", "select": [], "invocation_command": "dbt docs generate", "warn_error_options": {"include": [], "exclude": []}, "defer": false, "print": true, "show_resource_report": false, "static": false, "use_colors_file": true, "log_level": "info", "log_path": "/home/runner/work/aspects-dbt/aspects-dbt/logs", "cache_selected_only": false, "enable_legacy_logger": false, "require_resource_names_without_spaces": false, "send_anonymous_usage_stats": true, "log_format": "default", "populate_cache": true, "printer_width": 80, "source_freshness_run_project_hooks": false, "log_file_max_bytes": 10485760, "log_level_file": "debug", "partial_parse": true, "require_explicit_package_overrides_for_builtin_materializations": true, "vars": {}, "log_format_file": "debug", "profiles_dir": "./.github/", "macro_debugging": false, "quiet": false, "write_json": true, "empty_catalog": false, "version_check": true, "favor_state": false, "indirect_selection": "eager", "which": "generate", "static_parser": true}}